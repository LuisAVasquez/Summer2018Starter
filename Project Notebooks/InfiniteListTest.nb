(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     90819,       1756]
NotebookOptionsPosition[     87191,       1681]
NotebookOutlinePosition[     87888,       1704]
CellTagsIndexPosition[     87800,       1699]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", 
     "\"\<InfiniteLists.m\>\""}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7401583216205473`*^9, 3.740158344387669*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b889ad9a-2f52-4d65-bd66-39d7b5d48408"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InfiniteList", "[", 
  RowBox[{"1", ",", 
   RowBox[{"#", "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7401583611348114`*^9, 3.740158374812214*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"7cd2daea-1a82-40cd-8b1b-7bd380d5cd5f"],

Cell[BoxData[
 RowBox[{"InfiniteList", "[", 
  RowBox[{"1", ",", 
   RowBox[{"#1", "&"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.740158375533312*^9, 3.7401584089977355`*^9, {3.7401584721427965`*^9, 
   3.740158499510623*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"f0f8184e-c54d-469a-b043-e341a06f721e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myInitialCondition", "=", 
  RowBox[{"InfiniteList", "[", 
   RowBox[{"0", ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "\[Equal]", "0"}], ",", "1", ",", "0"}], "]"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.74015837957551*^9, 3.7401583844793453`*^9}, 
   3.7401662898728933`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"a701d001-c860-4923-9b51-891db1381124"],

Cell[BoxData[
 RowBox[{"InfiniteList", "[", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"#1", "\[Equal]", "0"}], ",", "1", ",", "0"}], "]"}], "&"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.740166293304738*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"3e1ed93f-9db4-4985-80f6-4f91ee15e036"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InfiniteCellularAutomatonPlot1", "[", 
  RowBox[{"30", ",", "myInitialCondition", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "10"}], "}"}], ",", "10"}], "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"337ea904-e154-49c1-a48f-21eb77f5937d"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0}, {1, 0, 0, 1, 1, 0, 1, 1,
    1, 0, 0, 0, 1}, {1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1}, {0, 0, 1, 1, 0, 
   0, 0, 0, 0, 0, 1, 1, 1}, {0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1}, {0, 0, 0,
    0, 1, 0, 0, 0, 1, 1, 1, 1, 1}, {1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1}, {
   0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 
   1, 1}, {1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 0, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1}}, {{0, 0}, {13, 11}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{3.7401663042903795`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"3e8e37ee-4a6c-4f0a-b43d-777c4062f830"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"myInfiniteMatrix", "=", 
  RowBox[{"InfiniteMatrix", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Function]", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"OddQ", "[", "x", "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"EvenQ", "[", "y", "]"}], "&&", 
         RowBox[{"y", ">", "x"}]}], ",", "1", ",", "0"}], "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OddQ", "[", "y", "]"}], "&&", 
         RowBox[{"y", ">", "x"}]}], ",", "1", ",", "0"}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7401665924046593`*^9, 3.7401667134003844`*^9}, {
  3.740166806913219*^9, 3.7401668145047245`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"3b1dbc8c-bb95-4508-9329-1cf6124bf332"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myInfiniteMatrix", "=", 
  RowBox[{"InfiniteMatrix", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Function]", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"OddQ", "[", "x", "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"EvenQ", "[", "y", "]"}], "&&", 
         RowBox[{"y", ">", "x"}]}], ",", "1", ",", "0"}], "]"}], ",", "0"}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7401731799864693`*^9, 3.7401731810192347`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"d958348d-20e7-48af-ac20-291ea3438ee7"],

Cell[BoxData[
 RowBox[{"InfiniteList", "[", 
  RowBox[{"1", ",", 
   RowBox[{"Function", "[", 
    RowBox[{"x$", ",", 
     RowBox[{"InfiniteList", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Function", "[", 
        RowBox[{"y$", ",", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"OddQ", "[", "x", "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"EvenQ", "[", "y", "]"}], "&&", 
                 RowBox[{"y", ">", "x"}]}], ",", "1", ",", "0"}], "]"}], ",", 
              "0"}], "]"}]}], "]"}], "[", 
          RowBox[{"x$", ",", "y$"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.7401666966729684`*^9, 3.7401667141705275`*^9}, 
   3.7401668224016037`*^9, 3.740173182352088*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"ca1b9f69-3f20-42d9-9c08-27321e39e585"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InfiniteTake", "[", 
   RowBox[{"myInfiniteMatrix", ",", "12", ",", "12"}], "]"}], "//", 
  RowBox[{
   RowBox[{"GraphPlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
     RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.7401666993461056`*^9, 3.7401667814746447`*^9}, {
  3.7401684322061496`*^9, 3.7401684342094407`*^9}, {3.740173191953773*^9, 
  3.7401732095387325`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"651d0179-31d5-454c-9cca-12ed996cbc25"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{2.0452849664981594`, 1.1964003371658785`}, {
    2.7373081140761935`, 2.284623708877201}, {1.9264898022223218`, 
    0.7471019875706967}, {2.9348460827868066`, 1.1504693660351564`}, {
    1.409484790187728, 0.2968181675084475}, {2.446750358103776, 
    0.30073157071487133`}, {0.6867356907423969, 0.09811102437249719}, {
    1.7282232019522872`, 0.}, {0., 1.0321237117853124`}, {1.0126220600897597`,
     0.7442860931742777}, {0.11749885725822784`, 2.2074375702966282`}, {
    0.8989443086738284, 1.191577228530305}}, {
     {RGBColor[0.5, 0., 0.], Arrowheads[{{0.02920229737571481, 0.7}}], 
      ArrowBox[{1, 2}], ArrowBox[{1, 4}], ArrowBox[{1, 6}], ArrowBox[{1, 8}], 
      ArrowBox[{1, 10}], ArrowBox[{1, 12}], ArrowBox[{3, 4}], 
      ArrowBox[{3, 6}], ArrowBox[{3, 8}], ArrowBox[{3, 10}], 
      ArrowBox[{3, 12}], ArrowBox[{5, 6}], ArrowBox[{5, 8}], 
      ArrowBox[{5, 10}], ArrowBox[{5, 12}], ArrowBox[{7, 8}], 
      ArrowBox[{7, 10}], ArrowBox[{7, 12}], ArrowBox[{9, 10}], 
      ArrowBox[{9, 12}], ArrowBox[{11, 12}]}, {InsetBox[
       FrameBox["1",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 1], InsetBox[
       FrameBox["2",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 2], InsetBox[
       FrameBox["3",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 3], InsetBox[
       FrameBox["4",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 4], InsetBox[
       FrameBox["5",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 5], InsetBox[
       FrameBox["6",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 6], InsetBox[
       FrameBox["7",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 7], InsetBox[
       FrameBox["8",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 8], InsetBox[
       FrameBox["9",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 9], InsetBox[
       FrameBox["10",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 10], InsetBox[
       FrameBox["11",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 11], InsetBox[
       FrameBox["12",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 12]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{2.0452849664981594`, 1.1964003371658785`}, {
     2.7373081140761935`, 2.284623708877201}, {1.9264898022223218`, 
     0.7471019875706967}, {2.9348460827868066`, 1.1504693660351564`}, {
     1.409484790187728, 0.2968181675084475}, {2.446750358103776, 
     0.30073157071487133`}, {0.6867356907423969, 0.09811102437249719}, {
     1.7282232019522872`, 0.}, {0., 1.0321237117853124`}, {
     1.0126220600897597`, 0.7442860931742777}, {0.11749885725822784`, 
     2.2074375702966282`}, {0.8989443086738284, 1.191577228530305}}]& ],
  AspectRatio->Automatic,
  FrameTicks->None,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{{3.740166725018835*^9, 3.740166781975299*^9}, 
   3.7401668249757957`*^9, 3.740168435226799*^9, {3.740173186712929*^9, 
   3.740173209939251*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"e612fd89-fa19-4790-9520-e0ee3188c289"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InfiniteTake", "[", 
   RowBox[{
    RowBox[{"InfiniteMatrix", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Function]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "\[Equal]", "0"}], ",", "1", ",", 
        "0"}], "]"}]}], "]"}], ",", "12", ",", "12"}], "]"}], "//", 
  RowBox[{
   RowBox[{"GraphPlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
     RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.740180656491149*^9, 3.7401806872520666`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"b25de540-17e9-4b41-a979-04b3bca873c4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{1.3204089500004594`, 1.2700701055463972`}, {
    0.5826637043679795, 1.087204337809796}, {1.1407686462624076`, 
    2.4764783471189444`}, {0., 1.2611618280252628`}, {1.7287756870009785`, 
    0.}, {0.8677335101310342, 1.9653466196463107`}, {2.558559185278368, 
    0.6813307937073931}, {0.16450484614353544`, 0.5727500688928581}, {
    1.892865173394338, 2.477655638562067}, {1.0894551406883903`, 
    0.24122748587310672`}, {2.6446150835705957`, 1.6217035936059128`}, {
    0.3791589258816901, 1.9169686647453088`}}, {
     {RGBColor[0.5, 0., 0.], Arrowheads[{{0.030462176144099202`, 0.7}}], 
      ArrowBox[{2, 1}], ArrowBox[{3, 1}], ArrowBox[{4, 1}], ArrowBox[{4, 2}], 
      ArrowBox[{5, 1}], ArrowBox[{6, 1}], ArrowBox[{6, 2}], ArrowBox[{6, 3}], 
      ArrowBox[{7, 1}], ArrowBox[{8, 1}], ArrowBox[{8, 2}], ArrowBox[{8, 4}], 
      ArrowBox[{9, 1}], ArrowBox[{9, 3}], ArrowBox[{10, 1}], 
      ArrowBox[{10, 2}], ArrowBox[{10, 5}], ArrowBox[{11, 1}], 
      ArrowBox[{12, 1}], ArrowBox[{12, 2}], ArrowBox[{12, 3}], 
      ArrowBox[{12, 4}], ArrowBox[{12, 6}]}, {InsetBox[
       FrameBox["1",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 1], InsetBox[
       FrameBox["2",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 2], InsetBox[
       FrameBox["3",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 3], InsetBox[
       FrameBox["4",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 4], InsetBox[
       FrameBox["5",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 5], InsetBox[
       FrameBox["6",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 6], InsetBox[
       FrameBox["7",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 7], InsetBox[
       FrameBox["8",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 8], InsetBox[
       FrameBox["9",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 9], InsetBox[
       FrameBox["10",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 10], InsetBox[
       FrameBox["11",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 11], InsetBox[
       FrameBox["12",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 12]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{1.3204089500004594`, 1.2700701055463972`}, {
     0.5826637043679795, 1.087204337809796}, {1.1407686462624076`, 
     2.4764783471189444`}, {0., 1.2611618280252628`}, {1.7287756870009785`, 
     0.}, {0.8677335101310342, 1.9653466196463107`}, {2.558559185278368, 
     0.6813307937073931}, {0.16450484614353544`, 0.5727500688928581}, {
     1.892865173394338, 2.477655638562067}, {1.0894551406883903`, 
     0.24122748587310672`}, {2.6446150835705957`, 1.6217035936059128`}, {
     0.3791589258816901, 1.9169686647453088`}}]& ],
  AspectRatio->Automatic,
  FrameTicks->None,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{3.740180688862399*^9, 3.7401809873701367`*^9, 
  3.740181164927245*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"b29170c4-cc85-40c0-9b98-35327b32699a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "InfiniteCellularAutomatonPlot2"}]], "Input",
 CellChangeTimes->{{3.740172373714992*^9, 3.740172383666134*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9912fa62-04d6-4f28-ad89-5fde32dd8ac4"],

Cell[CellGroupData[{

Cell["InfiniteLists`InfiniteCellularAutomatonPlot2", "Print", "PrintUsage",
 CellChangeTimes->{3.740172384029149*^9},
 CellTags->
  "Info143740157983-7027397",ExpressionUUID->"6e0e6ffc-c4aa-4d66-9d01-\
f715ba40de19"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"InfiniteCellularAutomatonPlot2", "[", 
          RowBox[{"cellularrule_", ",", 
           RowBox[{"InfiniteList", "[", 
            RowBox[{"0", ",", "rule_"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n1_", ",", "n2_"}], "}"}], ",", "t_"}], "]"}], ":=", 
         RowBox[{"ArrayPlot", "[", 
          RowBox[{"InfiniteCellularAutomatonData2", "[", 
           RowBox[{"cellularrule", ",", 
            RowBox[{"InfiniteList", "[", 
             RowBox[{"0", ",", "rule"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n1", ",", "n2"}], "}"}], ",", "t"}], "]"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"InfiniteCellularAutomatonPlot2", "[", 
          RowBox[{"cellularrule_", ",", 
           RowBox[{"InfiniteList", "[", 
            RowBox[{"0", ",", "rule_"}], "]"}], ",", "n_", ",", "t_"}], "]"}],
          ":=", 
         RowBox[{"ArrayPlot", "[", 
          RowBox[{"InfiniteCellularAutomatonData2", "[", 
           RowBox[{"cellularrule", ",", 
            RowBox[{"InfiniteList", "[", 
             RowBox[{"0", ",", "rule"}], "]"}], ",", "n", ",", "t"}], "]"}], 
          "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[InfiniteLists`InfiniteCellularAutomatonPlot2],
  Editable->False]], "Print",
 CellChangeTimes->{3.7401723840447683`*^9},
 CellTags->
  "Info143740157983-7027397",ExpressionUUID->"8dfb3418-5131-40b1-beb9-\
a16f3eeb1383"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InfiniteCellularAutomatonPlot2", "[", 
  RowBox[{"90", ",", 
   RowBox[{"InfiniteList", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"#", ",", "7"}], "]"}], "\[Equal]", "0"}], ",", "1", ",", 
        "0"}], "]"}], "&"}]}], "]"}], ",", "40", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.7401723878029366`*^9, 3.740172610663087*^9}, {
  3.7401729141808214`*^9, 3.740172919523213*^9}, {3.7401729739906654`*^9, 
  3.7401730109809966`*^9}, {3.7401730706576943`*^9, 3.740173091747754*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"df859478-2b0f-4ce2-b363-82bdf76dba07"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGDgBuJAIGZghEAoxUAuBTcAxARjGINcCsGAmIlgkEtBGWBP
QwEjZRSUAXE2BFNIQU2COBtsNKUUPFIYIRZQTsEjhYL0gp56KE8v6KmH8vSC
nnoQJlOFAgBnUwQR
   "], {{0, 0}, {81, 11}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->{418., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.740172428531023*^9, 3.7401726118472214`*^9}, 
   3.7401729209620333`*^9, {3.740172976599885*^9, 3.7401730119805126`*^9}, {
   3.7401730724020185`*^9, 3.7401730928043327`*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"0a904919-d169-4bbe-9e83-7ffec17152c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InfiniteCellularAutomatonPlot1", "[", 
  RowBox[{"90", ",", 
   RowBox[{"InfiniteList", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"#", ",", "7"}], "]"}], "\[Equal]", "0"}], ",", "1", ",", 
        "0"}], "]"}], "&"}]}], "]"}], ",", "40", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.7401726329998846`*^9, 3.7401726740432673`*^9}, 
   3.740172764179735*^9, {3.7401728029408255`*^9, 3.7401728037554226`*^9}, {
   3.7401728709829044`*^9, 3.7401728754967365`*^9}, {3.7401730289549885`*^9, 
   3.740173029501528*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"d8e4cb67-8bf7-47a9-b336-098f263c79ef"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGDgBuJAIGYEIUaqUiBEXQpsNvUoBoi/qUgxQgKSahTYTEYq
UmAWIxWpkZdsIF6nIgUASOsEAQ==
   "], {{0, 0}, {81, 11}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{3.7401727072277665`*^9, 3.740172794120201*^9, 
  3.7401728608321867`*^9, 3.7401729026586285`*^9, 3.7401730567122335`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"10c59fd9-f753-49dd-81fa-8d55c4c465bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InfiniteCellularAutomatonPlot1", "[", 
  RowBox[{"90", ",", 
   RowBox[{"InfiniteList", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"#", ",", "7"}], "]"}], "\[Equal]", "0"}], ",", "1", ",", 
        "0"}], "]"}], "&"}]}], "]"}], ",", "15", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.740178862255628*^9, 3.7401788845209923`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"fb69d77e-d6b3-4db1-a73f-01cdf6a3df54"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGDgBmJ5IGZgBEIwgZ1iBGE8FIjESYEQxA7sFAjhpkBmgNTh
oMB2MOCkaOoxRqgDcFAA/5cClw==
   "], {{0, 0}, {31, 11}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.7401788697041445`*^9, 3.740178895252001*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"2aa18c1e-ddb4-40f5-a374-147670c20e15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InfiniteCellularAutomatonPlot1", "[", 
  RowBox[{"30", ",", 
   RowBox[{"InfiniteList", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"#", ",", "7"}], "]"}], "\[Equal]", "0"}], ",", "1", ",", 
        "0"}], "]"}], "&"}]}], "]"}], ",", "15", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.740178937974629*^9, 3.740178938598957*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"22cc01cf-334d-4588-b200-56fbe2250ac3"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGDgBmJ5IGZgZAQhnBSIwEOBGYw4KQYwwEkNV7sBA34CkQ==

   "], {{0, 0}, {31, 11}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{3.7401789490892954`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"f4b87234-dbb7-4870-936f-6d08a5a44c29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myGraphMatrix", "=", 
   RowBox[{"InfiniteMatrix", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "\[Function]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "\[Equal]", "0"}], ",", "1", ",", 
       "0"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"GraphPlot", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"InfiniteTake", "[", 
       RowBox[{"myGraphMatrix", ",", "n", ",", "n"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
      RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "3", ",", "14"}], "}"}]}], "]"}], "//", 
  RowBox[{
   RowBox[{"ImageCollage", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Grid\>\""}]}], "]"}], 
   "&"}]}]}], "Input",
 CellLabel->"In[32]:=",ExpressionUUID->"aae3a29d-1f68-43d2-a962-0ec2c5b44a3e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
5r7CWFrMSevPI6OveSR7v58Q3S4AAH5lXZyLfIPRjZZBO+s8D/cXxrHU7RZ/
h7pRr3/XRltjAAD0Tu6ck3yDGfS+P5Q5z8m9hnHUfJ6tr8e5lwAAXCN3zs0a
mln0mEHLnefmnsM4ajzP3vE8zr0EgJK+ff34/pc///Gy6PbTn8gxZ03cB/eH
mfSQQcucWY+F6HYA95Wcf6yxY+n3H+QbGD8YOzk9rvP79z9dMksfUVbEmJOb
9MV9YjZZM2jfFWFNfYZxlJp7zBPx1OYf5BsYPxg7OekjWms55uTOfXK/mNGS
A0R/du6sM0eMCciv1Twid85Dbf5BvoHxg7GTkz6itdpjznm9/llDM6OlbkXN
y2onZ6jPkF+Ltba5Ihe1+Qf5BsYPxk5O+ojWao052ck4rKGZVev82Vln3mWc
QH6119rqQD7uyQ/yDYwfjJ2c9BGtlR5zcufxWEMzsxbzsrrJVerzp+j35MCR
Wmttz39e7s0P8g2MH4ydnPQRrZUac9bC43JPmVmr74h4xrjC2Plk/UxmJcen
zyr7oDb/oD5j/GDs5KSPaO3umJOfjM+9ZWa+I0Jm6vMn62cyKzE+zRt9UZt/
UJ8xfjB2ctrqoy+/rTUW+ojSXj2XR+NuyZ+tr8bmHjOzUrmBz+qowXj6ZI9B
ZnfHp9y5P2rzD/KNWL2PxaP6OeL46f1+ZbI3ds7Unx7HTok+WveJPsphyRFG
WA++qunGHOZBZnZ33TvKXEFO6vMn+TOZlfiuYfQ18B61+Qf5RrxlLdrjOYhX
GeII8/vzORX7hrpj52z96WXs1Ogj9Tmn5/rQaz1/OKrpxhwPPY5rKOXuutez
Q03q8yf5M5nNdn4PtfmZfCPeVm7RS855lCH2Wj+38uae7kkvzqwN5c/397m0
cVTH13l0ZtYEvLKMleh2QIQR172MQ33+JH/u38jjeIbze/xMbf6h1PfImJPx
Q62x8zD73FvqXbzU92q8R7fvLPkzryxjJbodEMG5NTJTnz+9er+otUwfttbR
0W0qweeY8xlp/N716ru2xn99R9lF9rE66jr8VZ4U3b4ROP/8fh+t+8P6OYet
epG9du+RP/NKr2MbShh13csY1OdPZ97x5znN78y5jrN/VvT5jrNnPcwjY1Kb
f1CfY61zi97G5gz1c+t8Y3SbRuD9z9f76NXZjZn6KIP1ujK6PXfIn3llhHEO
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
B2sugH6YW6E83xsdw3KONbod5OfMM7SlNo9tbx31nDnLnzkzZq6uvWXQfZA/
A/TDvArlyZ/HoUZyxHlniOHznrFtraPWebP8mfWYuerx3ry9P9c6MDdrMIB+
mFOhPPnzOKxr2ePMM8Syhh3XXv68xTqK2tSavKzTAfphPoXy5M9jUSd55swz
5ODzn3GdWUc5/0xL3seRk/UYQD/Mo2N6fI/szvfQotvfO/nzWGQcLJx5hlys
Y8ckfyYjGXQ+8mdgVj1mfubQMck/9T9lqZVzc+YZcvJ50Jiso8jMmjAPazNg
Vj2ulcyfY+pxLI7k6Hfb995XqP9zUyvn5cwz5KY+j8c6luysC3KQPwOz6nGt
ZM0+ph7H4kj8bvuY1Mu5OPMMffCcjuVxL61j6YH3ccRT/4FZ9bhWMmeOqcex
OBLvLRyTejkPZ56hL+rzGJbae3cdazzQyjJmo9sxK/kzMKseMz/z5Zh6HIsj
edX/3r/RJ3uM8TnzDH3y3Pbv+R6WWMear2nJeIuh9gOz6jHzM1eOqcexOJKj
/j/KnvV/fmrmuJx5hr6pz33a+tyv1DrW+xFoyRqiPfkzMKseMz81e0w9jsWR
HP3+oP7vm5o5HmeeYQy+o9Kfvc/9Sq5jZdC0ZLy1Zf0GzKrHzE/NHtPe798t
Mo7Fkbzq/6P7oP/zs68YhzPPMBb1uR9Hn/091kJXffv6YWwQymdh7VjDAbM6
OvP4KveTP1PSeiyux17GsTiSEr+bYz2Vl3vTP7kzjEnu04e7+4+r/76xQUvG
mz4GqGXvzOOZ3E/+TEny51z9f/W7EHLovJb1rhraH+/bgLHJI/Iq9dnfnRpu
XUVL3sdRv3+j2wAQ4cx37rNlfvbgY/L+jXz9fyV/Xjirmc9yP9yXfrhfMAdn
oHMqWYPv3mOZIC0Zb3X7NroNABGcfyYL559z9f/d/Hmx7LesteIs/b8W3S6O
OfMMc1GXc6lRf+/eY3M4rRlr+hSgFPkzWcifc/V/qfx58ZxDe37beu57e9f8
nHmGeanN8Wp+9lfi/q7ncnMFtalL+hPgrsd6Rf5MFt6/ka//S+bPz+yZ2pM/
98GZZ5ib2hyr9ud/pe7v1pxu3qAma8eyfRndBoAWln3tMofsZU7e/0zre9oy
/+RXEf1vz9SWvWpezjwDC9lEjBaf/5W6t3vfazKPUJMMulw/RrcBoIbntdSy
Jnlel/SY+cmfx7KMzR7H4kgefXjVt68fRcaA9Vh99qj5OPMMPDMXtteqBpe8
t3JnoqhR+g9gsT7jfLSmupv5RdTP5+ux1urX+ryf/DmvVvsyOXQb9qo5OPMM
7DEPttG6Dpe+r8/zuTFDS8abvgPmtXXG+cxaqkTm1yover4+a61+7a315c95
RZzNlJG26d/odszKmWfgiPpcX8RngDXq/vM1GDe0ZC15vd+i2wDwjnfOOB8p
mfm1mIN816xfr9b58ue8InMyz3rdfo1ux2yceQbOWmq0z6rKi+rTWvnz+j8b
L7RiPXmtz6LbAPDK1TPOR0pnfi1+N1r+3Je9d4+vyZ/zyrD3lduVZ/3bljPP
wDusd8uLrsMt3zNtjqcl401fAX179duBJdTK/Gqte9a/9xx9j3h9r86M28f/
Ln/OK1Nm5h3R5fsyuh2j89kJ8I71WQtzXhkZanHL9ZQ5ntain69eeC6BLEq9
V+Os2plfjTWztXhuz5+bnBm7yz/3GE9Xffv6EX7dI8uUPz+3ybmw+9TRet6t
hQAL+XNZWWpx1O9pRPc/81CvzvVRdBuAedU+43ykVeZXci6SOeV0JWu5ejbD
vB1zb6PbsUdNGPfe9irDOTugb/LnMjLNc1FtMX5oydn77T5Z/05optoE9OvM
uwZannGu5d15pdR+3L4+l6tn/O7cx16fmV710t9qwzX2COVkOWMHjME7oK/L
uiaImnN9jkFrxtuv/eG3rIBSnnPlo/9tlP3p1c82S6wH1et46zF99d+/Mwai
+2AWvdUr74h+j3paRtasA+ibM9Dvy1yPI++jcURrWZ/DqL7wvZZ+PL7rf+dd
AdHtZ+wxsHWeOfK9Gq3cqZt36q56Hevuur7E82AMtL3fPdYvOfR5+ui6UT5T
BvIyl52XvR5nuI8Z2sA81K9Pz/sSuXx+tX8njfwyjoH1uzTWNWWGunJ3Prky
J5nDYpQ4T1LquZjl+cpghL621nvdP9Ft6FHmM3bAWNTp13pYr2S5j1nawRy8
E/qT/LkfGbNH5h4De7nzbLW1xHzy7h5+tj6OVvLd3SXnWuOg3f0fZY1kzXfc
N9Ft6IUzz0Bras5x3/Qyt2eaa3vpM8aRafxHXf+MeVGPsmWPzDkGjs47z5xB
l7res+vH2fo3Ssn1fI3PvY2DduNgtP2Jd3P8Sl/8amvs95RzAGNRp3/V2+eB
2e6htRCtzTzmZs2KepQhe2TOMTDibwfWULKOvqrLanZdpd9bXiuv8Sy2Gw+j
9rMc+te+iG5HFuu6Zf4HoqnTv/ZHbzU54/3bG1eZf3uJvs269naGoR/yZ1qN
gfUZ5x7XNhFq9NPe3OSe1LuHNcZ8zfs149olYlzM8Lx5N4fnaWs8LGNi9rEB
5KBO9/15YOZ2r8eW/IXaZqxn1pN9UP+oOQaccS6jxhyyte93f8r3ca1xX/te
zbhuaW22523mHHq2e33UDzO/UwvIa/Yz0L1/Hph9nn0eW/IXWpitns12vb1S
/yg5Bp6zNmecy6pVU30+UKdPa/Zni/tkLLQbJ9HtiLjunve4V82+Lj76jYfo
tgE8zFqPRliP9HANy5wnf6GVmdZZs1xn717Vvy+/3ccH9W9cW2Ngue979/55
DHivRhu185qZzyaWUjt3fv47WlyPebyu2WvlbO+Inrm+HmXPsz8HQC6zzEmL
UWpwL9chf6a1WdbaM1zjCI7q35I9yp/Hth4D6/t9lEE/58/R1zGD2nV1tjyo
ZL+1ONPZ+ruhxkFdauePfpil7sxwjUf3V+YMZDdLnR7tu0g9zSvyZyKMXttG
v75R7NW/58xR/jy2M2fgzYF51KytW+9Pib7ezFr2VcQ96Wkt3yP9+6vRv4cx
29rYd6OAHo1eq0dc5/f0/m75M1F6eUZc27j23r1wJn9U/8Zw9BnEmfdvRLd/
NjXXi+t8YMT1acm+atk3UdmNuXy8e9qDUXPonvbHJa7VGAd6NHKdHrku93Lf
Xu29nf2iplG/czjiNY3o1bt/j+qg+jcG55/7U/O3CLfWpKPOU1f7aKZzyO77
mPe1FyO+m2Okazm6Z8Y20LMRavX6TMno645e7pnzf0QbbW29XFN0G3jtzPc/
1L+x3X3/c3T7Z1TrDN2rdemIc9W7fd563R69V4j++0emb9/rq1Hqz8j3fYZ8
A5hD7/PN87p1ls8Fe7ln8mey6OWZme1aRrTMRfJnXp2Bf/X+jVG/J51dRP78
/HfPUuMj1+xZcpxZ7vWs97c3I8w5oz1Ts2QbwFx6rdXr332dZb3Ry/3y/g0y
GWX91svzP5P1559n82f1b2ylxsD6d4air2sGpevsO+vT0fOGda2M+vuj++Eh
SztGM8t+sJZX803mvh3p3jvzDIyq13Xuc/Y805mRXq7T+WeyGaFO9N7+kRzl
gvJnaoyBrc/do69zRDUyynf/vBHmq3WfRucp2bJ92ZJ+zWzvecn0Gc6WzG27
0+8AI+mtVq/3YDPtxbLeq+d9xaON8mcy2lo391Q3sj7/s9g667z1z8mfqT0G
ZNF1RefPz/9ez3U/Q+68bkt0n5QYF/R1n3u2fkd09nNfPc+HWWolQG091eqt
7HmmWp3hWtdZ8/M9ePX9c+/fIIPndXP2sxx77aaNs5nzM/kzrceA93SUV7Le
3v2zMuc9WzLlzs/tiW5H6XFBP/e6d3tnv6LbtSVru171rXELzKSHWu28T/t1
1ausee/fk7+Q3TKWM6+ht9oc3YZZrHPnd/5d9Y/IMSCLLqNk/5Wo3T1kFHfq
Zu02Rbejt7b1qqczBb3Zy6Cz9Xe29rzqU3UAmFH22hf9myVZ1Lr+rZz5bNa8
Rf5CDzKvn/faG92GkV0567xF/SPLGPC5/T2lam7ps9TZ5oJMufPz39/DniHb
vexdxudjBEfZc7Y+7+EziCz1EiBS1lqtRv/cF3f7oXTWvCXL3hu2bI3/bOvn
Ldnb16NSmfMz9Y+MY2Dru0zR/dSDpe7eqQ81aneWOSvbGv35fmXon4ixMTP1
rZ69/WPGNXSmthz1Y3RbACJlrIVq9L17dPX9GXdl3HvDsx7OcGy1OboNo6h5
Xu9Rw6769vXDfR7A3THQoo2y6HNKzA81n+moeStb7vzcpp7GtT1Ovfsf3Z5Z
bO01s7Qpuh3rNvVSlwBayTBnLDLOHdH2+uR57m+dNW+RP9OLrXMc0W3ak7lt
Pahx1vndv/vsP+tejyfzPd1aN0S3KdreWb+M934v16jx92bOUNZzecY2RoyP
Wcif88jwDGYZA+s9enR7ADLJUBszr20zeN4f1np/xl3yZ3rTw74la7syi8yc
t9rhXs8py9x8tq09Zng1lPp+TKvned3GO21ej9nsa/O9dwJkbe/W+OipTmTU
y1mCmUQ+hxmep+x1E0p7fIfvzncAo9tPjMg5W53+tT+Osubo9u2RP9OzrHuX
jG3KKkvuvG6P+z2nDGPwTrt7yvJKK5Fntn6W7+bm63uepY6ebXMvY3Xve4vR
7erR1ucP+jKPqHdzRK2jMp0Jg5ZkQFwR9d3fmev0O+/P6CGTUHsYQbZnLVt7
ssmWOW+1zT2fU7bxeOc6Zsx27p6rbP0c750FvvLv9jB2e8ye9+5TL23P5s6Y
J+Y+tfj7ovIMzzKzkgFxVct6PdtnhK/ONL/qh+zrqUf7e/jtJTgj0x4mSzuy
yZo5l7h3UZ8Hk+P+Z9Zr5nfnHvaQP+/lcGfa3muG18MccGZczfAc1R4DvY3d
WbX8LLPVOJgtz4At8meuarXnHf0zwldnmkc7D2feZURZ9jEZ2pBF5rPOpe+d
+96/0e/hLFn01TVrRI06yqHf/ecz388R9hEy0zLjYPm/W/9/8qpdZ+QZ0I78
mTtq1+vRPic8+/6M7PflzvVnbRuUED2+o//+aL1lzs/tvnvv7Gv61dNYLXnN
PWSXV737PGcYA+t8ee+/721t3lNb3703zDkeZlUrw625P+2tXkJt8mfuaFGv
o6/xSnvuvj/jrqxr02z3FGqIfP6yPvu19Z5llaiNsol+zT439v78Hl1Tz2Ng
a/0a3aYr96HHdr+6H9Ft6dlIY2JWz3PGnT/n8T7HO++DPNtO4w1+kD9zV+l1
ULZavc6R9/73TOdDMq6tMrYJaonaI860L+31rPPRtZS4//KJ/vQ+fkv3RS/v
dXil5/z5ubb2eh+y9WkJ6rtxwc/38s4zUSsHc+YZ9m09d19+e4afyZ/ZU/pz
w0zr3K1M+TnnyJAzv2p7dDuytgdaiNgnjr4vHSlz3rquEvdfBt0f92rbCFn0
2XubpZ7trcMzrc976s9a9ye6HT0bdWzM7so8USN/7q1WQmt7+bPzz1wdP1fr
dpb1wF7u3NN3ELO10TzMzFruFUfdl65z5+j2ZL1ve5+ZRl8fbe7/6M68p6PX
9U90u8/W1x4+2xo9ox352lqIftao6521T40cw9iCY+vn7uzZZ/kzW+PnSt2O
rtd77884yp+j+/3sNUW3I1tbIEqr2jHSvnTUs86179ve3BV9jWwbfWzX7Let
cwGl3gta0pm2RL6v7cr8lK2P120b+ZlSM/Qf5+7zqzpVKn8e+XwElLaVP589
Cy1/5m7dbl2vt7Lmvfz7+b9f/3vR/X50fVttj2yPuRg+tdivZ65Pz/Zq6UyZ
c6371tv3dWbnHpXpw6NzA9Hte3jVjtbjoESdzZi5zPI8ZRnXPZpljPDjfu/N
BSVyDOMJ3vPquXuVP6/zuyPR10r78XO2bpdu11ZmnPVdzaWvO8t57exZPUSo
/Vz08Mxt7QVGf7/Gq/4ofc1LP/YwHmY38pokQtbvrr1qQ6txUOPzvSy1e6Zn
SW2/bqZxws/W80HWHANGdvf889ns+dXZhL137M6Qafd8HbV+N/bd/tsaY6ON
k7Oy7Llm7Hs4q9beMfuedKtOz35Ot2b+3MOYmJnPCOr0Z9az0Ed/f+0a2GL/
FNnHs80hs12vvqOkpVZlyDFgNnu/P7iIeu5my7Sjs8KS46dm3X51prm3/qs5
liLHlHsBr9V4PqPzlT1787U60aZeZh0Xs5M/l+/Ps/uGiHXK0f2u1Z6INfK7
OfS3rx+/7wmumnXNqXZcM+t44Vd33wMQ3X7o0Uyf+9TItEvl2r3uy4/Gz93P
L15lzdHXntXW+cLWf7/7A+eUPi+WcT/6al6Nbl+0Fn3Qy5piJuu1TXR7ZhO1
Vrqbtb5zfZFr5ufvtrz6Z+/uRWedR2a97rvsU1i8yjHkz1DeTPlzDbUy7bMZ
d/T1742fd87P7/VTpuvsTWS2Yy8N7yl1BjLbWcpX858a/6nVPcs0NpA/Z9Pq
ftTedz3X3Qzj6kxbSryDNfo6o/p21mvXb5RwlGM4/wx1yJ9zOLtHv5Nrlzin
fWb8nKnZz2cW5BDlReXP7iFcd/d5zfL8PecNanv9+57172Jf9PeUOH9/St+b
mvuuTLnz2tGa1F70Xr9Gt6E31iQsvH8D2jPnx2t17rfGWe2a79/g/phqub6y
noP77jy3kc/g+sydWpDznmU7Iz8r+XM/St+rGvuuzLnz2lYObS96rz+j29Ab
axQW8mdoz5yfQ6/zoPw5r5Z7EZkGlHN0TqzVu0PPkDmX68PW48u9ir3nW99P
i24X79+7K/et5L6rp9x57Xmesxe9NyZ7vP/6jAzkz9CeOZ9a40f+HKvlnqTX
/Q9ktfeZToY5W+Zc9j5H9KHPC+Pvufy5f1fe01GihvecO2/1X4Z5rSeZPofu
kbULC/kztGfOp9b4OZM/m//rabW+so6DerJ8T9lZ53r3N6ovZdCxvB99LOss
eu+e3q3hI9bgV79lLgMqO4ai2x9ttOeHa2PAZ18Qw3NH5Phx9qeeFusrazio
L+p7yjLnNvc26u/23qT4e++ZGtPR+XbnNn519Fvmr/pmxr2ovfs91jNz2lrT
lsgxoq8LenPn+zuP7/9Et5/48VNiDVTzt8ZnVXt9Ncr3P6EHZ37ztdS+Uz1u
e19n/vtnpu/nsH7fyquzvq2zw+f2RfXRmXlN/vxef8mf98mf57LOnZ//t7vP
UnTtBJhNzd/xln3c0yJ/dn+grVr7Tmed28vSz/ZOMfdev8/p6Kxvq/w52zvI
vYO1bH/Jn49lmXtpc59rvg9p+XOOfjccgHJqr4Fk0feUnAuf529rN4hRsubK
nGNl6nP7pnnvPW2VeP/GVc9585aSf9Y7SvVJrXuW7XmVP491Pyl/f8+ua0uv
qa2lAOpq/S5SWfR7SufPciqIVaLmHn0XkXYy1VL7pnnvPW3dzVpL5r5Xs+ej
sbuVUV/NgF71x3P+/O61nW17xn2H/Pke9Xc8V89T1HiWnIUGqCdqDZR1TZhN
yflvvRaPvjaY0d3vKfsMKY9s90Fd19fUdzd/3vozS5+DvppPH/277/bJoy/W
ru4lSvRB9Lg5O4bkz69lm3u5fy+v5gE132mXrW4AjCB6DeRM9LFSc9/eWl2f
Q1uvsotX+XN0+/kh494kY5tGpJ/nsc48a+TPpdp59jpKv48jei/xfI2lcvma
Y+rM59B38vrRyZ/7V+p5ezwPV337+vHyz8/4+RVAz7KsGR/WWbS1Rbk9ruwZ
cnj1PWX5cz+y7kmytmsU1ifj23r/xHLPM62ba117ifPP7/RJ6bPc75x/fjeL
L5FVn/kMQ/78+vmMbgfX7l2NfX7NMeEsNEA5tT83vOrMGYYZ1h4l5rt1X87Q
b5DV3fdveH5zyLwfebTrMT/fmd+jryEz2cd41tnj0T0ePX9e98uZ83+t+6TF
+0r2suYSf8aZ92XLn1/f/+h28N79qnm+rMWYcBYaoJwzdTui5r5a10X3W4vr
L3FvZc+QQ4n3P189FxZ97YtMbblzDZmvY6aMzL3nzn1c181X/55na54+qZVz
770v+8xaIHN/tb4v0e3g3H2qvf9sOR4ynz0A6MmZWho538+aP5foc9kz5HE3
f37159/ZG9fIrbf+/hFqUfb976h5UAYzrD1GtFWHSr87YdZnS5/c76/H3L9F
f/0q+/w7u9ZnHyLGwyw5BEAN79TtyFo74znou3Nqi8+dgXOOvndbKn++07aS
ufXo9Tr7/lceVM8oY3h063pUKg/xbOmTFv3l/PO+7PPvrGq/Y+Po74y83uh+
B+jNO/lkhjq7zjBGO1f37O4cPmKfQG+e1+Qj7tOvfge5h3eF7MkwFx4ZcZxl
0Mv4nFWpM85HPFv6pEV/yZ/3qcN5bH3GN9tYGOlsBUBt79btDHX+Ya/Oj5ZF
3+nvLPcKZrS3Jr+7T+9pjbuXRa/76N3z0xly6+z3QR5Uh3k1lxZ585pnS5/o
r1jqcLz1GjeqHVnWYs5CA5xzZQ7vpb6OkEVfXWNZm0GMV+dASuw7e6xpz/W4
xJ9V8l0h7/ZlD/sM+UYd5tYc/V/6nRrv8Gxt98lV375+hLc/or+MoevU4dh+
z/JdtQxtWHMWGuDYlRrZY13tNYu+knP0kI3ASN75/mGpfWeva9zI/ULJ3Drq
u6Zn7Y2zo9+1km+81uMz17uIM85HZK3neV72x5D8+broGjC6V2ujLH2fqS3r
/lP7AH4169na/8/e3RxJjmtroi01WrRn1sK0ECVWK9A61KBnNTyv/JR5J4NJ
upPE397AGiy792RlRoAguQF+DsKzZdFP8ucMxwXZPXn/sPZzZ9YcOpuz7Dnq
HtdH19k+c7a/6H3utbp9eWef+NHtLb02Vrx2VjzmK+TPZbLUhGwy1eJIbfnW
n6PbARBFSe2eoZ7us4PR7anR1xnGY8iuZP1ri+fOCHvwreTOeX+65ro0t5Y/
jz3vXPPtHhjdvrvH8u2/Zzum1n2yKvlzGbW4nSz1OMs1YC00wL9K6+FstTTy
muirfZ1lLIaMnqx1PtLyuTP6Z2mz6NHHpXuF2H+j3TkZ3Y4ZfHu3O2M/X6kL
K9XnrOexB/lzGddW236VPddnfg6srrR2Z6z9d44t0ph7dbyK0l6YSe29fnvs
HWqe21b0vj3Ln61/Lu9XY2xZ333bvyZz/17NnzMf45NzProdEcmfy7i26vfn
WV2O2M9Zz7+10MDKatS/FWpohCz6Sj9nHYshoqOcpPbPLv07V37PCjV6hAz9
Kn9e87xHss8yjuraLHsH3anZq1xH5qXnfIdlGddWvT48qs2jn3u/tTt7DbVG
BFhNrXF7tdrZOot+zSlL5qSj+weyq7XHxreff+Xv1qqv5rnjzuFI9t+oz330
2ZW8+ezfjW57rWOv/XczW+U46c+1Vd53n+a5kft2lnM/Q44OcFWt2j3LGPD0
2Gtn0d7Hg/5arnXeuzPXrD0vjbqWJZss457xZM3zPqpf9t+ZObpd0a+PFXKH
FY6RMVatMzX6LHvfzVZXrBEBZlf787bVa+Z+n6ySnyUvgH5ar3U++31X/36L
2mqe2/88jmI8WfO89+qH7N8VOPr6WGHt2+zHxzjqzr2+mqVWz3AM387R6LYA
1Fa7dptf/uzbkjXR8gJob8Rc/Mnvatk+OXRZ32V4RjCe1DXrc+/V454pw4hy
fcxeg2c/PsZRh671z2w1O8v8q+T41E1gNt7p7uNJFi0vgPoi5CdP6mTrdlpv
8fxcjm7DFcaTNc97DdY4P++zu/9m1utq5mNjPDXpc7/MOLdb6ZzPeP6ANbWo
3eaY1/vo23giL4D79nvabffD2Ro1l3tad3vNta23uHYutv01uj1X2ms8qSvD
eS+5XuTNY66PWa8r1xAtub6O+2Pmfpn52I5EeH4BKNWqds86f251Ds7GE3kB
PHOWOY+eu5V+Ptezto7uq8j2n2tEfg56t814Ur9PR7ej9vHs3wmZ6Rh7y1Ln
e3E90ZLr61c/RJ+TON/PRXqeAbir5Tpl9bDsnLz77ygv+OOf//YmL4BzEedp
pXPm3rlEtP6L4mhdfbS+2WeI8uf6fTu6HTWOIcNnKBnJn39yfdHSytfX6P3k
nO++Iq6tAbiiZe22B0ed/tvnBfvM+VMGLS9gVdt5eKR5WY2aO6Kufprnju7T
kecy8rz/aL9H+XPd/o10vu+0ebWcYpTSWj3bHNr1RksrXl8z7+387bhnq493
yaCBjFrX7tXHhhq+5QXyZ/jX2Tw80nysRk0c9Ywlg/7cJ5H64Ox59DUmPPX3
X38OP65Issxv7KmR9xrJco2tejzEslJtW2FvZ+f6O7kzkEmP2m2uWe5T/mz/
Dfi+112UeWqtdow8HnPd8/6I0hdRrvfZRZ3f2FMjhlr9HvU6W/1YiGeFWufd
lX+pJT/7IuJcFGCvx9i1+vhYw1n+/C17lj8zs2zvkNds4+j3Do/WQI/u3wh9
Mbot72sj+r0Q3Wudd8k68VHn3BrnWGrmz7Ocyyh1kjnNWveyzXed5/6240Sk
OSnAW8/8Qg0sc/b9g/brZEVZ97qr3d7RdXV7PBnPR81+iHLsnsnqyLBHtjXO
8dU8J6PrfbT+gCOzXWNZ57utzVAPW/TJ/hpx3QCR9ByjfQ5X5uj7B/dGPwtD
S9nXfrRoc4SaejTXjdCunqIcc8b7IqqI+bO8OZ/a77xkP98zHAOxzXKNrb63
8wrnuFXf7P8syhwVoGctUvvKRHwWhh5mWPvR6l2TyDU18/l6cn5HHqtn1Poi
jLn21Miv9vmKXPNH9AfsZb/GMq+z6GWl+aV+A2bRe1yLtj9mNhGehaGnmebg
rY4het+M3qM6+/m908eRr4OMRo251jjPpfb5y349ZG8/8WW8xrK/3+f85iGL
AUbp/bzqe6rKyJ9ZwYxz8JbHkaWPZq/7o45N9txOrzH3bI3z6OOnjhb3Z+Za
ql7RWqYaOsP7fc5vTq45oKcRY538uYz8mZnNnL20rHeZ1hfP/Iw14hzMeK9E
0nLMtafGOlrtu5Sl7m/NPAYQR4Z6am/n5/2WsfZFlXUsAXLZvtfZ8/fu82f1
7h75M7NZYc1fj+PKVktnq/8jnodmvV8iORpzr3zf79GYa0+NdbWoDaPm8au2
m1wi19fZ57wrn9vMfC4ItLKd+0XIn81Br5M/M4tV3jfsNU/OWkdnGQN6Pw95
/upjP+buM+dPGfTr31rjzEvr/DlLDc3YZnKKVmtXWGvRi9rRtm/1L1DbyOx3
v/ZndF9k8uov+TPZrTb/7lXrMs8XZ/gcouf1vMq9E0Gt/Hn0cTBWq/qcbS2H
/JleotTeVdZarHZeZ+d6BWrZz/1Gvi9s7nn/vMmfyWjV+bdM8p7MmUSP/l/x
HhqtNH8e3X7Ga7k3T7b3CTO1ldxGz4ns7dyGutG3r/U3UOIoex45Jqpp9/rq
vf75qb//+nP4cbCW1dY6Hx17z983Sx+PHpuetrn1+c3YL9l92/9Z/sw3LWtz
tHn9LG0lv1FzopXnvbOe09Wp1cBT++++GV1PjCP6ifnY4+5nP/T8nTN9ppdt
3UXNtu6vG9nzONY/U6pH/tz7886SfojyDMLcRrx/tvq8t3UfqxnjZJuTA7G8
60eEOq6WfWYeQxar7rFx1hcjatuM9TTLnLd2/vy+h4wBY31b/2zPK75pfQ9v
97TLUCu27czQXnLqtSeWeW+fc+kzqxicA+Cu/Xg8uoZkyBWinCuIxpqP3/tj
5Bx51noa/fmu5rW/v4aiHvMqfOcCpXrexxnGgAxtJIfXvoIl+xI+/b32du7H
OxPxZFkXAsQQbayM1p5IjLNEZc3HcZ+MniPPPh+MOuetNY4d7Y86+thWJ3+m
VO/8OfqYrK5RS+/6bL1Ff/t50ej28EuG8QYYL1rtzrBn3ah+UdOJxtz7c7+M
niOvcl6iPYe0zJ/N78eSP1Oq9z0cqTZmbB959KjP3vMbJ8rcmnPOC/BJ1HFT
3cpxnliTuff3/omSF670eV6kY63RDtlzTPJnSvWuU5HH6chtI5+W9dl7fmOd
zYlGt4tj7hPgSNTaELVdI5ibE4XM+XofRckMR//+kcc8ug0l/z7SZxj8JH+m
hO+i/b0/1DZqaVGf7e08XrS5NddEmI8DcUQeRyOtY9MPrMxa52eirM+I0IaR
xz4y9y/596O/t5Jz8mdKjFo/GXU+aV5BTTXrs7lvTPLnfJwr4CX6eBpxnuwc
0cOo7+/e8p5hvf6Lkj+veB5H9H9p3XbfxSZ/poTvo/3JPJeaSuuzNRexbc+J
eVIuo5+HgPGi14DVxxXznnWNyjfMu+vY993IfoyyDnu0nsdfcu+47+KTP/PU
/h3yUb9/dD9sRWsPuR3V5z/+ucbevtXn1Z89o9ufH+cqH/cYrCnDM26GNjp2
Wuidb1jrXFekfrRX3i+9rvGn9Vvdz6Hk3ZTXuy2j2884o/Pnl2h5b7T2kNt+
/rzPnD9l0D4fjM0caR6rr4mBFWXJIVasTcZXeuXP1jrXF6kvfVf4sdb98GR8
jXTdAG1EqcWRxoFIbSG/o/z5zvrn0e3nnHnSfEaPhUAfmer3ijUpy2cDtNMy
f7bHRjvR+nN7nrf/d3S7omg1773zM713AGs4+jww6/ej1u6T0e1gHtY/z0mt
mJdzC/OLlpHM0tZax7rK8XKuRf68vb5cY21EyxH339Myuj0R3Z331vxuUNkz
rCNS/vwSYUwwH6E2+fOc1Ir5WQsN88p2b2dr7xPb55LRbWG8Wvmztc79RO9f
teV7/1zpo9r3ZuRrBqgvyueCo/PvfV9ADfLnOZnDrsFaaJhPxrne7HVomz1n
Oze0UZpx+T7BvjLMl1wLdfqpRv6ccRwG6oh0/48etyL1BXM4GqPt/5ybOrEe
a/JgHhkziJnHnQjfhU48pfPnme+ZiDL0d4Y2RvGpHtf6bGj0MQJjRJrrjX4m
UA+prdf3d9NPpJpJPxnW9gCfZZ7nzVZ/ou0DSCzeH8wjS13N0s5IjnLoGvnz
6OMCxok2nx29B8jo42cu8ue5mLtijR7klbmGz1R3jrJn+TNb8uc8Mt27M9XR
Xvb72Hi2BUpEq8Mjnw2i9QX5GaPnkmmOTTvWQkNOme/bzNn52fHInjkjf84h
W13KPAaM9q7Vnm2BEhHr8Kg2RewLcjNGzyPbHJv2rIWGPGao4TPVG/kzn3zb
/1n+PF7GmjpTDR3Fsy1QImIdHrG2LOMYSnzG6HmoERyxFhpymCHjnKnWbM/H
TMdFHdY/x5expprLlyv9btDR7QfGiVyD5c/MQP48Bxkj31gLDXHNMseb9Thm
OCbqknHFlrUWZW13JD4bAp6KXIN75z2R+4K85M9zUB+4wucUENNMNTx7jZnp
XNCO+XNcmec66k+5b/em/Bk4E70Gy5/JrnT+7JqMIes8mzGshYZYZrofMx+L
uTZXyZ/jyn4fZ66hEXy6N72bAHySYfzoNUZk6AvyeY2zT/3915/mSAGoDTyR
eX0QzGS2Gp71eN41MWPb6U/+HFPW+rNlblbm7N78lj27N4EMY0ivMcJYRFSu
Tf1PXtZCw1gzZp4Za0qGZw7ikD/HNEM9zVg/Iznbm929CXyTZS7YY5wwFhGZ
63OMLDWS2KyFhjFmreHZ6sms54F2SvPnbPdIBrPcx7McxyhH3z+4J38GjmQZ
m3t81pqlL1iTNZTj+t0clVrcx9DXrDlDprFp1nNAWzXyZ+NtPTPdxzMdywje
TQCeyjQut2yrcYgMMt2vM1AXaMFaaOhn1nstSx3J0k7iqZFxyaDrmWlOrC6V
kT8DT2WqvS3Xesw0pjK3TPdsduoCLXkuhrZmr+EZ6kemddrEUvr93e+fY6wt
N2MtdU08J38GnspWe1u1d8ZxlXllu28zUhPowRocaGf2Oh492529/8nFWPvM
rPOUGY+px7XwIn8GnspWe1vNZc2RyWTWuWAkagI9WZ8Fda0wTkY+RmMoEUW9
XyKb9V52Ldy/Dt6fecqfgSeyjictxovoa0hgzzXbTuRneubluoN6ss5x74pY
M1bpe3KKeM9ENfO9PPOxteir7XOn/Bl4ImvdbfGMbi5CRq7bNrLWRuZgLTSU
W+Ueinac+5wCIop230Q1871srv+8n+TPwBOZ6678Gf7l2tWnzMdaaHgu8/w2
+7FGaw+cMcZ+Nvu9bJ71/Bqo9d2gwFoyjyu1xwzjD5m5fuvJXBeZj7XQcN9q
dTxKjVit38kvyr0TzSr3svPvGgD6yV5Xao0Z2fsBZFR1+1I9IBJrdOC6Fe+X
CMdrLk1WEe6faFa5n53783O/wvkH+pqhttQYN2boBzCHKqcWEJnPmeC7Fev4
6GNeMfNnLq7fX0bXE+d97Lm3DgdoZYaaK3+GX2a4p0dSC4hOzgOfrXp/jDxu
eQUzWLV2bK02xzDv//3c6w+glVnGl9LjMPYwk1nu697UATK5shb69R0vJd8R
M/oY4a6V6/iosX/lPmc+q8+hV7ufVzte/QCMNMsYW/pZ3Sz9AC+rrV2o2W/m
XmTy7V5/Zcj/+c//fkT+TEYr1/ERx75yfzOvVefQq97Pq57v1c870N9M9bbk
WGbqB3jx/tQ9MnsyO1sLLX9mJep43/mszIKZrVhLVn12WPFcv6njQE8z1duS
MXOmfoA31/V15l9kd7Rvn/yZlajj/cZ9+4SygpXm0SvXz5XOs3MOjDJjzXky
flgvw8xc2/qJtWzXQsufWYk63m9uP+MzBBxZoa6sfj+vcI7359vnh0BvM441
T45pxn6ArdXmVXepAczodd/Ln1mFOv5L6zFfX7Oa2efRq9/TKx2/7BkYZdZa
e3eOMGs/wNvZ3rD86h81gBnJn1mFudwvLcd7/cyqZp1Hu6fX6IN37uyZBxhl
1lp7dz+NWfsBtmadN5dy/zOzff78xz91YE/+THb2Ufu9P1qMa/qZ1c22nsM9
/fPcjm5Dy3MsewZGmzl3kT/D72adW5Vw/zOzT+ufP2XP8mcyUcd/12K8l13A
XBm02vnzvI5uQ+3zus2dZ7pugZxmHnPufJ6rFrMS1/svM9dAeJE/swLjWvs+
MV7CLzNkee7p38/p6DbUPJYjzjcw0kx1tuT4Zu8H2HPN/8vcm9md5c/fsmf5
M1mo4+37RR/D77Jn0PLIuftD9gxEk3nMrHmMK/QDbJmH2POONcifmZ1s9FyN
MU7/wrmsGbT7eu4+Odp7Y3SbAFaoRd+OcaaxBu5Y4f7/xL3PCo7y5yvZs/yZ
DHyO+FmNvvF5NXy2zfcy1CTz37n75X0c2z2gZzguIL/o42OP45xlrIEnVqkB
jp1VyZ+ZmTncZ6W5g/6Fa7Y5X/S8z319LvuzwdG5da6BKLLX2DN///Xnf5+b
axt9XNDCrHXgE3NvVvHp+wflz2S34vh1R8laTOMk3LPf82B0e87a6L4+F/W8
ObdAdjPXqJLnbc/hrCbDu4K1RV+bArXIn5nVzPPYmp6M7/oWrjvaazdiBr3i
fP+urP2jZgPRzVyn5M9wT9b51hMz1z7Ykz8zK7X8mruft8qo4L6zDHp0u/Zt
VDM/y7Y+JcN+LwAvM49B8me4L9o8uZWZax/syZ+Z1Spj1l2le9AZI+G5oxx6
dJve7XJfz9VPsmcgk0z19S75MzwTZZ7cysx1D47In5mRWn6u9J7Xr1Bumz9H
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
/jx7bcqoVv5sTj/e33/9+d975qnR7YcZvOeoamJcPi+H+t51b/+MXuOZfVtP
S9dSj+6n0eTPwB13PrN/z5dmmzMZOyAe64lyelJP7QEdU8k75e41qKPWOj3a
8Xk51NUy09z/7JLfs3r2uvrxA/etvmeZugkxyZ9zepqPWOMXj/wZxtu+f64+
xmS+AnWcrXmu/fNr/ryVc4TVjx+4T/6sbkJEnudyelpTt/9GxhKD/Bli2H4+
pz7GY74C5Vpnz+/fUfPnr/y5oAwFeEL+rHZCRJ7ncqpRU+3JH4P8GWLY58/q
YyzmK1Cmx/N4q6xY/jy+LUAeq+fPq44ZEN3qtSmrWvNRtXk8+TPEsM+f1cdY
5M/wTI81z9vf1eL3rFiPV173DZRZPeNROyGm1WtTVrXm99ZVjCd/hhj22bMM
OhbzFbhvu7d9r9/V4mevWIvN0YGnVp4zqZ0Q18q1KbOadXXFOX0k+3vwtV5v
z70G7cmfYzNfget65s7735ntZ0dk7TNQYuU502rjBWSycm3KrGZdNccd68k7
5e41aGObO4/IbzhnvgLX9NxvY/s7M32nYXSrHS9Q12t+U9vff/05/Liu8B0u
EJfnuZxqz0vlz+PInyGOdy307B+P+Qp8N+pzM/lzXeblQA131pnNUmfVz/pe
nz20+Exj9HHRn+e5nFqMD2r1GGf34Lfs2b0G9W3roJoYi/kKnBv5vkav37tK
TZ4lAwLGu1NPZngnWv1swxwc19LaWuXP6nV/8meIY1tbs8/BZ2O+AsdG7Lex
1et3r1KTVzlOoK0neUH2+iN/bsMcnJrX0qp7A2XWqrZmH3MyOqrnV7JndRvq
29ZWc9hYzH3hd6PrVM/fv8IcdfT5BObx5LPB7HVWDW3DHJyo3t/bNLods2tV
W9Xs/uTPEMf23cMZ3kOcic/L4ZfRa57ferZhhXq8wjEC7T19ps+eBaihbcif
icx9317LscH566uknqvbUJ89oOPJ/jwENUXJnnvfl7PXgdmPD+ijdP1E5rlv
5rZHJn8mOvd+Wy3nqNb89SV/hljkz7HIZOCXSPdD7/oY6dhb9efMxwf0UVor
s859Zx8jRpI/k0HW2pVB6/rq3PUjf4ZYtvXPXHYs/Q//irLmedue3m2ZuR7M
fGxw5LX/Vcn+WaPbH1WNWpK1HmVtdwbyZ7KQY7bRo746d33InyGWfX1VC2Oc
B1jV+16Icj+MfE9u1noc6bMF6MHzTxs1aknWd6HV0Xa+3a9n31316Tut3Me0
krF+RSd/zu99Ds2/IBb583iRsjYYpUfunG0N4oz1WL1jRZ5/6qtZSzLW2oxt
zuLT/frKmI9y5rM/dx/Tg3pQV6+5qvPW7vy9P6M1/4J49ntAywb6ibbPAIzQ
6z7INgeZcV4qf2ZF2WpPdLXXLGertVnXbGdxdr++8+V9znz25+5jelET6vdn
r/zZnLj+udv2q/kXxGMP6DFkz9B3v41sc5DZniWML6wqW+2JrnYtyVabsrU3
G/tvkNFrzjjbvHGUnjXWOat/3rbnzvwL4tnXPXWwX797fmBVI/Z5zjYHmS1j
mO144KpstSeyVnUk09xXLW1L/kxWni3r6FljrV1ve85K9l187ds4+rhgRvaA
Ht/nsJJRa/+zZUAz1YmZjgXuylZ7Ims1dmSa+2Zqa0byZzJTH/L1o3NWpvQZ
Q/9DX/t7Vk7Qt78hitLv57vyvX0jr/9sGdBMtWKmY4G7stWeqFrWkUw1yrNy
W/JnslMj8vWhc/ZMjbFb30N/+z2g3YdtZHq+YT0lGcm3Z64R+23UPL5Rz44z
1GJjCqv79H1mb9FqT0Qt60iWOjV6HF1By7kQ9JKhnkUmf46v1nio76E/e0C3
55mB6Fo9c0X5rs2MGdAMtVjtY3VHtWdfb87qj9zqXz3qSIZ6q562J39mFhlq
WlQj+s75uq7mWGhchf7kz22pa2TQMn8efWxnxxc9A8pei7OsKYSWMtaeSHrN
oTLUKvPJ9uTPzCRDXYtoVP6svn/W4n1a4yr0Zw/ofn0LUc3+zHWWAUVf/5y5
fqh/kPPdi0h61ZEM9UqW1N7scyHWo27E7bMe370zi1bv02YY+2E2R/edsapN
v0JUsz9zZVyDmL2GGEcgZ+2JoncNjFyzvE/Sp49nnwuxnlfdUDvu91mP36Pe
XNNyL0djK/R3dN+5D8v7NHNuxHoizoHec42S++n9bzNmQJnrSOa2Q00Za08U
vgPqFzW1ff++zn/EuRCUyv4+3Yj+6vF71JvvenyPUOSxH2Ylf67HMwIZRZ0D
vddtHNlm0+/5ydnfyZoBZa3FWdsNtdl/45kRc6nI87fIbctuO4+IOheCUuZl
8fpKvfnM9z/AvPb3nXnuMz0+o4MWvs2BjrLaFtnJlUz5UwZ99/iiZ0AZ50TG
D/il5PlypufIO0bVkMjv4UZtV2ZHc4cWe7G+9ngdfazwoo7E6if587me8wD3
BfR3dN+5F++RPZPZpznQPp99sm54nxN/W6985e/UOr7Ic7mMdThjm6GVrLVn
pJGfYUWtX1HblZU5O6tSS+L0kfz5mO9+gPn5DsJy5rFk9ml98KeM+Vv+fJYr
X71XSjLnK8cXfS6XrQ5b+ww/ldae1eYWo2tIxJo7uk9moz9ZXcQ6F4n8eRx7
b8Eaju4792JZ/0Emd/ff+PbnNeZApd89eOf4os7lstWW1bIy+KZG7Xl/Djf6
WHoYfZwRa27ENmVUc04B2Y2utZFFyJ+f7Hs4+pml1Kj6vNIcCyKxB/Qz+okZ
PMmfM82B5M/aCiPUrD2zf74TpYZEew6N0i+Z2W8Dfhet1kUxOn9+uu/h6GeW
EqP33XIvQB+v78Ro8V0bo4+rF88EzOLJ9w9Gzm3vHl/U48hUYzzbw+9q155Z
n5Mi1bpo/RutPdlEurYgklnHkxr90uP3HM0PjvY9nDl/jvDZ4PY7hkb3B8zO
vkPPmc8ykzv58/YdsE/vgkWqBVnz55cM8yH1EI61qj2jn9dqi1RDorUlwxgQ
UYRcA6KTux33SY/fc3X/jVnz5wg1ev9d96P7BGYnf34m0rMJ1DB7LZA/t6Um
wrGSd8le76h9+tmzPC9Fqx+RMt9ofZNFhFwDsohS76KQP7cXpUbv8+fR7YHZ
zZ45teBZgBnNXgvkz+2oiXDd3fv5yt/PnkNHbHuUNqmv+gx6iFLzIpA/txXp
u2D3+bP7ANqaPXOqLUqthNpmrwUt1yC2Fn0upC7CNU/ulavrcSKt2W3dJz1E
6cso7cggyno6yEq96dsPV/Pn9//+tOdhxGevI9HG/KP8OVL7YDazZ041RauX
UNNKteDuvTw614lceyK3DaJ5er/cqT+Z1u9Erh9R2pblXI4WaT0dZKbmxMif
Z3v2eolYo9958/v/RmwjzGS1uveUWsTsWtWCiJ8jP12DmKm92gbxlNSRO/92
9Gdmd9oZuX6M7sPo/ROBvADqG137Ruv17LJSDhO1Tr/bFLV9MJtvde/Jux9R
695T3udjBS3nQNHW4z1ty6hjiDonypJxQQSl98uTfx+t9u6PJ2Jd2/efPorL
/BzaGV3/RupVe1fJnzOMZRnaCDP4tu/Qk73vI9a9p8xtWUWPOVCEe6lkfjEy
b434HGCuBtfVuF+e1IGonxNFGA96nLPMvz8y656hrahjR69jlz/n6stV2gnZ
ndW9d7a8ev6c4fkIaij5fr4739s3ej1e6fxC/vyrH6O1CSKrNZ8oeX8jyj2b
5TlvdJ2Lcr4ikTtDP5HGjZ7kz/X6MFOtXvFah97u7L+xWv6crWZCLVev/ZJ7
JHOOO6Lt0eZE6iPcU/MefvqzIrzTNTrTHXneZu6nnn1i7IF+Vrzn5M/l/Zfx
ujHmQnvy52OyFVZ2Z85Q+n1aPcf6Wvf1iPoQbU4UrT0QWe2aUfpcN6L2tuqL
1uz7H4P+gHFWm/PJn8v6LmP2/LLadQ4jyJ9/Z47Lyu5e/6Vjdc81XjXv7d5z
lEh1KVJbIIMW90ytdzl63Mvb59FstWNUmzP2Vct+0Bcw1krZnPz5eb9lzZ5f
VrrGYZQ7+fP7f++/lzBS3StljsvKnmTBtcbqHuvxav/8jGu3sx03zKDVPVMr
g+5Re7ei1LLR5y/a74wme5YBs1mlLvXMn3t8985MfeYYILfZPncroeawuif3
QM37puVa6FbrD3vVjCh7gaqTcE/Le6Zmdtyqnr1rl/w5/u+MxFgDMa1Qm0bW
n2/9G7E2RmzTyscBkcmf/6XesLpI3yXYYj1eq3u85zw8wpw/Qhsgk9bzi9rf
a9ii9mbOnnucw9G/LxJrniG+2eeC0fdditT/M41XMx0LRCV/VmvgJVL+/P6Z
tXOVVn3Xax44er6pVsJ9Pe7bFp8B1twrP3P2/NL7/ZNVa63sGfIYPSdtaVQN
vtqnUfp+trFqtuOBiFbPn9UZKL8PWme7pfdoj/WHPerI6PmmXADu6TXHaJGP
1vgMcLv2OXvtkD87ZuCXHt8dMMqIenTnd0aolxHa0MKs1zREsXL+PGvdhLtq
ZAyt892SNva413vMV0bWLPUS7ut537T8jsOnP3um9ayta/y2j1Z6/p3pGoHV
zHrvRs+f332/Uv/0stL4CyOsmj+b78K/aswher2b/PSezb4/xvu4e68l3J5X
9TKn1/egt/h+9dHHlUXv55iW39/65GfP9Iza+li289J3X8/Sd9/6dPbjhJnN
mNdl2PN/RL+vkJ/MeD1DJCvmzyvUTriiZm7cM+O987t67tvZqq7sv7+rd/48
8zuWs1txjI+i957Bb9vfWbtO3KkFo46/V9/WNqrOjyJ3hnnMVuuz5M+92zj7
uPTu19FtgJmt+Gy6Qu2EK2rOr6Ku8+s9h2z9DvzI/FntzGfFMT6Kkd9ftH1f
osVxXfm5M+aL8ud6xznjscHKZsrtMjw79GzjSnV7leOEUVq8l/t633f0cZ2Z
8XkInqh9L4y4t66sxRu1PqDVz+25FnmFLGR28udxRs43ety3n2rRrHOtXt91
MGu9td8GzG2WDLp3tvv0d/X87plV6vZKxwpR7DOH7T50mccV9QR+qf18O6o+
fPq9Ed5/r/1zR+XPamdO8udxRtXDo3W0LX/f0c+ftWa0HlNmrbmr5RewssxZ
wVvPelXSX637esW6veIxQwSz5c9qCfzS6n4YWR+OcpbR6w9bHaP8mavkz2OM
rj298uf97xx97L36t3U/ztR/K723Dfwra17w1mscK/09Lds5+1juuCGWmfJn
dQR+ark+d+Rx7WvUyGfeVvWyV560XUOpfuYlfx5j9Lxj9H7xo/u/dd+2Pm+z
1FzrnmFN2ceCLPnzu68jtiuzzNcuZDZD/rx6/YS9FT4r771O+FM7WvzMnllS
hPPJc/LnMUbXnncbetfCFTLoluPcLDVX7gxkHwuy7G1Ru51qd4w5HKzoaB1G
pvtR/YSfWt8TkT6jijLvzTovVD/n8C1//uOf6/POn8ufv4t07/TMg/fHPUuW
emS7LqP2z83eZz67BN4izMPv2I5j7zoWfc1OzXobaf4yUrbrFmZylD9nqEvq
J/yux30RZcx+16rRNatFJt9jTUaU80iZT/nzK2M+ypnP/lz+fE3E+UePDPqo
1kb5HLDVsdYeX7L3VcRrHxgrU107+v7elu+71GpzaRu9s9Lm3AD3Zcyf1U/4
Xa/7IsKYfbQP9OjvRoz88476Tw2dw1n+/M6X9znz2Z/Lnz/L8J5Yy3Z9qxkZ
5o5X+7BVNpG57kb4rBeIK+q4eNbW1vlz7Xpf0r/qd93+XNXff/353+eDp0a3
nzgyvE+5zZoyz9+hpZ77Bo++B8/aMLJ+1ZzL9FjHOPL8UY/9N/rYPr+Nrn+f
tPqeois/d/TngDX7UP78+/nP2Hagnyz1v0f+HGVdivp93i/65J6S75vxXMHe
fh1htPtxWzsjtg9G6zmORti74dPxjspAavbLyHWM5CJ/7qPnO7s12ln7Z945
1qh9c6f9Lc5zxn4xXgB3jH4+uGI/nrf4+bXr5pOfac+NvudodvJnaoqcP+/H
iEhtgwhG5MGj55dX1+JFbNfVcxp9PzpikD/3kSV/fql5jz+tRdnXQrfKn0cf
153zHvkaB+LKUOuy5c93+1W+qn9qkz9TU6R9VPeOnvkitQ9GGzGGjrwH7xzv
iHpR4/e1OqfmW3N4n8fXtSZ/7tfnGbLnt5rvYpQca9Y52/Z81zjXmWqvNXNA
iQjvSX7TaixveexXf676Xb5XsT2Mfyd/pqZtnYr0rJBpvRGMMGqOMXJuc/d3
954H16hTEdZOEMc2D9ruQfxSMh80T7x3DjLNQ2rUvVp1KEMWcWTF/DlLO5mH
nGhOkfKEI63e8Wj9/uK3n62G/8vcOFafrt53/C5L/qyewk8r5s9P61PP2lbj
94zew5VxPuXN+79rjt3vnGSbi5S0tUVmHGl+2aMP9/0Z+bqx3wajGMPmFb2m
tBiPRn5/S/Rxpid1JVafrt53HHvXyyjrVDI+60FPo+cZo77jr+SYe9a3bU19
un9q7faopXFt8+Zt5vzt35lj9zs/Ge+h0rWFrfpxdL9cVeucRz5m+20wkjFs
bvvaF6nOZFzncdZmNfwndaVPn7728nvTd9wVNX9WS+HY6PsjY/68bXvr9pfu
WR/hO8Ro52nevGeO3e98RZgb9bw+Wl4HWdZC1zrvUY51W2fkzkRgDJvftv5F
qjcZ13kc5fnq+O/UlfZ9us+cfa8Md0XKn9VROFa6pramEW2oncm2/N7rGvlz
rf4d/VkF53lz6Xkxx+57/ka3o+f10fo6iDDfvCLKPtq1+nu/t8/odrE2Y9ga
3vUm0mePGdd57D9DVMePqSvt+1T+TKkoc9Io83SIZp9pRmhPz3u11e87qnel
/bvPnp/U1FrHq6aOcWcP5xLm2H1EqLm9r49e18HRmBapZs2QP+/nDxHaBC/G
sDVEe4Z5yZg/v9s9Oq+JTl1p36fyZ0odPSuPasPovoCIjtbUjr5fes4hW9aH
/Xy41vvWJWug5c/51NpT4w5z7H7ndXQ7el8fPa+D/dwz0tro0vMfZawufScH
WjCGze3o2SVKDarVhh7j1XYMifIMGJm60qdPt/s/y5+5a3T+nPn5Dnqosaa2
RZtm+l213w8cvQe0utrWiLx5r+S75c68vrNudN9Gkvk+ypI/v23vpSgZxbtd
I/5tDWf5T+brmnl8qlFH6+u+5Ryyjphmz59b1tJtvm3d8zV36sq+vqgr1/r0
7vpn8w6O7N/nGLGXEfC7iGuf3+2aqUbU2Lf508+8ewzy51gi5M30F+E5+als
+fNLizo86hoYXSOizh3g7axG7bMg73rnFy2DrvX7Wx7H2d5J6vhnV+vKvp6o
K/f69M5ngvtnKM9SvIxYX+lzPPjuaP4xuk3vds2SP7d+R/DJzyr53cbzOtdE
jz2ciSvSPhBPfHsGi/asFfVd7af3/ch64bMyMjjLNL5lQdFqF9dFqeu11pj0
WPu877PRfRfdnbry6XMudeVzn5auZ5BJ0zt/lj3DNSVraFvrMQfqNc/qkUH3
Om5jd1m/mQOxvR5Gt+OpT89g3563ouXPI5+3n34OMer6Mb8mi7vvyV9dazf6
uPgsQl2v8btb1tlPeyfJnz+7Wle8V1GnT5/mz0dk0mvp/Z6euTFcEzV7fret
5c8f/fxec458d85YsubO3PReH5vfcCRq3b3qyvNCpPx5K9o+HE9+/4g2q2Fk
8mSfVjnRPDLnz61r7af8TZ3/7E7+fERdudenNfPnIzLpeR2d29a/a/QxQ3TR
1zH1eE9i9LFv62KN/mp97BH6LCp5M3eMzjxLfXteyJLh7PfByXIt9Lx+RvcP
PGGdIqPG2dJ62XL+eGWemn1+0pLPtfr2aev8+YhMeh491pq4LuC66PdLj8//
Rx/j9lh7ZtBP+tba5+M+tIczd81wnTx9Bov8rDVqLfTd66Hn9SN7Jqs7Nerb
+sRt7Zqhfq8kQ01//5v3/22Zk1x579Vc//ycyp/ri5Y/fzr/MulcWu+94fzD
dVnul9U+qyrNP+7MW+/+nqh91ou8mVpmuG4+ff9glOeFp0bk0D3eX7lrhuuU
dZVkGt/yZ/lDLr3r+ZNrovX1dOezRJ85nr/T2KqujD7ekTLkz1euEWNCPC3z
Z+cZ7skyt6g9Z3z/vMg1o3TtQ6v8ecX1EPbUoIVs99L+s5eXs+8fvLrXYfQx
qPf7Hnd+V4+9qaKfH/imV05knpBD7z2LnubPLfKSuzV91Wv4yr0sf66vNH+O
NKeWScdy9Z2Pp+d59PFBFpnumdr1ItNYUHLsV8biiOvtRvMcyVN///Xnf+fB
T41u/9ZR3ry/F0qfF45+/ujjPtJrLfSdWtOyPd7rYBajciLziJh6vtdSI3+u
mT0/bc/oc9brPO3fa/z0b+TP9dXInyPXWJn02L6v3dfOG9zTe01XrfbWuteP
1heMPsYr7W1xnu+utxvdFy3YU4NaIr8/eDTfPXL0d3od735uHuke7DFuXv0d
rdqi9jGbKDmRPDqOiJ8nvv9+y+z5aV+NPl8tz83T+zFKXZlJydqN19qPjNer
TLpfP9esq84P3JflvjmryaU/t9X6gtaetPXbWHz1WshyzeyvnU/HIm+mtsj5
88vRZ28lc96Wxxt1bXTr7OJq/ly7P7b1cHQfQy1Rc6Kj3MG9188q+XPpWDHT
3PjuGudPotYV8mXQezLpdtdFjbrqPMB92e6b1vlzpr7Ytv3uvym9HrKM5/tx
++zPs90H5BA1fz5a31yjDvY83kj3b8u10CPyZ5/BMassOZE8ur8e77M8zZ8j
ZM+9+ql1/7eYN2SpK6vKes2ekUnXuSZKa6v+hmey3Tu15+P7nzf6+J660/ZP
5/zK9ZDlmjnL1ozR9BIhfz7Kmj/NXTMeb5ScpsU4cqVW1fqdcmdmlzUnkkf3
0fI54Gn+HCl7bt1Hrfq89buNWevKSjJdt0/IpO9fDyVrR7wjOK+Zvrspoqw1
qVX+nLEvjvrl6t998t/e/z1yX33KnUe3jbWMyGM/5c1Hf7fm/Rwhb98e14i5
d4s56ZWaHLHdEM0sOZE8up1Wc8W7Y1HE7LnFz2vRx73H/5Ks4tsextSz2nOg
TPpa3zz5t8bceUV5lp1V5nundv6ctR/OjudqH9758/fPj9hXR5mbDJrReoxh
Z89bV+/TmvdzxDF7VEZTs960rslR6zrUNnNOJI+up8Vc8Un+XOP31b4OStYM
ttBrjXPNc8sYngPLMumZrvOS/Nn4OreIz7KzyF5DaufPo4+nVf98+jvZ3y/4
lLt9M7rtrOHTGPbHP9fsy50x7NPa5gjXdYYxu/c7L7XGqbOfUXLuI1071JV9
fKecPLrMiL2UnvzdT+e+1Tkf+dy0nweNHsNG/37ukUH/7mom3Xv+3PqYn1wL
7vf5ZXiWHW3lZ4zWz/XZfcvWs91fo96rg6fO7rF37vwtfz57zop63WdbQ3g3
n3na76XPO59q+dPrYbZ3f/gp2/hOe0f1zv3/vb9q/ryr/V1Sm3vU9t75XdT5
f5R2cI/8+buzTPooox7d1itq5GXu9zWYP+ujT2rUvUy1s+QYj8ba6NdO1Pkm
XHV0j20z5zv58+hjuetbu6PN/4/qzdHfKWl3yXjzZL+kp+eG/KKP74wnj/6u
5lrJq/1b+k5Lj+ea1tdKtDXOI/qAtqLNQTPInEOXzonc7+swf9ZH37RaUzab
o2ONdu1kW+sJ3+zvsX3efHf/jUyy5c9H7T/KZrZ/9uTnXv23Ld5tsuZ5HdHG
d+KTRx+rVTNb58+9z1er/UkyXH8rPT/O7H0Onc/vrqyFjjx+1MifRx8DOa6V
0e3XR+2V5s+r1ZPtPHr0tbPPmyOOV1DiKH8+cnaP7T+HyfSZzLfanOU4tm2t
uebj27+tXZ9lz2sZPb6Tnzz6lxrZ1JX+e5qDjTg3Nfsk0/VlLJ1L6ZqClVx9
BjmbM4+8x82JcK3oo1pGvQud2XscGHHtyJtZybd77Mr657P8+eragxG59Z35
6ehzdMen/i75eU+unTv1OWNfU2b1uSH1rZ5Hl+ZTrcbFUeehpK2Zr6GMbeb8
PNaYy/G8v3vdT+ZElFwrd9aOjW7/qD5a6X4qeU9t9XGmx7Uzw1wTnqqRPz9x
lj33yq2v/ptMNfjqu4dP6tvRc0+N+myd1rpWnxvS3orzu9bvXN79+SP7/Opz
1NEa56zXSea28/u5rLWWgOfnoFcmbU5ErWul1bN7Ju4n378U6drZ51zZ55pQ
Ilt9fppbH/3dFs/aGTzNY/bP8rW+K0XtXZP1G/S2Sh79dNz61h93+2tE/+5/
31FfzHodzHIc/CSDjqVVJp3teYxx5M/lfbTC/fRkrLAmrP7eAPJm+GmV+vyp
DnzLrc/WXNds26h6vz/+q2vCX3xXCiXMnxlt1hzypcW6lzvj1Kjs+Sx/nvlc
j+pv+p5f+XNcNTLp1Z7HRrdjtE/rqb75dK18mjtnu1ZKfOujFZ4xnryvVnN8
yXqvl147s84zoZZV5jtbd+rBpz0/nuwRcvZ7a+yRUatvrrTh2/xn1muHeuTP
RHNU27/V7NFt/uTp2pdPfXOlD3uPYUfj1pP3nbKq/cxIXDLoPM6eF85q0cyZ
4tHnf6PPSYlPz393yJ/bOeujd/+s8Ixxd97TYp5U8x0R1w7MYcUM8e68vWQd
WY15y6h6/S2HWW3+k2XczGK164d8PuXRET4v/OZJTlWSP4/Ons/GzpmzuhF9
ToxzProdPD9/R+PKp8wj25yodJ1Oq8y3Vv48ut5+y8cyXSs9+2jbP6tkiHfG
iu213eOzmpr3Y03WR0Fbq+XPT+YNPeb5LedUNftt1rnyneMe3aY77W6h1roP
+TPZfLsHItaHu+06Gu/ex/ytb3r2wafzcOWYZhEhC2GMma/r1ZzNqd9zobtz
omjzvRq50+hzFIn8+X4f7fvmW4bY6trPpEcNGZkzn5E/Q1vy5zb/5u7PP6vF
d9tYs+5/+30158pRXMmXaos8b2j5DGD+TFbf7ttoz8qvNpX83W/3fs984Grd
HNW+nmY9Lq67c28TW+ln8i3mf6XHdFav1a1214r583Efve6hI7P30dUxotV8
4uzZdHS/fOoD+TO0tdoY9mSu/p47tWrTyFpckluXzpVb5aPRPwtuledmI38m
o7s1Jso9vh3D/v7rz//eQ0/t+6P1MW5r+5Pa2noMH3UdRrm2GOt9bde8r6nv
23x1lXfCZqzHva327N6ij1bJEK/OFVrMKaI/7+7rsPwZ+lhpDCupf+ZKv/dl
1Py51vFFzpJmsFLtYV37WjKyhrzHsVr3XqtnirNnghrHPoOoz3KMcSW/NKb+
VPP+uboO4tt8dZX8mXLu9fI++pYhZlive8XVz3tmmiN96oujueWdWnzl/ho9
14foStZKvNZajG7/HfLn+tfOKnPl7Zg1ui2zMH9mRUd5dM95aq2cqna7z9Y4
1zzuFu0edf2MbgexyJ+f9dlZPvz+O7Wy5StWmlNTxr3er48irSF46tucIfu8
6Ntxfcub9/+mxrWT+XqBiLI++5S0e9baXMJcmVbXj/kzqxiRR5feezXauM9z
Wq+l3j+DjD7vJddK1vbTljH1nqd7rjl/jOZaGdNHWecSM+TPd96DvpM3H/38
mtdOtmsFospQp2q32Zqj35n/4PqBunrk0TXy56fHVntfjbv9mfk5IOPci36M
qf+6umb5W+bs/BGVayVGH/Wezzz1rW1Z8o07nxc+6Z/3v2v12UXm+SdEkKVW
vdS65zMdc+v+rP35IOtx/cB3LfLoXvderzXO38yQP0d+tiWGFcbUK9ny2Zq4
/c+KkDmvdv5wrczaR5H36fi0hi5C7buq9meGZ/lQy2tHDg3PZapX8uc2fWn+
QwnXD9xXI49uPbeOuCYo6nPh1XOerc30l3lM/fYedYv9MCLVAnNq7ljpu5tK
+mjU/XRnn44WNeh1jkuukdHn7qwfz7Lnpz/37N/2Xjs/up8hkwz3zNX6f/V4
Mxxzy37c9mGN74ddtT/J/awMUTzJe2vfe0drnKPkOm9Z8+eIfUlMUcfUq/th
1MyWM3n3R9TzBxlFup8+zdFa5JCRjv1uP13tq6fjw5XxpWf/yaHhnujPcbXf
hcn47FqrD4+OuUZ9/vROEHPLOj+CyK7k0aXfHRt1jfM32cZw4yN3HN3Xr/v5
rcWY2nvN8my8UwhtRL2fjrKJ2p+PRz32o764M5csGT/uvAs/4v0COTRcF/k+
aZU/Rz7m2n3X6/2UVfqVn9eP9wehraNM6Kx2X82psuZId54/RsvUVmLY39f7
e/nTvb2fk1mz3N7+Hs+SGUEGWZ4xzvaVKD32iLVkxNqFWmPT2TlpcQwyEfgs
6vPR2RqM0mOdPYO++hzRYq2GtV4AbZ3V7nc21WqdZBRR5yxH5ylDO4nj25zs
W/78LVd2PdZz9PlSaV5m/gz3jbxvzj7XK80aouTPo9+Vqzl2fToXra6hbO/s
QU/R5jxn6zXkz9f67Fs/vf9Oq/Ftxv4FiKJ0/43R7S8VfXyR9fFE6XsNo9u/
irvvNhx9HvDp544+Pshk5Hh7JX9+kmGMyp9H5837fq31u78dR+u6K4eG30We
77zbVqONtd+PiWA7Vlypa9sa3PLdJvNogDbkz3HHFtkzT5Wufx7d/hU8yUWu
5s/bvzv6OCGLLM+b+1z309/tkT8frfUbPX9p9b7OlXfCexy3HBp+ili7a9eD
2fLnu/PgT/356eeU9NMM/QwQyer58+hnpGztIoea+z9T39M1eftc59uc2JwZ
7sl2z3x7v7tF/hwxbz7qkxbtuXKcPa8hOTT8K2JOWPvefP+8aMd515MaXfLO
X2l/zdDnAFHIn+ONKRHbRC5n+7rbf2O8p/Pu1//dPntcrRNqCVyX+X45yqK/
7cV05bPI6Hnz/vhbtitqze1x7BBZtPy5xbPc+/6OWH/v9Mndtpe+d1Krv9RY
gDI19u6PNNY/NfoYtmOZZwhqiPKdU/xUsu75aA/Yq7VrdI2DLLI+158dy6fv
mP621mD7XbSR+6XVXhtHv+dKLY2wj3jUcwWtbD8fG92Wd3tGfxYWRUldqvHO
Sc3PAiJdYwBZbOfpNfLn7LV4dNv3+bPnBkrJn+MpnX8f7fl35/taRtc5yGC2
MfjKWPApfx7d/ivnq1feeufaGF1vo2Vx0Np+njS6PRHexRhtW59L5r7f/s6V
n127v3zOB/Dd0RqRGjnV0bq80cf6pF9G/e4M64vIRf4cS42M5Ch/vpuHqC/w
XYbn+qtm/S7aEet8M+XP+34yx2R2Z5/Tj2xLy98RpcacHX/pOylXa/yo/Pn9
MyOfB4BRtvv27Wt0zZwqcw49avw42q9xdF+Qn/w5jlo5yVGduPuMY54M3810
n8z2HR+99toovS6iZb1H2ZxMmtkcXeMj2tHjvop479asz1fnzVfPccv+8vwO
8Mu37KNFTrXfnzRDTR75fTGZc3tikj/HULMG7texvf/8bu2aKVuDFiI+1z/1
6fsHs40Fo+eUM9TaozmnuSeziPL5Sq/7aXSN2WbNNevI1fN25/z22I979PkA
GOnqPL1lTrXPoSPX5RFzlKP82fyfGuTP47XISo7W9Dypq5FrMYw2e/78yp73
Io8Fo3Pnp9dE1Dore2ZWEdY+9fy+jd41Zp81t6gjLTPlHv2lngKruTvuts6p
9p+JRs2he84X3iJ8Rs+c5M9jtXr+qZU/j6h3kMks90fWsWC/b9zo+dGTNkRo
9xkZNDMqeTesZht63Uu979uW2fOTfTuivpMSNesAqOnpPP31fPHU33/9eWvf
pe34FHG+23OsqP2uEmyV3tej259Zy7U3R3Xj6bOO2gPnZnl2zJQ/H62ti1Kj
Surs6LZ/alv0eTk8Nepa7vl7Z3l398n6tAzvpKinwIxK9vo/WgN39HO+1eu7
48XReugI9bnnuBTpuMF62Lr92GOPuff5Knn+cM7h2Czjc/T8ufW73DWvh57/
rudxHc35o/U/PDFif4oRGWfPY6v5GWHJ3tFZ3kmxFhqYRUnuvP8Z3/7sSv78
5B2YaM8bvcalyO9ksi7zozI9suf9vL/GuXPe4XezPDNGz5+3fR1lLrhXkill
nu+N3kcXSo3In0fkmz2OaXtsNfZFOvrssfVxj6zHaimQ1X5PvNKfs//zo3p+
pcY/GQfOMuiRz329xvHR1xHsuTbL+q3H3PJs3Ulp3ZohZ4OaRs9FasmQP0fd
c2PbvpJ1HtmvoSfvxkMUvd9tHZE/t9rvrXSd26efW/KZY9b3/tRRIJuaGcfR
zzmbJ1+t87Uy6P3Y1LOPW/6+GZ5DmJvr857eewidrRcpPW9qE/wkf26fP2/n
tJHX2pbmL9mvof35muV4WEPv/Sl6H1+rfLjVmpQaa86y5s/7Pog43gG81J6X
n9Xtu39+pFYGvT/2nvlOq8+RjTVEZw309X4a8b7GWa2scd7UJ/glwvtYpV73
c8T8+SjfiDz21Hi/JOqxPT1/me8L1tIrFx69t0PNvhr1Ll+P441Qj8/W3o1s
E8BLi3Hg0zhcI39+KcmgP6197lGjW81TIj9bwZZnynM13hus9bv3f17rvZjR
fQwRZM+f3zXhlSE/9fdffzZpV7Znbe+XfD6uGY+NufS4Rkfv61Dy73vX5ffv
evI7S+e7UZ7Hz9aBq6fACPt3Emv/7LOf+anm3amHT+vn/t+cjU2tM5/atT/K
WAdXZMsGejrKnkfsEXT0O2u1w/mHz+9lRVcrS6h5zBlz53e7fbZ37fhmP0by
av0cNvo572ltHVGXS997qfW+36hztW+HddDASK33XPr2c2vlz++/X3O/kKOf
12rcrP3MZSwhmyhzs4hK3xuscW5a58+yBFaXPX+ulZmW/pzW89qV+jIDGQpR
tazho+vb3d8/6vPAGmuXa5zHSON51nkGkFuv+fmnulaSTdf8N9/66VMOvd/D
o/R81Dqvo64reMoc6Nj2nh71jN06f97+DtcBq9q+Hzy6LXfUnneUHH/WNc9H
10GN85LtWirtt+znnrm0fCaLcG9faUPL96t79P+s76Ns59vm3kBL2/08W48D
32r2lfz5SRtb1NCzee2nvZTutr/WXlqjrzF4yvX7075Gjvp86ay21GxP5rWf
UEPJ+8Ej29xiz7a79/8MufNb7c/1Rh/PiP6b5Vogvxb3YJQx4soas5Hz1kjv
kUQ5Z/s2bf//FccLoK2e8/MrdbY0n/6kVQ09ykUi5M8zPXuxLnOfXyLNVXvk
z+/zL4NmdVmeAyOs7RudcUQ/9xmuo9Z9OcN1QV4trsEo9e6oHRFqcs13imvV
0Cjn7Btzb6DEtv73noNd+X3f6ltJrW79/HY1h35yvkrOda/zCy1kyV169EOk
+/lT/txqDw5r2FhZ9DrYY155ZY44W42o/ewfbSwZYcbrhFxq1/Mo48O2vozK
Gz61KdLPinTerhx3lrYCY21r/8hn+Ktrn6/UtpL61+MzvP3v2Pf5nb5/Wu89
XzCLbf0a3ZaRfRDtfv5Um2pnJdY+Q+zn1F5r287mTxEyjlb92qL2Rb6WZuhf
+KZmvYo2R3zyvNtKi7x4xfx5295sbQb6qbUHRKmrGerVMaK07vWom/s57b7P
P815//7rz//83//zPx+LNg+BUivnj1Hv51758/vnbT9LHX3sMEL0WtCrbdsa
EOG97tbHKn9uTw7NCDPu4xAld962pebPq31cUfpqZL8CcxmdPb9crde98uda
P+PqsW+zk7P/vm3PK0P+z3/+9yPv/Hn0dQc1rbr/b6RniqO2nY0ntceZ7c/K
OFeHGiI+823nML3uy23tmbketHz3I/LYEqXPR7eF+dW6ziJcr/vn3dH1pcX4
0OK4IvTVU2olsHW270bU7Pnlag3LOF5fGQff56g0fx597UFtK+bP0eekn2pa
67avcg3AXpRrfz/HHPFOXeT6WOtctxz3olxLEcmh6aX0Ghs9Vzyqx6Pb9O7X
FmuVI14DI0X8XBzoa/tM8K67o7Ln9++unT/XHNd618wr50L+DD8dvccxuk0t
RZi7X2njqPz5fU2M7gPoLcJ1P3Jtw3ZtXYS+6NnHtX/HzP1Xu5/0Fa1kzZ+/
7X008p7Jtk55hvqiTsKazvKAUTnGnVp951midv48ol5++r3yZ/hpv84uQz5b
cqxZju1T7tSjrprrsprR9eEoF+1xHx7Nb2deA92jj0dfS9mMXMvDvEo/S+s9
D/qWO49q1759tX9uy3t/lrns7J8LA79EfBfxbv2/M7+uPbaMrJVHxy1/hp/2
+32Obk/L44xUx7/5tP65x5g0+/UAe6NrRO+1z99yjtnv/5bjnvr5/JxEe+Yi
t6f3Yc/x4GruPKJtrX9n6znt6HG9NvUR5hUxd9627e7a5zvjb+058+g5+Pb4
5c/wu+1+QqPb0ur4ItbyT77lz73WQGfrNygxugbu935u/Xs+3d8zZ6j7Y2+1
pm/W/mtNDk0tT+d/PeaNR/t6Xv13PWtL6+xZ/nyPsQXmsh0HItarp2ufR+bP
rX7mkzbIn+GzCPdqTVFr+ZXz8C1/7nFcs10P8EmUfTVb3d93s45Z7/8e44IM
tc550oeUelLHWte+0mu7V21uWSt7vesz6zimNkJud999GdXGOzV0/y7n1X/X
qk5HqP9H+fMf/7TrTf7M6iLcp7VErudXzsO3/LnXuZrpmoBPRj3Pta5VJfPb
Ge//nvnzjP034nzJWnjq7v3esj7UupZ7fTdA636QP5cf28zHBzPKkDvv23r1
7z/9fpVWdSzCu5z7/HmfOX/KoOXPrCDCfVrrOKLX9E+u5s+9jnGGawK+GbWv
Zo/3j0vW2WWupWfH1ON3yKDr6rn/FHO5u36rds2rXed7fWbZ6mf3rI8r1IwZ
x2mYzdM9l0a3987ff1rbe7xrM6ofv+2/8S1/Ht1+6CH7NZ49e36fgyv5c893
MLNfF3BF7+u89d6aNX72bPe+/Dk3OTR3jdp3qNW+ni3nZK3ne/vaKH92nDC7
TLnz2532HuUTUfLn97GMqo+f8uer+2+Y9zK7zPlt5rZv3cmfe66BnqFv4ZOe
Y3urdXaZso7eeo0RvTOWFZmPc8eV66RWfejxfnWL675HRvL+2b3z51XqhLk6
xJExd363u+S9ySf5c6/PPXufi7P8+Vv2fLb/xqjjgNYyztNmyZ7f/X90LNt1
NCOONeN1AXf0GtMzvOO9/7kz3P8j8ucs+/xlNsv1SR1///Xnf5/bavv2e3vu
61n7eu+Zk2z7R/7c7phHtwNWlTV33rb96b8tya1bHteoNSFn3z/4LXv+tv+z
HJrZZHtWztbep8fz/rORx2tOy8x63Fut1if3eHct+/3fa64mdx53fs3H+bbf
4hOfngNH7OvZYhzJ2vZPVn4PRS2EvlrtuTSi/U//fZb8udd4cPT9g3uf5h3f
+jPzZx2wl2WelrXGl67PGXl+slwb8ETL67vmPKH3WrsZnuF7tX17PjL3V1Y1
cujSMXp0H6ysZ/486tmv5vvKvefRPevwLGNXSV+veNzQU8/5eMtjKJ07ldSa
HnXqKINu/XtL5iPv/PlKO2d6V5V1ZfgsJXOdL61HI+vLTPvBwl7r/LlW9tx7
rV3253j7Fq2n5FmqdIwefewr65E/R1hzVKO29K6LvddZj1rzFs3oaxVmNEPu
/D6OGjWy9N/2XAPd+py9+7TWXPLq5wNyaLKLfO1mr/WZ8+f3tZG5/+FMq3ur
Rs0amXlkf44fNWZkH6tm8CSHlj/n1TJ/jpA7v5XW4BG1acTnptZM/Op7/QDl
Ruy51PJY9rlsSZ88bUeP+tRjTNh/JtFiLnkli66xnh1GiHrNzvA8XyN/Ht0H
5rHMqEV9Kf2ZEdZY9Fw3kOW83um70cfPvexQ/pxXq/w5wrxrq6SmjaiHI3Ng
NVhfQA2z5M7bY4mUP/fYT/Do/291bbSeS15ZEySHJpto85SMuceRGvsBReiH
aNcH1FDzuq6RPUeYN2yzg4z3/cg2Z+yvmV25p+TPebXKn0fX4CNPasuK74Ko
wb/3hz6B66LMxWsfT633Gks/Dx31bmWtfazOro1ec8kr653l0GQRaX4SJXOt
odZ+9KOPI9o1AjXUuqZL7tOIc913W6K1q+V5qCFbf63i0z558ue8en7/YE81
vhNzdAY86nfP9PxQs0/M3+GziHPxFsdXeoyl2XWNNdglv/vpv/32buqIueTZ
uvbtvjE+gySyKPOT2eaONepRhPMS6RqBWmpdz0/mURH22ujZRz2M7ks1Mraj
HFr+nNe3c/fHP+d5/7/fIp/TzOsWItTgyOPpSHII+N3sufP2GF//f+neGzXz
5xFroJ88q135dyPnkkfr2/eZtPpPVKOvyxnnjWf16M5z0Ojzsr9GZjtHrKtG
zXnyMzLNdzNlqhHGkCx9tbLtXFz+nNenc7efXx1l0VHPaebvDVGDY8s0nkNL
WdaA1DzW7f+u8XOe/Pta+1A/dbX+3X1OK3ln6fXOU61j+9S/tdbAQ00rr5lo
5eg54u5zULS5YrT2wFM1Psu/U7cy5c5bWe75CO3MeH5Xth+jt58NZ1gru7JP
n+9/mlvNnj+PrD9RavDoNkRnLRyrWil33h5vhJ+13Rdi+//37pNPv/Pp9XHn
WFoe89ka6LO/t8I9QHwj6sDMY8CV54hvz0ER+8e8lVmU7gd25+9GvJdb99Nq
bbS+LJdva2itf47r7v4bV85rhHOadU1+lPHNM/X182WsYhUzzMOfqFkPS+vF
ux0RzsHRsZSsEbpzTK3r7n6/jU/rnuXQRNC7JkSoQS09fT6Knj+/mLcygyfX
8d3seYaxPfoxRKqTamMe8ue8nsyvWp7TWvVH/jxHO7KwFprZzTIPf3LcNY+5
Vp2I8tnXPp/ttS9JrzHqU8Z+tjfHavcIcfSqCSvMEWs920ao00fnL2K74I5W
e2jMOJZHvt8jjSeR+4mfvu3hEDXr49n3D145p0f7J15dN1djLVHW/DlS3YvU
lgzM55nRjPPwu8de8+dFzLJL27Ad43v2TYTj36+TPvsz6KFHrY6UFbQ8vlrP
tlHrwKrjOnm9vueh5HsivtWumd/xi/yMGqm/I7WFz+TPed3Jn6/u6310Trf1
/Oz7fT7999rHFfGajFbzoo5T0ckdmMHKufO2D2oe/2z5c62c9Wm/jD7+s77Y
7pFSo39Kn7lH9w19tbwvos1Tax7T/h4++/7Bu89BkepUz2sFamv53U4rzHmj
3u/R2hWtPRy78h3B0bI+zs9dqSfn9Fv+fHdN9KfPRD7NGeXPv6i/ZedS/5HR
CnPwq/1Quw9q9+uIGrMdp7fHUtKWp30dbczctms/Zyl5ryvj5+mM06p+R73f
nhzD/h49OrbS++7Tz47EXJUsWoyFq815o93vEZ+Xo7WHY/LnvKLkz2/f8udv
a6fvXJN31m/3EK3eRZ8zZ2AtNFnM/N7hEy3u29o/s+e79vux+ej3Pjm+0ust
en2tkUPLn7mr9n2RdVz4lDd/+7c17rsse/FEbx+81BwLV53zRsvaI/Z/xDbx
O3PjvKLlz0eZ8rcacDS/vPLeXKRrMmKti9imjCJ+tgtvq87Br/TJij9z+7Of
vId0t9aVPgtlqa1H+dfVYzfH5q6a90WksWE/Xp35trb5ipr3Xcl+gr36NWrb
4K3WPbnamue9SPd6pPElah9xzNw4r2j5c8vjirz+Wf2d38pzHeKRO3/ulww/
t/W5e7IH1p0co0b7M16/Z9n+2d83x+auWnlitPvr2zuSNce02vnzvv2R+vXd
xmhtgq0a+z+7zmN93hSlHVnaxS/mxnnJn2O0P2qdi9qurCKvf2ENd9deribb
3qkt68mVPTdK+rBWPpa1pl7Noc2xuaPW91VGzJ7P7pkWbW2RP+//LNo4nLWW
soYa+XOk+22kKPd6lHbsuVbiMzfOS/48vv2Ra1y0ufEs9CsjyJ2/90+rvmk1
x27xc7fXydOM5Fu7avZ11OeXJ31+lPebY3NHrX2LR44Tn/bSuPtOxsh+3B/P
2bFGGpdnqKfMyVhY1+h7ffQ4E71/+Ew9yGul/PmdOUfb/zly/Y3ctuyshaaX
aM+3EbVeR5shfz56d71kDPjUtprtnu3a3mds5tjckXGN4J19m3utG+6VP2//
TpR5YYQ2wN6373YyFt4zeu4UPWNQB2MzN86r5B29M693/0bfs5muydF9lb19
2X0a/0vfo/32fi1zkzvf66tW/ZRhXXWrvcCP2lf790R/hik5rk/5c8TP0xmv
Rv7csn2f1jZf+d297vXa+fOdffFb7Gd99xyZ+xPN/p68+l6zsfDcyPs8+twt
evtWlynro4/Rn+FnuSYz1DZz0D59XHvfzwjXN2Nsc+fo9SWC1v0UOdvu8RnF
tra1yjVmHqcy7SfGeNHmv5/y5tF99a0fS9bh7H/e3Rp1ttd1r/XfPrsmGvlz
fSM/a8owb8vQxlXVHqOZw8gMOtr8+1MfRZ/fqb19+3p7Pcif51Dr+6C+2T7n
R68rkfTIX6Plzz2vk+1coNXvHP2Zd0vyZ0qvl17zg9K1zZl9qz9P69Oo/Lmk
zdCC/TfaGHGfZ3nHIkMbgZ9GPRNmyJ+z1N4Vnhsi2d4z8uc5tK5HcufnevRZ
yzr/pP0jrpXWax57ZjK92X+DGtdLi/lB1rXNLXw77pL6dJQ/9zquDM8prMH6
53Z63+dZxoks7QR+GpFBZ8mfM9S0LO2cTen3To2+vvmlVT3aPve7R+/rUdsi
5dujr5WWv3tELtOL9c+UXi81x5sV1zZf9an+lPbTfu2zddCsRv7cTu+5YaZx
Q/2DnHo/F2bInzNlRmrvGPLnObSoR6OzxBmskj9HyIi2eUmrPpg1g5Y/U+N6
ufuOurXN97XMn98/Y/87euTQWd7XZG7232jLexX52wr81PO5MHr+nG0ul6mt
M5E/z6FmPZI719ErRxmdP0fKnt9taDGerJY/X33uVu/XU7pG0Nrm567swdHy
d7d+x8S1wEjRn+2z65lNZJqnGQcht17PhtG/EzNbLcs0TsxE/jyHGnNmuXM9
s82xj66LKNfL0XviLeYBI/dHbc0zNyXXy/ZziitrBEfXjOw+1Z4edanluyYz
1VXyMRa216tGZRtn1D7ILdqz4Yi2RDr+KzKOFTP4NNc6WtPkHbSYSufM3nuu
q+fa595z+UhrFrc5yNE74zXbuN8bNds7Rp945qbkerFHal+j8+e3VntEz1JX
ycdY2EfrezzKHDVSnwDtRcqge7cjY92d6Vk+k2/vXXu+zKH0/fls9SKynvW3
9x4fkbPno/Gj5pgy834BnrkpuV7MD/r6VING1afaObTnAUYwFvbRYz/5bPO0
jG0Gfhclg+5dU7LWsAjnajWfvnfq0zOk58tYfH9YHD33pOi9zjrKuHKUPZ+1
rda4sv35s41VnrkpuV7kz/2d1aDR8/9aY4U1KYxgLOyn5f2dtXZkbTfwU5Q5
TM82RDjeldqd2Z39N7brac3BYpE/x9D72b/XO4xRxtF3m472Yu75nVxR+qJW
f3rm5o6z8cb8oJ8oe3CcqbFH9Luuv74zp+Q7d0b3BXkYC/tpNa8c/RlciQi1
G6hn9D3d6/dnrruZ257V3fzZ+qaY5M/jjchoW/6+/V4To8fQs+O/kj/XPjeR
1oLXOMeeubnD9TLep5oWqVaX7hH9+neuN3pxrfUlf/69P7K2HTg2ck7Wq6Zk
rruZ257V1fzZ+7WxXdn/Wf7c1iz7LJ29Px0p09gf/5W21dyPK9J68Br955mb
O1wv42XJn/ftevIs5Hqjl5J19q91+qPbn1HtepU5S5hhbgn8btR93aseZq9b
2dufzZ31z96vjcv657FGzHdr/85v360XaU7/dI5eew306H4oPdfv/+2Zmzvk
geN92t8iUq3+1ParbXS9wbxqr8/LPDebof3AsVH3dq+9Okf3b+Q+4qeSeb35
fhxX1j87X+2MqFs16/237Ln27xt57LXOVdb3JCOdR3KSB4633wd//98y3ONX
94h2vcHcrA342f4M9Ru4b0R9kj+P7yN+kj/PwfPZOKPqbo1aeWcdWpTxpUY7
avVdhP5odb7hjPFmvE/580umufS3HNr1BnOrte9ExnlZq74AYup9f7euizPU
qxnGjkzkz3PwfDbGqHpV+nuvrHc+EmGMqdXnNY4lQn/c6TfZMzUYb8bb58/7
WpSpNu3bva9TrjeYn/y5bl8AcfW8x1t+pjVLzfW5X1/y5zl4PhujRZ732k+3
ZD/ebz//afb8Pt6R/V1znKvxfYSj++NOv8meqcV4E8M+f97Woyy16duxvWqW
6w3WUGNONsM8J3v9Br7reZ/Ln2Odj9XJn+dQ+nzmnruvVc1t9axdI4McfZ3U
7vPS48kw7sqeqc33VcawzZ33tWiWe/4sf/Z92DCf7HPUWjLMLYFyvWpWq98z
S82d7Viikz/PoUZm6b67ruV7GrXz55L1znsjr5FW8/GZ10DLnmFe73v7qAbN
lF/sx8R95uz7lWEeT+dUM9W8kn4Aculxr7eojzPW3JmOJzL58xxqZZbmO9e0
rLk18+ea2XPr4/6m5bhQct1HvWdkz7CGo7o801528mdYx9N55oxZyOg2AH30
uN9r/47ZnjFnG0MiK3mP1vu1cdTMLGvsizuz1vWpxrlslT1m/b7FK2ZacyN7
hrUc1a9ZxnH7b8BantSuiHOxErMdD/BZ6zlbzZ8/0xqHnucAZlJ7zwYZ9LnW
uV7puWw5Zx013vR6N+np74l0r8ieYT0r5c/WP8P87tavWerd7McEnGt5z9fO
n2d8zlRz4bpW69Xdhz/1qLc18ueW7et9TfQc457mtlHuE9kzrOmoTkapS6Xk
z7Ae+fOcxwR81uq+r/k8PeuzppoLMbgX/9Vr7W/0d417Xw8Zfl+Ez4Flz7C2
fe2KUJdqiD4mAm1cnY/NUutWOS7gs1bPvjV+7qx7b7yPTc2FGORa/WpS9LVe
PcecUePAk2McORbLnoGV8ueS/cWAHK7WsFlq3ZFZcx7gs/e9XzPv3f7MpzVz
5no787FBRivvCd2zHh3lz5HWevXqi9Gfr0Z+93Pf/8ZLYMY9OF7HI3+Gdbz2
BCzZU/DM6ON6KnsNB557ry0qXWP0nh++s5ySnzd7TZr9+CCb0ZngCsccff1z
z/x5dKZ657z3XH+8bVeEfgJi2NeszOP1e+yVP8M6Su73GeuAOR6s6SgzLvlZ
25/z9Jl1hXqUed4MM1vp3uxda+XPcT7nuDPe92rzdg6xwjwAuG6G/Pld1961
Tf4M65A//y5jHQeeO8qLSzNo+fP1fpr9GCGrFe7PEXU2ev78Pvez9XuNY+3R
L7XmIcB89rUzUi292v793EL+DOuQP//OXA/WVDN/rrH/xgq1KNu8GVYzewY2
ImM/mntH2v/53S+tfnbEun/1eEfkzyt8DgRcl3V/nrO2yp9hHfLn32Wq40B9
LdZA360pK9WhmbMtmEGUvRJaHNeIOpvhWXu1/PnqMbds+9neXRH7Chgn2x4c
375bJ8OYCNQhfz4WvY4Dbe33X3z6c+TP1/podBuA72a6V0dk6u+6nuFZu1Xf
RB/brhx3y76x5hn4Zl9HI4/N+72ej7zGtaf+/uvP4ccIXCd/Pha5jgP9lGYU
T58jV6pBKx0rZDdLLtY7B92u/8qQP7fqn+jXz5Uxv8WYVeszb2AN2zoUcR79
bc0zsCb587Ho6zOAvkoz6Dv1ZLX6s9rxQnbZ94TuWXOyftdSiz7KUuu/jdkt
jsNeG8AdkfeAlj0DZ77NgY++k/vb96PMkD+/ZH62Aup7WhPuzgujzSNbW+14
YQaZ94Tu8Vy8fed4/7uy5M+1z2+mPKLnGmhjIHDXtm5EqSFX9toA1vZpDrzP
mY+yaPkzsJKndeHOv1ux9qx4zDCDbPduj2fj1t+11KvPV89YPx1/rb7J2C9A
DJH24LDmGbjibA78zpZXzp/NCYEjT+Z4V//NqnVn9LwZeG7/zBm1hrWur1ef
v2usf+5RM2v+jqw1/qzdNa6lVcd7oI4I+bM1z8Add/bfWC1/fsk6Xwbaulsb
5M91+xOIZbsndNT9oVvV1097bRyptf9G6z62xvdzP5T0T/Y+Acbb1pEeY+6+
blnzDNwlf/4s4vMTEMOd+nD1WXPVmuNZHPJ7P4u+RbqnW2bPd4/1NU9+6u+/
/vzxs1qOGbXW+GYf197X86vvS85d62sRWM/2c9/WdWX72bJ1z8AT8ufPoj0/
AbHU3Nd55XncDBkFrOxdv7b5c5R7ukV9ibTuq1Vf22PiZx/XWLc+S38AMezz
4Fa/J/Lny0Aed/Ln9//efy/hzPmzTAT45mqNkD/X6Ucgnn3uHCmDrllb7+61
MaL/o/TbbHPo0vw52jUD5NdjTIr62TKQT8lc6tMca6bPxdRY4JsrdeJTXZzt
Ob1VHwKxHT2njry3a2fPUee3rfIBexz/UiN/Hn0MwHy2e3DU/tlnY3rUsRCI
rVX+/PrZs9SmGY4BaG8/76u1V+QqZssqYGX7Z9ZR7Xgyh8v6HUst8oGn527G
el7reyMBamqVPx9lzzPWdqCflvnz27Z2ZaxX1iUCV21rhWfVe8xpYU6jMugn
NWU/Z42418aVvq61Flr+/IsxHYho+/0LNX+mzBmorUf+vJU1i5Y/A1e964Vn
1ed9B8yn59zvybP40fcrZZqrvvt49PrnjP12hTEdiKLlO5ZZ3vkB8umdP29l
yqFlIsAdr5rhWfVZv41uA9BOr7XQdzPQaPtW1+jjGuvhnmTJWeb2dxnTgSha
1aNZPz8EYhiZP79lWBOtFgN3eVa9L2veA1zXel+zWtlz5Hnpnf7t+R2CM8+X
v43pf/zTzy/GdKC12s8Y1jwDPUTIn7ciZ9FyEeAO+fN9M2cXwE+t5lV3fu6s
36+0b3+vfZwjzt9r+TSmv3Nn+TP8/+3dy5KdIBQF0P//61QPumIMIiBv1mBV
Jn2TNN46HrYI9FBzjrHaOQfAur7sG/TkZz+ir/+vGXNo+TOQQ/6cz3mvcJan
Pq/l3pa/ruu9Tph7l9bW1M/tPoZP9/Rr5ix/BnqoMcew5hngfylZdI+6uXtf
DdQlfy4jf4azhPZablk/T55zl9TX1M/sXrtD38l73ix/Bnr4eo885bkrwBdP
WXSvNXO799ZAPbG1UrF9Ik+fq6qzcJ57H9cif77Ot0+ec+fW2JSfP2FMn/Ln
EPd0oKUa+fPo3wFgFfcc+r5/X6t/Vy4CpLJWqsyp6xKBv32Ws5X6jHPqz8bG
bcd9k67PKX7nFinfSfd0oAfvWAKM8XRuea2/v8cehMB+zFXLnLCODniWmvWl
zK3lzvFx/vnza5+7ev8byppD6+Td04FZvNWj2HuW6hFAuaf8udZ8w/NFoESs
dth/I263tXRAnpp7W8qen33N+me5h92vd8j952JZc4vv5OhrDezjbY7heRhA
fbHsudZaaP0mUMJaqXLyZzjb197Lmuc+Yz1T/5syH/jyTMJ8AJhF7IwZcwyA
vu5rHr6sh9ZvAiW+7v8cmjOP/p16kT/D2ZzfOn6sV8qfQ2fBeB8S2JUzZgDm
d+1NUz+j3wRK1MxPQnPrnTPpnX834J259dixnjl/ju2h0SJ3rjFOvpNATU/3
yBD1CGCsnDXR+k2gROvakZNJx/bDnIFzXoEr+xfNNdaj+t+c/Zq/vu/Ycpx8
J4Ga3CMB1vTWr+o3gRIjasfbO8it1oWtOFbAvFY8v3W253o1xrpnXf5yNmCP
8XefAmYhfwZYX+jMQv0mUGKG2vGWRY8eo5nGCpjH17n1Pbus/Q5IKCud7ble
zbGuXZe/Zs2rjZP7FFCTegSwj2s/nLK/kvoO3M3UGz7tiznLftIzjRUwXo39
n1Py55R3Rd72GN45fw6N+Vvve6/LK2bNT+NU6mePqdH/f2Af+maAPaXMgdR3
4G7G3jB2BuvIMw5nHCtgnJrnt9ZSklmn5Nmt1mjXGuvc/P/3GqycNQPMTN8M
sKd7fU9d+6y+w9lm7g1z99NsnUnPPFZAfyvUhKf3SnI+32J9dm6eHVtnEetz
vf8HMMYK90gA8oXyZ/038GbX3jCWSZfm0ruOFVBmtZpwrYujxqw0z87ZfyOl
91WXAdpa7R4JQJq3+i5/BkJO2ivyKdtIzaTf9tnXR8NZzK3nGOtQ/U3Zg841
AGjHPRJgT9Y/A+TLyaTVWeDK3HqOsc6pxa4BQB/ukQB7si4PoI6nTFr+DFyZ
W88x1vfzB1PPQHENANo56R1LgJOYAwG0JX8GrvRea4y1awAAAHWYAwG09fae
ifwZzqL3WmOsXQMAAKjDHAigLeufgSu91xpj7RoAAEAd5kAAbdlnH7iyt2Xf
sZY/AwDAWPJngLbUWYAx5M8AADCeXASgLXUWYAz5MwAAjCcXAWhLnQUYQ/4M
AADj2YMQoC35M8AYX/pc/S8AAACwAvkzAAAAAAAtyJ8BAAAAAGhB/gwAAAAA
QAvyZwAAAAAAWnDOFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAwL/+APxtTDI=
    "], {{0, 1146}, {1440, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{342.5, Automatic},
  ImageSizeRaw->{1440, 1146},
  PlotRange->{{0, 1440}, {0, 1146}}]], "Output",
 CellChangeTimes->{3.7401814503995137`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"dacc0afe-352c-4a0e-8acc-01c1a9348091"]
}, Open  ]]
},
WindowSize->{695, 637},
WindowMargins->{{Automatic, 179}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info143740157983-7027397"->{
  Cell[15548, 399, 216, 4, 45, "Print",ExpressionUUID->"6e0e6ffc-c4aa-4d66-9d01-f715ba40de19",
   CellTags->"Info143740157983-7027397"],
  Cell[15767, 405, 1995, 50, 129, "Print",ExpressionUUID->"8dfb3418-5131-40b1-beb9-a16f3eeb1383",
   CellTags->"Info143740157983-7027397"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info143740157983-7027397", 87499, 1691}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 360, 8, 28, "Input",ExpressionUUID->"b889ad9a-2f52-4d65-bd66-39d7b5d48408"],
Cell[CellGroupData[{
Cell[943, 32, 253, 5, 28, "Input",ExpressionUUID->"7cd2daea-1a82-40cd-8b1b-7bd380d5cd5f"],
Cell[1199, 39, 308, 7, 32, "Output",ExpressionUUID->"f0f8184e-c54d-469a-b043-e341a06f721e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1544, 51, 430, 11, 28, "Input",ExpressionUUID->"a701d001-c860-4923-9b51-891db1381124"],
Cell[1977, 64, 333, 9, 32, "Output",ExpressionUUID->"3e1ed93f-9db4-4985-80f6-4f91ee15e036"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2347, 78, 294, 6, 28, "Input",ExpressionUUID->"337ea904-e154-49c1-a48f-21eb77f5937d"],
Cell[2644, 86, 917, 18, 324, "Output",ExpressionUUID->"3e8e37ee-4a6c-4f0a-b43d-777c4062f830"]
}, Open  ]],
Cell[3576, 107, 840, 22, 67, "Input",ExpressionUUID->"3b1dbc8c-bb95-4508-9329-1cf6124bf332"],
Cell[CellGroupData[{
Cell[4441, 133, 622, 16, 48, "Input",ExpressionUUID->"d958348d-20e7-48af-ac20-291ea3438ee7"],
Cell[5066, 151, 1053, 27, 52, "Output",ExpressionUUID->"ca1b9f69-3f20-42d9-9c08-27321e39e585"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6156, 183, 578, 12, 48, "Input",ExpressionUUID->"651d0179-31d5-454c-9cca-12ed996cbc25"],
Cell[6737, 197, 3878, 82, 297, "Output",ExpressionUUID->"e612fd89-fa19-4790-9520-e0ee3188c289"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10652, 284, 775, 20, 48, "Input",ExpressionUUID->"b25de540-17e9-4b41-a979-04b3bca873c4"],
Cell[11430, 306, 3838, 81, 354, "Output",ExpressionUUID->"b29170c4-cc85-40c0-9b98-35327b32699a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15305, 392, 218, 3, 28, "Input",ExpressionUUID->"9912fa62-04d6-4f28-ad89-5fde32dd8ac4"],
Cell[CellGroupData[{
Cell[15548, 399, 216, 4, 45, "Print",ExpressionUUID->"6e0e6ffc-c4aa-4d66-9d01-f715ba40de19",
 CellTags->"Info143740157983-7027397"],
Cell[15767, 405, 1995, 50, 129, "Print",ExpressionUUID->"8dfb3418-5131-40b1-beb9-a16f3eeb1383",
 CellTags->"Info143740157983-7027397"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17811, 461, 698, 15, 48, "Input",ExpressionUUID->"df859478-2b0f-4ce2-b363-82bdf76dba07"],
Cell[18512, 478, 809, 19, 89, "Output",ExpressionUUID->"0a904919-d169-4bbe-9e83-7ffec17152c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19358, 502, 730, 16, 48, "Input",ExpressionUUID->"d8e4cb67-8bf7-47a9-b336-098f263c79ef"],
Cell[20091, 520, 651, 15, 79, "Output",ExpressionUUID->"10c59fd9-f753-49dd-81fa-8d55c4c465bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20779, 540, 546, 13, 48, "Input",ExpressionUUID->"fb69d77e-d6b3-4db1-a73f-01cdf6a3df54"],
Cell[21328, 555, 578, 14, 155, "Output",ExpressionUUID->"2aa18c1e-ddb4-40f5-a374-147670c20e15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21943, 574, 544, 13, 48, "Input",ExpressionUUID->"22cc01cf-334d-4588-b200-56fbe2250ac3"],
Cell[22490, 589, 526, 14, 155, "Output",ExpressionUUID->"f4b87234-dbb7-4870-936f-6d08a5a44c29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23053, 608, 1122, 31, 105, "Input",ExpressionUUID->"aae3a29d-1f68-43d2-a962-0ec2c5b44a3e"],
Cell[24178, 641, 62997, 1037, 290, "Output",ExpressionUUID->"dacc0afe-352c-4a0e-8acc-01c1a9348091"]
}, Open  ]]
}
]
*)

