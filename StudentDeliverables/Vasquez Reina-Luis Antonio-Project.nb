(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    237192,       5513]
NotebookOptionsPosition[    220345,       5243]
NotebookOutlinePosition[    225434,       5360]
CellTagsIndexPosition[    225219,       5351]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Last modified on: Tuesday, July 10, 2018 at 16:34", \
"TemplateInstructions",
 Deployed->True,
 Background->RGBColor[0.75, 0.75, 0.75],
 CellTags->
  "LastModified",ExpressionUUID->"ad986c1c-4081-4977-b127-43247f52a7f1"],

Cell[CellGroupData[{

Cell["Author Info", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188040860998*^9},
 CellTags->
  "AuthorInfo",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6"],

Cell["Luis Antonio Vasquez Reina", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Name:", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{35, 0}, {0, 0}},
 CellChangeTimes->{3.736536207540806*^9, 
  3.7402269675740657`*^9},ExpressionUUID->"2214bf82-cb91-41b2-a79f-\
ecd872282532"],

Cell["Jonathan Gorard", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Mentor: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{25, 0}, {0, 0}},
 CellChangeTimes->{3.736536216260921*^9, 
  3.740226971655954*^9},ExpressionUUID->"1d803eb4-64f6-4601-a1a0-\
49b5afc9692c"],

Cell["Pontifical Catholic University of Peru - PUCP", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Affiliation: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{8, 0}, {0, 0}},
 CellChangeTimes->{3.736536278299572*^9, 
  3.740226975414668*^9},ExpressionUUID->"f3f2c56d-6554-49c0-a8f0-\
7c8d2bae5215"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Poster Session Content", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.7361879449416428`*^9},
 CellTags->
  "PosterContent",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637"],

Cell["A Calculus for Infinite Lists", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Title of \nproject: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{17, 0}, {0, 0}},
 CellChangeTimes->{
  3.7365364091022453`*^9, {3.7402244282744827`*^9, 3.7402244355609493`*^9}, {
   3.7402269804865513`*^9, 
   3.7402269927873445`*^9}},ExpressionUUID->"16215b85-c481-4f11-8175-\
b0652d7bbfad"],

Cell["\<\
Computer languages are usually constrained to lists of finite size subjected \
to operations. For example, one may join, partition, sum, or nest them, and \
get a finite list as a result. Even though explicit infinite lists cannot be \
implemented in a computer, in this project I aim to provide the Wolfram \
Language with a symbolic calculus for lists of infinite length.
That is, one would be able to treat expressions referring to infinite lists \
as arguments of operations, e.g, the infinite list of the roots of the \
natural numbers. The implementation of this kind of operation to the Wolfram \
Language is the objective of my project.\
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Goal of \nthe \nproject: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{18, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536691820487*^9, {3.740155118117497*^9, 3.7401551204584227`*^9}, {
   3.7402270025517445`*^9, 
   3.740227015383766*^9}},ExpressionUUID->"c662dd0a-9849-40e8-bc89-\
a9f688107475"],

Cell["\<\
Add the most representative image of your project here. (We recommend just 1 \
image, if you add more, we will make a collage of the images.)\
\>", "TemplateInstructions",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.736704649824739*^9},ExpressionUUID->"ec924e65-f9fc-4678-8fe3-\
95cd292f053c"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3QlcVFeeN/z5PDPz9vTz9ExmMp23k+npJX5MOomTpN+Y6U6cOJqO3dmM
iUnbT9J0FnvsmJjYRk00GheMCyoKgiGi4gIom+yICogsyiI7ikKxF8VSFFRR
FFBQUPB7z71sxVJQBRi337c/dzLC5dxzzz33nv+9555zH/zzijc//F9/8zd/
s/ofxP95c/Ha51etWrzurX8W/1j019UfL/3rX5a8/NfP/7L0L6ue+fPfih/+
v2LdL8Xyd+L/BxERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERER3WJMMLVpoMq9iPz868hVGdFm6pZ/021qh1GlQL1KDZVW
rNl1k7M6hJRHI3RV11F4MQYJcTGISclHikKLlnZbM2p934luPNbh28edVs6D
dU+RcREZCg2qdKabnSkiGlWPWMziGtQMQ0M9NGod9C3tMPX9xrpWtDZeQ9ox
J5w4EYpjaVo0tkptSxc6DWrUJp3C5cQMxBeYYDCOndLQ7JjFJdGAltZWNBhM
6DLb8bc2pS/2zKRCYXIoAvdsgYvzLuw6FomjiUp5e0N0taPL2IyGZuOwdtPa
vtMd70bXT5vywDo8wq1wXEZ1h5UzpLxrUZYSitPfOOGb09eQUtZ6szNFRKMS
10Xoxf3lecR7ucHDJRiRKQooAYx9V2btuqVFmzYDOX7O8D5+Ch6xSmia7bi/
E9doKBORkpY2ens1WXL68UiICofL4RikFZWjvFE/epugVaChIBZHYwvkZyOD
7rRrNtnsRtdPm/PAOjzErXBcRnWHlTPjO6LbR3cHYCxGfmIYju92xr6vneF7
OgXiMoSxL0PWrlutMLUpRbyYhMxMe/uMRHaMOhjzAxF1JhrOUcWo03dMdg9H
Tz88HLsC81GuM1qNY02qTJQn+2BX0GXE5Ndb/OZOu2aTrW50/bQrD6zDA26F
4zK6O6ucGd8R3T56Og0w1yYhOSYcLm6+CNzvCL/wswguMEE3Zr/qjbludbU2
Qpt2DKHhYTfkOm1P+q1lKbh2zhNOAWl3dNtItrvR9XOq83C31OFb4biM7s4q
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
3xwqw3IB6dw3SXOc6hqgqVfL6arrNWgYZdz8QJ4NBitzJlvqgtncJtpHDRo1
Ih9qkW9RFs1tHegU+9g2Whn2j/NqNoj8G2AcKLe+ORVEPtss8lmnrhdpijJp
aR8yP+3Q42VDufW9A9XeYlFudRrU16rEvXMSLgT5DI3vBvIpylYqr4E09WiT
5pnWD81/j9kst2t6OQ9S3sU+NIp19OKarNfBYGgZdqzHq2Pd8ntCJrFf+lH2
y2AyY8TnK/qPdVszDNoGaA0dA9++m2h9mNj6o9XPNlE/O9ExLJ3+46sXx3f0
d9Psz8PtWYet1Acr27Kvvo11XPquG9J7rB0GNDVooLE8LqIMjW0t0Gn0MEjH
SKTTM04dszdvo18nrdQBa9uV8y/SbejPZ//7a1O0X13t6DLqRX1rEXXDsr6J
+tMl6o9IX68X9dMkUunpTadFq5G3oxf7PFjm1s5fW873sa4bo58jtp1fRER3
oFHHz97sTBERERHRhDG+IyIiIrqzML4jIiIiurP0fe+16no+Mi7mQqFpG2Xs
HhERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
EREREREREREREREREREREREREY3HZNBAV1UARWEBCgoKUKgoQZWuAwbTxNNs
b2+HRqOBQqGQ05zMUlhYiKqqKhgMhqnbaaJbiNmoQ4u6FMVF1+U6f72oGKXq
FuiM5pudNSIiuk0pEzwQuHIG5j07AzNmzMCz8xZgZWAJEpQTT1OKyQ4ePIjn
n39eTnMyyzPPPIPly5cjPj5+6naa6Baizw9BsutbeHnOTLnOz5zzMt5yTUZI
vv5mZ42IiG5TxZGOOL7kPrz87jK8s9wRO109EJSpgUI78TSlWOyzzz7DCy+8
gPnz5+P999+f8LJs2TK4ubkhOzt76naa6BZiVOWgJM4T7nu2Yfk7c7HohYcw
1/EMvNImcRISEdFdTYrvAlfPwOrAAkQWTz69np4enDx5EosWLcKXX34JPz8/
ZGRkTHiR4rri4mLodLrJZ47oFiedj97LH8LruxjfERHRxE1lfCfFdiaTCbt3
78azzz6LwMBAlJWVobW1dcJLW1sbOjo6YDbzXSS68zG+IyKiqTCV8Z0U2ymV
Sqxbtw7/9V//hfT0dDk+IyLbML4jIqKpMJXxnTTGNSEhQX73buHChSgtLZ2a
TBLdJRjfERHRVJjK+K6+vh779++X47uNGzeipqZmajJJdJdgfEd042nL9cg8
o4SrlxKOHmLxqobjGQMSyjsHV2pqg+ZqPTx8VHCJ1CLkehd07T2T2/CNSPNG
uF3ySWOyNb7r7u6W+1qbm5vl53SjvQ9XWVmJpUuXyvGd9O7duGMiOkUa1Tok
xNZi27EaTIuYj5zam/+endEI6PXAqK/83aJ5vpVpFQnIDHKE605HODqKZacr
HIMykWA5SFurgCYzCB6uO+Hie0aeG2TS87/diDRtJJ0felGJjFJlsgPjO7qr
9YgYokvEEg3tKC1tw3WxFAxZjChSdkDd1oOJnMo95h50NncgPbQcX3+Uiife
yMK017Ix449XMWOHiGfS2wdXrmhAgV8BZvw2FT9ZUgqHkHaUN3VPbv9sSrMH
ZtHONNUZUVnbgRKtGR1dk4mtRFk1m6CuEmVXZUJdsxmd8k8nm88J5KFa5EHd
BU3rJMtxKpiNMLWooSougmL4vLtTMA/wrWCs+E4aLyG1U1JMJ71XJ71Pd+nS
JeTl5Y1ot6T1rl69Ks95t2rVKly5cmX8tq21A8gol2Ok/sUrp3Psv7lRTAaY
dFVQKQqRkVGGxEwN6lu7MOLwfld5tlL3FJV1UDV1wmSegnupHnGB7GyCrq4S
pdK8uiPml1agqFgFdYtpgtdSk0hehXTvz/H1a/fgiccfwrRHZmDGs/MwY2Ug
PCwnWSyORMGBRZjxs3/BT15aDgdfJcobJ3ly2ZSmGWZTC5pUxaisUqFE0yau
pZO89ohjZ9SpkJ+UgJyUDLvKkPEd3dVEbAeNBiGHivHW69mYKZYZQ5YrmPNx
GVyzOpA/gSnvpdiuNq4MjqvzRWx3FR+f0sEvV8SN5UYU1A2LO25afNclYjs9
IncVYOmWciw4YZBjvImR2glRVueq4LoqH3NWVWHHuRbUip+O2WpN6b5b5GHt
VczZMyyOvln0+VAlu2Lty3PwwrB5d6diHuBbwVjxnRSzSc/gYmNj5TETs2fP
xquvvootW7agtrZ2yLr96z355JNy36wUE4475vVWiu+UCVAFrsTaec9i7txF
4jzwQECVBiMO73eVZyt174WlO7A2slaO8SZNxHaojUTIjqV4S5pXd8T80i9g
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
XeO7G8IsGmC9EtrqapQr9dCYzBPqn6U7i1aRgMwgR7juFOfewRB4JCihGTNY
M8Jk0kCpLEd1tRZ6fe+0D7ZgfEdERFOB8R3RrYPxHRERTQXGd0S3DsZ3REQ0
FRjfEd06GN8REdFUYHxHdOtgfEdERFOB8R3RrYPxHRERTQWpPTm+5N/w8rtf
46MNXjjuH4KwPB0UbFqIvhNGlQIViWEIOnEcGz5agEUvPIS5jozviIho4pQJ
7gj47HHMefo1zJ69CH9augrrwqs4Ry7Rd0Sffx4Z336O5X92EOfgbDw+ax5e
25uEoEnMW05ERHc3k6EE9WXnkHjhAuLiEpGanokKTSvnyCX6jpiNKjTVpCIj
LUmcg3E4l5CECyodKvh9OSIimjAjzGZpDlYttFrpv3rxb7YrRN+doeegVpyD
WjPn1iYiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi+q4Y
VTkoiTsO9z1hCElIRYEmEzEervD3PYOQfD10RvOYf9/dDbS1ASbTd5Rhumm6
xcFuEwfbZMPBnmy9IiIioonTpnnhzJfP46H734eDowsCCw5g9Yyf4Y2XlsPB
V4nyxlHa8h7RNnc0o1WnQa2qDteKtKjWtKND+tXAOiLwM7ehVd+I+poa1Iql
Rvqvuh71+na0mronnumudnS1aqFR16FGo4OmuQNd5p7x/24UPd1dIpta6BvV
cv56FzXU9eJn7V2wP5vd6Bb5a9PWo1FdY5FmDerUGmhbuyCSvf10m2ASZa4s
KkRlSfm45TOhekVERERTYkLtsIjtUB6HzFMH4L7VCY6ufgi8fB3l0q/61xGx
HXRZyIz2hrujI7aKxVH6r7M73M8qkKlsm3imG65Dk+4HDxex7QOn4BFXLsd4
EyHFdrqsAER7O8v5612c4ewegLMKEc/Ync02EdspkBXgDm9nR4s0HeHk4gG/
dA2uN0woqzdXmxLNRWdwzmUnPDbtGrd8GN8RERHdPMZ8f6Ts+b945OnPscTF
B3EKf+x8YRr++Afr7XBXiwYNyQcQF3AIHt5nERJ7GdkVtZDClt5HUy1o1xfh
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
F3Wjfmhf4RSkqdEZ5Nhu4HW0CaepgVrEdq1d5pHzGo+XpoVb4f07xndERER3
HlOzGspzzgj12Y89vjGITimAonbic/ZKY1fL04IRF/INvI8fx4GT8TiXN7kx
pHdzmjeEqQUmTSWUl9MQ670fB/dsgtu5EqQpb7F8EhER0YT0j0mIPuaEr7du
xZ6jkYi7UjHhb25Z9g+O6A+doLs5zRuirR4tJWlIPXoIh7c7YZuzB06O1s9O
REREt6X+OUX0VQWoyLuI9HQFClRNE47vLPsHR/SHTtDdnOYN0d0MY3MZCjLT
kJNRgOtFGmiaR+lnJyIiotubqQVdzfVoqG+GtsV0W39TlcZjQldXMxoa6qHV
tqBNHOxuHmwiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiohG6
urpQWlqKy5cv4/r169Dr9aOu19PTA6PRiOrqaqhUKmi1WnR3d3/HuR2flKfG
xkZkZWUhPz9fzqu0jzdSR0cHioqKEB8fjzNnziA5ORlXr15FZWUlampq5DI1
m803NA+3gpaWFrkOZWRkyHWqtbX1ZmeJiIjoliPFBO3t7XIsVVdXB7VaLS/1
9fXyYvlvaR2pfZXiMHtI6cfFxcHd3R1hYWGoqKiwuq4UN0mxi7Rcu3YNnZ2d
k9zDiZH2UYrZ2traYDAY5Piqn/RzhUKBQ4cOwdfXV45bTSbTDc2LRqNBeHg4
tm3bJi8HDhxAaGioXK6XLl1CcXHxlMWY0vakcpdip+bm5hu6b/aSykHab09P
T8TGxsr/vtNI9w9SmUvnmlT37oa4nYiIppbUhmRmZsqxyrp167Bx40Zs2rQJ
mzdvlhfp/+//mRSfSW2qFPPYQ4rvEhIS5JgkKioKSqVy1PWkmEKK/Y4fP47D
hw/j3Llz8vO8m0FqU6WYVnpOJMVVZWVlQ35XUlIi5zMgIEB+jnej4lCprZfK
u7CwEH5+fggMDERtba0ca+fl5eHYsWM4cuQIkpKShsSgkyHFidI2pLhRelZY
VVU1JelOhYaGBrkOHT16FBcuXJD/faeRzhfpmfD/z95dAMt2lever1v33qJu
XbjnIIfLgQPnEIK7BCd4cA8uQYN7ICECISHuLsTd3d3d3V2Ju8L4vt/46t3f
TLPW2mtt38nzr+rqtbtnjzlk9n6fft4xxuTV0u9PRg0bQghh9sGnoQnEEjrm
0EMP7fqNZlhttdXaKqus0nbYYYdpceakk07qumaqWmay+o6Wueuuu3rO86yz
zpqhc80qaJyrrrqq9wddxR8r5qS+M0Z33nlnH5+dd9656y1j5nVeJ4139tln
9zztrPLvjJfc5wEHHNB23333Cf3WOc1TQd/xTeWg+ZT77bdf/50RQgghzCzn
nXde1zTbbbdd1zEzy2T13byE/BjPTHzVF8N+mNP6jobhz/HujjjiiFnm040H
z9TcPvpijz32mKfG66mg7+Rk/b4x3toa/y6EEMLMQruceeaZfV4ZH88cuJll
ftR3vDCeHQ+LbzbMz/IZR/Xd7JojVT7d8ccf33bbbbfupc5uT5N+NO7y0nvu
uWf3d+cVngr6zpwJvizv9MADD+zjH0IIIcwMk9F3NId59/J25mgdfPDBXQvw
uqyLGM2rjqfval3tKaec0s9jTpl1oM4v5+g45dBTcpRel7vlq3mfl+W8zu91
ny+d5TPipHLllp1333337XX08G91ktccziestimfnlp77bXbGmus0bbddts+
H9BcRfkyeq/0Hc3ldedRH8fxQNV5qPu0Rc5Xn1V95MSdS93r/IX+sebF8Ztt
tlmvx4Ybbtjba32Husvbars1x47Xbuth+D/W2zruxBNP7Hlm/ew9622dUz3V
g4agH5XnfNqiXWuuuWZba621eo7e55WpTaPUHEHXg88af+fmOaqrfuEH6teJ
cJ34rM/VGNVn5e3ByxpP36mHsXGdaJuxkM8++eST+xxC/a+P6FVtMUb64Zhj
jul94HjXhLFVjr7znrooT7leH46pdvsd4HNVZ9el644PB+3WBueUd6XdlOtY
vx+MoXHRfu0zD4J3vvrqq7d11123j4Uyqw9d1+pW51SGa9D3wvtZjxFCCGGU
yeg7cZSeEIetg1h11VXb8ssv3x80gTWy4nHFmfH0nZgmNnld/BJ3xWFrPegp
ukSelOahi5zLWgK6S+7Keg/rPjzEQ7G6cpdyjOKu/KJ5hH/+85/7epGlllqq
/fznP29LLrlk23jjjXtbSztU22gc8Z62cbxjnUPbnJsmrXUgdIb4u+OOO7Z1
1lmnr0XRD/5Nd9VcOdqCNqCT1HvFFVfsdRLD6SdaQ52H+q72RNEGdVcPa2Cc
R3+W7vP5yhHrczqg+omG9DedKs/sPDS4/lp55ZV7HdTFelTrgGkEOkdbnU/7
ndvnjatxH4VmoktoDH1qjOkhdav1vvpjvHl81T/G3/VA06ywwgr9UX2uH1wL
4+m7mrupH1y3rkn11kb1cK061tw2x7iWXGP6YYMNNujH6VvXivJpYdcAPa2c
lVZaqfej66XGSX1oYhpL/1SdXTfGrH7n0NPaoB6uFdeua76uSX1P0/HpXFt8
O/X5/e9/3+vkuPXWW69rZWUpl6+qb1xr+tc1QQu7xmb3Xj0hhBDmPyar78Rq
vgMfgU7j64g74rj4xscpT2qo78RvMVEcEufEWRpEbBaXaD/npUXE2NJ3PrPF
Flv0OCse0yl0GE1AM9EVPieGV9ytWMqb8rrYSBPQVGI4LaluQ7/DubSP98Jn
EadpAH+L6/wa5YvDdKjYSq+pK+2j/jy5jTbaqOsu51W+uorPXtMH6qJ/6Cnt
pyW0abgXSWkIbRS7jYnjfE49eEE0ijbStqXvvK5f6SS6gs6lHXij6q1v9RUd
aOyslaWfaCfnM5Y0kM86Vh2dz2Ms7eA1bdcOukQ+m7bVRp+lRWgb51O/0f11
vGa8tE3/aKs61foR5eo77fC6/hvVd3wrGsn1Rx/VPovGg+40l9D7rjt1Ux/9
U2ujjQ9/jWanDWutuN8VPuN6dv25HrTVteBzriN15scpQ318f8qb9XnHOz8d
TYfR5eWjlkZXtu9SaVieo3KdTxnOR5uqi35y7bmua08jn3Ue1/NU9y8KIYTw
5Gey+Vl6TFwRc2oPYnkjsae8hPJ6St/xKXgd4qx4SAOJ1eKXMpQ7kb4T031G
rBQD1dX7YrnPKN/rzkcL1Plo0dpTTHvEU7FX/cbbP7n2uKv5d3TRsI9oWX6O
+tAIYjV95dx0mvc81Ee/0DbqT6dob2lKukR/axMdMrr3zHjz77xOO9EjY+k7
56YZHO8c2ln5cPWgX5yXBvI5dSxtOTr/bnr7o9AeNBMtUvsB0ojKoUe0mban
1Ub1nb9dQz6jLa4b56v+0Xbv6Z/Ksw79O/2rDBrYMaUttQfaZKzkaX2OJtNX
+kYZrkXHOp/rufZp1A6fUzfl6zd9Sk/rX8fSZrS/a5vurHaVPtMf+ti1qx/p
SWOlDnXtujZpUtek8azvUc2/c/3V/LvKPyuXn8fzdq7aq9C1M5Z+DiGEEKa6
vkJsp/XEGdpMPKJ5Sleh9B2PjW4Tz/gP4qhYW4hfE+m70jK8lPKRxDaxlVfH
syp9J1aqBx3H41C2ttF9yhfv6azx1io4L09reutnaS5tKD3iczSINnqfDlAn
+UG+ppisvurkmS6hR9SfPqHFRvUPT0hOVdvpD7rJ+SbSd16nA5Q97Cv963V6
Sw71ggsu6HV03uoLY+p1+VjH6vuJoBGNb3mlNUdPXdRdnWltdRnVH+pGsxgP
14PP65d6qC8vUX/y01xTvLGhvlNv9XVN8bxosepjuptOp+2UoW9c3/pH+4xx
/bbQBzw8mo0udh0VxtTrzuvzzqEerjFaznmqzo517aqLcXcsfUcb0oQ1H0Bf
0G6lV9VlOP+z1s/W/iiO593qT3pQmb4LzqfP492FEEIYj8nqu4pDcrS0Ce1i
LpD5WvJQvJ/SBfRI5UWXWWaZnsPj8Ynn4lPF/OnpO6/zZ+p1iO18OK+L72Kh
92g3MVOM5IWUR6W+5krRfbTBeP7dZPXd6P4oPqcNQ32nfjysZZddts+nqj2j
zb3ymr/1yazWd6U9q69qnps66Xd1tGbDw3iVT0cnTEXf0Ra0YvVF6ZfKLfN0
jV35U8P2lR7WdtdG7bFd/VN/y5lqu3Ed6jvjzbcyrq7BJZZYYtp+3MO9uT14
dkN9Rx/5N42pTnSq+nuPlizvDupInzmvvtM/+n3ppZfuj7Hq7HrnU9d8OX1A
79W8hZq3WHMkp6fv6p4q3ldv16bvkb7xfVWnoSYNIYQQisnoOxpBvpFXJ3bT
SvwOMZ6HRj+JWaULxJzSd+ar0R18DDHdZ5VVOcdZoe/EQJqIpyQe8w3pFA/l
ynuJhXTS7NZ3NT9K+2k4GoFO4ePVw3s8IGWOxudZqe+qPMfxjYwtv4y2U4Yx
lDuka6ai72gU+oVfpU6VG1VPbaJtXQ+1rmbY5+qij1xLdIoyhn1T/WPMfZ5P
NszPGm99xhvkScqBuib1k/b4vGe6ynVW62uNw4zqO8fwgfWPa9q1N1pn1568
smvTZx07s/quqPmhxkq/8D6NtWP1Q63bDSGEEIrp6TvxR/wW960VFJfln2iI
0nFyVmLNUN+Jd7wGebrSVmKRGObBAxLrxcJZoe/EZjFSPOap0JX0g3+bH1ca
ZDxqf2OxV19M9v4Vo/pOffhZYr1+sSZ4Kvdcm5X6ji5wDL9ruEcyzTT0xNTX
uNM/yp5I36mfz2svbebYKtsYuJboLXp+rL3q1Lfyu34b6MuJ9m8e3f+uPFjX
oHFyXU50vwd9UesoZlTf6VP/dox/u44n2pOQvqehp6Lv9Jtry3s+X33tM66f
4TVEz/EJ+ZN0ZPZDDiGEMMpE+q7ii3jDA+OV0GriEQ0nPomNtNSof1frZ4ev
0xHikbni4ipPST5vVuRnHa+O4p45W2I3TVdrQMfz7YrSd7X2kyYc9hF9pz5i
sHzdqL6jdWo9b/VNzemn1Uo7qIu6icnDPWUK9Sx951wzo+98rtaJ8rLKvzRn
rO7Dpr/Up/KPpTtq/IeUF0hb1TreWi8MOoY/6/XRfWiGqIc66R/l0MK1B4ny
q3+Mn2tvVN/B6/xg+5nwXGtPZnXR147zG8LfM6vv5PuVJydMk5qXp301/63W
IDvG9Ub/TtW/U0fnMybVFscr17Xo/SpHv/pO0Ni530UIIYSxKH0nZo3l39ED
4p6cFz/KcTyT2ifXv8U8/x6urxCLR/e/EwfpDzFMLOOD+IzzilVDfed1sXWo
+1D6zuul72qvuVr76lF7z9YzvcSTG2++knaKk3wn7RTz63Pibek7ZdN3VZ/S
lqXvlCEui8Fislhe+16I+cP9kMXrUd1Z+o4uGEvflcYc6jtj5vXSfVW30hNy
st6jb2gif+tvWky7lF855Rpjfcl7HHpJpYnoHG0y/q6NwrHaWXnb4Xuj15w2
Kkd/qIu6Vf/QWtrkXPSNMaGH1Kt0au0zrA3GhLbVNp9Xd+tkXSd1769af6Lc
ob4zlt5TzlDfuWa97ryuU8eqs2tRXV1/VWeP2m/Y+UrfuX6np++Mt/aoq3rX
miR/Oxedqf7aVufzO8bvMX/TnsnPhhBCGEV8EZdoGfFiuC/I8BixVHwxN9+e
dLw88VIs5tXVOkiIV+KmOEQf1etip3jtPR4Z30b8qntS0Dw1L69yiF6v+Xqo
fS28LuYpr/YQMw9KPth6j9pntx7qS+uV/hql1nvQavSC3LK9b8V43pZ4X9qs
NAI8a585UeqrPqXZvOezyltttdV6PTyL7dpOM4zqu9qLpu7J4Djt0+5aa0CL
0AbK97p5WaOvFzQLHVX7vKmDOWTD+fnOWR4lrWU+pWP8Xfdpq/4pXeZcdMcw
T+k940Kb1N5sE8GzU4a6jNaNTuXf1b7Vxppecm56pnSY68Q57ZFo/oA5jzSq
69J72l/3FXZ9aE/pO+XrA++ZD0kzVrnGVJ8ac+txax+b2i9Zf7o+1Nl3Ql+5
TmvPOnrPZx1b9/HQx64P3xffNb9hhuuwaTXlKq/2DXc9Or/2uyZd2/rK94fu
Hb1nSgghhFDUPm61l+94x4i1YmvlPv3b5+pRukKMLI/FMcPXa1865ZRuGR5X
PpHjat5Rab4qw2dq72HHiZ88FrqAdvRvdfTsIVbTrzwuummse24V6qBcn1NH
8bp8sqrnUNPUPnNV19p7o+pa89+qTsqsveeqrUOqfTW/sY6rulWfDzXceK9X
/YyFdgzrUO0a1rf2VfN+HVNjMjp+zlX36iiGfTSZfdmqrPHqVuera6+uz2Gd
nUdd6rqs+3kN61CfH93bus7vvcpdD/u69niufhpe26N1ruOU71jnckx5r8P+
q+/acKwqz6vu1f/VhtFrqNo4WucQQgjhyYLYxpPjE5rXx9MYztcXH3lvcpq1
J5sYGUIIIYQQ5k0qZ0jX0XdyWnJu8r41b07umLdnXpN8V/YMCyGEEEKYd6l8
Jo1nfQCPzv4o9l6u+8Sbq8Tfs5Z0mO8MIYQQQgjzLnSbeXbm5dvzwxz22ufW
nDvvjTe3MIQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBDC
U4t//OMfc7sKk2Jeq+e8Vp85zVO9/SGEEMJ4iJH33HNPu/rqq9vZZ5/dzjjj
jHbOOee0yy+/vL9exzzyyCPt1ltvbeeff35/7/bbb2+PP/74TJ1Xmbfccksv
84orrmh33HHHTJU5O1DPhx9+uN10003tggsuaFdeeeUcreff//739uijj/a+
Uo/hw2vefzJT7R+r7cYgGi+EEML8iPj12GOPTYtpw8cwxs9onHvwwQfbUUcd
1ZZbbrn2qU99qi2yyCLt85//fFtmmWXa6aef3o9R/vXXX9922WWX/t4SSyzR
Dj744PbAAw/McLu06brrrms77LBD+8IXvtB+//vft8MOO6zXZ7w+EOc9zwzK
oguU5VH6aLz+c8y1117btthii/bFL36x/eEPf2hHH310e+ihh2ZJHbRnvHOr
2/3339/76dJLL20XX3xxu+SSS/qzx1VXXdXuvffef/q8z9X14RzzqwbSR35j
XHPNNdPaXA+/B/zG0M75tX0hhBCemojTd955ZzvwwAPbqquu2lZeeeW24oor
Tnv491ZbbdVj/4xorfvuu697dspZbLHF2iqrrNJ1zJ577tk1DM8K4iyNs/XW
W7f3vve97fvf/37ba6+9xtRik4WuEbc333zzXubiiy/e9ttvv38qU+ymLffZ
Z5+20047tWOPPbbH9BlFP5144om9Ldttt13XS3WesaCP6Kj11luvvf/9728/
+clP2iGHHNK104xCkx1//PFt++23b/vuu2+74YYbxjxOO43P6quv3n70ox+1
b33rW32cvv71r7cf/OAHfdxcG/qnNL6yTz311H690Mw777zzuOXPy7jmXH+H
Hnpob/8Pf/jD3m4P/fDTn/60rbXWWu20007rYxRCCCHML4jZ8pebbbZZ+8pX
vtI++clPtje/+c3tVa96VddEn/3sZ7ufdOaZZ7a77757SmXTAsoW/7/xjW+0
L3/5y11LjBUrHfu3v/2tx9pf/epXbc0112wnnHDCTHlY2ibfS5/85je/aWuv
vXY76aST/kk3ifNnnXVW+93vfte+853vdJ01M7qS56M/eYZf/epX2+GHH97b
N56+c/6bb76569nf/va3/fw0xczoO+3eZJNNulbRLvnwsdBO+u+jH/1oe+Ur
X9kWWGCB9l//9V/t2c9+dv83zVca1bH00DHHHNOWWmqp9p//+Z/tGc94Ru8z
/Te/od95dDvuuGP7+c9/3l7/+te3f/3Xf23//u//3l7ykpe017zmNb1faOSZ
uR5CCCGEiagcYuURh/nUmj9Vc4YcU/mz0Xlcyhk9ns924403tuOOO677Rx/6
0IfaX//613beeef19yrPWHm5yj0qnwarPN1wrlb5YrQObfftb3+7XXbZZf+k
W2qenHJoSJqQRuKDlSYqfVT1rvbVueu1ouZUef+uu+7qZZrTJk4Py9R25+FH
0Sw8vvXXX78fW/0zzE1XHardHnXuOoYfyvOkrWgfuenx9F3VU718ruqpTqPz
3qq+w3OPzhPz7CHfSt85P30uD648xw/rqgye5ne/+922/PLL97H6y1/+0v/N
06LnHFNa3TXhNwAN9LSnPa298IUvbD/+8Y/bueeeO6XrWB1r/Eavm9Fj1bfa
OlGuefiZ+tzwuzGcW1fleNb39LX+4l1qv37485//3D1M+m9mfmeEEEIIE2Ge
EE9LPOYp8HloEXFpm2226X9vuOGGPTdonpnXygcbxlA+Gc9GnnT33XeftsbB
MdYh8M8+8pGPdN+NTijEwYsuuqjHPp6O9+Xo5HHXWGONPs/NuohC/JRzVacv
felLXTPwS4b+nTrREHvvvXdvzworrNB1xa677tq1ZeVJ6YHbbrutt1156r3R
Rhv1GLzSSiu1TTfdtPtKpR1pVX7YuuuuO63M3Xbbrbev5ospj/ZSzi9+8Yv2
6U9/ureb5/bHP/6x55K1yXqH0ls0jnLlLekAD58/4ogjukbAZPVd5aT32GOP
ts466/R6ygf6t34e9lO1X05bWxzroY7yz/QpbazP5Jj/9Kc/ta997Wtdp2vX
r3/9615XfczDdKz6lL6TD3du/e6Yn/3sZ32cS9fQQbxX1watLnfJ511wwQX7
74Gp6Dvz/fiJrlvac9ttt+3z3UbnPVb+lP+qPep/5JFHdu0/ET6nffLs9Kj+
2HLLLaeNmb4+4IAD+veg0E46jlb1PdIPrmn/dg1E34UQQpgdiMU0i5hIi8il
0iEf//jHuyahIz7zmc+0z33ucz0ueYjBb3nLW3o8ow1qDYVcK59KnObZyOXR
LmKYuPvLX/6ylynemb9W5+eDHXTQQf09eVt6TQ5SHT784Q93DScWO4fzidn7
779/X1fB81l00UX7HLdTTjmlvycGO5Z+oinU6QMf+EB705ve1Mum4Sovpu60
o/leCy+8cPdZtL/Wa3imd+gvusixyuS/vO997+tahIahI6tMc8ZoVLlbbXjP
e97T3vnOd/Y6WOdAHylTn9DAdJt5cbSS4/WftSCeeX/mu9Gj/LfJ6DttuvDC
C3veWHu1661vfWvPiVY/FvQlXbbsssv29nziE5/o7Zf3XnLJJfvx9Ar/ld51
fXzwgx9sb3/729u73/3urvGMj2uCnjM+Neal71wz+kN9aDbXWs251Gc8QGO5
wQYb9N8Mzv2KV7xiyvpO/xhb2vNf/uVfer2spRnVUPV7wzocPiEtSdu6Xiai
dCGd9rGPfayPj/l0rln/dl7XuO9BjYl2+s1kDp7fBPqh5iRG34UQQphdiEP8
IV7NN7/5zR6zxESxj3YqD80zj0VM4gOJZTwS/o4YpQyx1bwiWonHUXrH80T6
jh4zl8z5aCGxzzwxnhJvRJliKg+JDrIGlhahL+irhRZaqOtA2oim8lll0hnm
7POyeGzisPlQtNjQPxLX6RvlKIM/aT8RcZneE8NpR1qs9mRRf/4N3atd9GaV
SQdoMz9IP6jv9773ve5jySurmzIqv0fT8HPMkdO/cs3awCOln1ZbbbWuR2hM
aysmk5/VLufQNpqQXtQ3o+srjJvzeF87ysei6dRTmyp3zh9TN2OhX8y/U3fn
GR6L6ek7ZaHKpvHl6+k5+vdlL3vZlPWdMowDXefzdL0+Gs3b63e/A3iUNP87
3vGO7pXWNTkextUY8HRpf3qdz2ystJU3qe6+H6Vzo+9CCCHMDUrfyTfRGDw8
MZVXwxcTj8QhOkv8kn/yPv/Kv2kh8Z1+oxN4fbQifVB5scnoO3lfn3XO8gVp
E/XiF8mXiqPW24rZcqk8o/LYxGd6iz7hRw5jOo1Hs9Iw4+k7/pF4rf00C60h
Lysu03B0Q+VJoc5eU6bPDPXdsG9pUtpR39I1w3rV2g99TMPyzsR9baWd+Wi8
NzqKTuQd6e/J6LuC5pET1K/046i+47HSHfqelqRFjU/NjxyF9pOTpNu0iw4e
i8nqu1Ho2BnVd9plL0RraVyzfh/wUkfnidbabj6bevldor2uk4kY6jvXnHmf
cur60PW99NJL9+tB/lk9ag5m9F0IIYQ5Tek7c+bk4/h0NBTPSJylK8Qw84vo
GDGT9hKraTw+n5hH98kv0nw01pDJ6rvSSnKt5Qk6lr4rr7BiNV1ER8oX0hDj
7aMhlitfnnF6+o6+kXutOVvyhjSG1+2fV3MG1Vku0FzDifRdzS3TR+L5xhtv
/IS9YLxv/xJ6hxdJy/EY6Tp9L0/pc+qk7fTdZP27ajs9RlOMp++qb+TTnY9/
SmfSZHSScXJ8nYOWobn5kdo1nv6aG/qu5v0ZJ3pN3cfaY6/WYdB4xtqcRNfT
9PauKX1nHPncrhm+rrbI29PldLLfJ8qMvgshhDC3GOo7eVUxyp4V8k7iLA1h
Tzn6jjai7+g1ekbMktPlg4hd/AyxzFqHIWKYOD2WvkPpOz4ZT05+S1ykZ8RA
+o43QuOUNhHDeXZycbTO6PqKYfuG+o4Wo++qnKG+48nIoZq7piznK33HA5Nb
rTJpA/ql8poT6Tt111fqO9R34r9+4AfpF3PtaGMaiu/mHB58NGWNzr8zFhNB
3/kMbVr6jmYb6hhtMZ7OYdyNv1y3PWx4o8ZdX1fflr4zr0+7ZrW+4we67l7+
8pf3a4FOmyz61n4q2inv6vP6aKx9a7TDdaitcv3GYKjfx2Ko71x32m/Nkb7z
m4hGps99F+jG6LsQQghzi6nqO/8GTWSNgLyieV10Hu9OfB3muZQvxo36d/JX
9f7s1Hc0Dq3EXxz6d8P1FVPVd6Wbhv7dcH/j0gfK1m7eo/lq4rrP1fulF/SH
czsX73I8H2mi9bPDR1FrYyfy74aov3u80Tq8Wf1uTGmsalvpO+Ot3fyr6pMh
U9V3VW/nKn3n2NpfbzL3eTBPgH7lrT3zmc/snqhccs2bLGrMjbV1HM997nP7
dUeLT3Su6LsQQgjzC2IZHSVmm3tlvwj6ztxzuU9+Er0lbysGVu5VjLT/hHWD
r33ta/t6CxqQfqlyxS5x1NpLGoYmkIM0t0/sl8OiveQQxWW5LTHdfChx0Tw6
sdG9F3hbtERpk9ofhW7hG8qPDfVd3Q9Bvo+HI8dJW9JG4ro5dnKj6uuz5pLJ
S5pDyEMqfScOW/dR+Vm6hAZRJr1C32qXnJxYT7eWnqB5xH3xnGZRlnmAtc63
PDrrY+W25UfVQ9nOffLJJ3dvVO65/Dt6xbhYX0wnKctxnrVVnrH2++Ot2V+F
VjdO+skaVetl+YZ0iWP1A10nH+2ZblUPmpSG1x/lO6qv8aFX6Cg5cuen611H
NT6T1XeVJ9VO15brkJ/2/Oc/v2te5SvbeE9vL2Djre9o33/7t3/r+yi7jl1f
o7q3rp83vvGNfS9lvy2MQ107Y1H7Rftd4bpzTbqOnNc42/vGbwHXQvRdCCGE
uUn5d+bti+nWUYhVNJA4af4dT8l8PP6Pf4PeoB14d/b+MB+LxzWM27WXRO3/
VvuE0Gv0hvW4dIlYy4uigZTnfOXfiYf0FW+E/hj6d+ax01bWLtCRQ31XuVGe
IU/F2gnnVgfn57uJw/QMPUub2rtEfWuPOOeju3g1PEz1VCbfSpnKGZYp5tc6
36onrUff8g0dqx/olrp3B42nrf7mB8kX0pm1P40+sW6Eb8aLsz+gNtNANLV+
pDGVqa38OT4jzcV70/fDeuoH+pAHpd36UZ3VXT8rTx18ji6kM4d7N2uX68Nn
HKc89bTG2O+A4Z44o/pOf4+1PwpdTEu6t4P9Sp71rGd1zeXZPS/Uhe4b7pk4
3rVMy9FR7pMiR+vcQ8+0jvPQR8aRlqRV6d56fyzKvyv/0jWpDDrZuuLaP4b+
00e1jpq+o+ei70IIIcxJxCCxntaid3g/dAzNRWPxd3govIrhfV3pH3qQfuCT
iHGlser+8soT93k+Hv62V4m/7YnCo6OBPPt3+WrKqXnr5s5ZO1vaAWKqPCqN
aZ0rD2WYI6xYrEzazDmrHv72mjJpWxpLPWkj2oyfpCxeGO3BW6QfnUOZcsmj
ZdK21qHoE5+rdSA114s3xAN0nOPV2blLBypbfapcxzmel6ad9JBxohu0eXhc
lamt+q7uGaLe1d/DetLP9CQt5Lzaru7D8mgz/p++GOod/WK8eHrKqXqaf+ga
Kn0/qu9o1PLvaMs6jg6nR32e7pMbptv5dv72UK/aK3AiKtdPX9nrhsepbuPN
9dMH9BgPj7am66ucsaj9ThxnDOr6ca06r/JcG64h11R9B0b9O7+Vou9CCCHM
i4hdtJh8Lt+L3pjeXh3hqUPpO76ceZ00Hs9SftxcRxqIvpyZe+EWtUaaDqbR
rQMv/5EuHPq6zseH5UtWrlve2pzM4X0nZhbn5LfKmfsNRGuql/y//rA+Jfou
hBDCvELde1Ns5pPIH/Lupjc3PTy1oFvck4Sek/elt+SR3/Wud/X8s98F3ucz
jt4/bKrQUrw0+smaCutC6Kjao2R4TfJfrVEx367u6aEetR/2rMA5zZlUrvmL
1iG/+tWv7j63OaZy6fqF9xl9F0IIYW5T6wXk+sxXExutyeCFyOOFUNBcPDr5
VflIHpb5adZn+5t3Jvc9zLnPKHWvYWsr6v4qvLyx8rLyq+rlGHlT80nlWGfl
75Jat2w+n3mtNJ78r2dtN//OenVzHsZa8x1CCCHMScQtc7WswbR/Br9EnJze
vrDhqUftEWgdqRwpLcPj9TBPzdw+eVJzBZ9snm/tKcibNE9R2/WBtvubvjRP
cnTflhBCCGFuIBbVfUjFbjktfkhiVBil7hHheqn77I4+5GV5b0/G66fa/1Rs
ewghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIYc7w
97//vT3++OPtscce68//+Mc/5naV5jn0SfXTrHgoa273s/M/Gdv1ZGN0nOp7
OrOP0XEavRYyliGEMP/y0EMPtUsuuaQdeeSRbe+9924nnnhiu+WWW+Z2teYp
xLnbbrutnXPOOW2//fZre+655ww/9tprr3bQQQf1su6666652i464dZbb21n
nnlm23fffWe6XYccckg777zz2j333DNX2/Vkw/V377339u/poYce2vbYY48Z
Hief3X///dspp5zSx17ZhevxrLPOagceeGA77LDD2kUXXZSxDCGE+RDa7uKL
L24rrLBCW2SRRdrrX//69pOf/KQdf/zxc7tq8xQPPvhgO+qoo9qvf/3r9rKX
vay96EUvagsssMCUHy9+8YvbS17ykvbud7+7/fGPf+xaaG5CM9ALP/rRj9qC
Cy44U+3y+fe///1tpZVWapdeeulcbdeTjUcffbRfK/r2rW99a3vBC17Q+3xG
xuo///M/20ILLdR+9rOfteOOO6498sgj085Dz/35z39u73vf+9qHP/zhttxy
y3Ud+MADD8THCyGE+QS/22m7Lbfcsn3pS19qP/3pT9tGG23UDj/88HbTTTfN
7erNU9BBW2+9dfva177WPv3pT7fFF1+8/eEPf2hLLrnklB9LLbVUW3XVVbtX
ev3118/Vdv3tb39rm2yySfvKV77SPvOZz3SdN6Pt8rk11lijHXDAAfF/ZzEP
P/xw93z99jJOiy22WPvd737Xr6WpjtPvf//79pe//KXtuOOO7bLLLusebnHn
nXe2k08+ub9H2331q19tq6yySvea/cYJIYQw72N+De/G//ff/OY3e95GHAn/
jNwsX+Ozn/1s18AnnHBCu/rqq9sVV1wxpcfll1/en32WtuKfzk2uvfbarsu+
/OUvt80226zH9quuumqG2uVxzTXX9L4aekJh5rn//vun6XDa7Igjjui52qmO
U42V6+/mm2/u5Y7ny/H2vvGNb7TvfOc7Pa97++23z+FWhxBCmBHkfPy/7Tf9
X//6156bQfIw/wzN84Mf/KB97GMf6/kq85T4Hvpwqg/aZ15Yx+Lccn5iOP/2
jDPOaHffffdMtctz5uTPWvQlzbz00ku3j3/84/13GK3lt9iMjFM9jPNw7t3w
fODtr7zyyu1Xv/pV23bbbePJhhDCfIL/33fbbbfu38nH+F0fnkjNa+dlfP3r
X+8+14033jjf6xftMm+ef/vFL36x/fCHP+x+Tpj34PGee+65PTe76KKLdu94
TuD/gzXXXLPPOd1qq61yfYQQwnzCUN/tsMMOfS5OeCJ0kDly5t7VnCd6b36H
d8iT3HzzzXtu3voaubow78G7s2b7+9//fp8jWz777Mb/B+ZT8u9c/9F3IYQw
fxB99/9Re36NlVf0Gu9EDrvinLWE8wMTtcvYn3TSSb1dv/nNb9ouu+yS+fNz
iYnGCVdeeWX30Xis66+/frvuuuvmSL2i70IIYf5kMvqu9lX1cPzwUfufzmrq
fLNrv+Vh+eYwmctkHzBz6kbb4xj7An7uc59rf/rTn/r6g4nWDgzrPXzMiTlp
wz1wabVqlzl1o+3Shn322afn+8zXt//deO2qMkfbNKfa9WSkxkqfW7Nqbptn
8+KGx+Dss8/u2u7HP/5x35fujjvumCN1jL4LIYT5k8nqOzHHnDOxxfE777xz
f7YP8g033DDLNZ7yaBPzjOwhQlPRKbOyfHOa5CftabfNNtt0/+q00057QnyF
nOVOO+3U3vKWt7S1116758rot/HKtSbWOgVz4PWTcu0lq29pydmphZyft8jv
Ma9Ou4wTfTDcAwM0n/WY73rXu9qmm27aNcN47VLm+eef38d/11137e3ykDO8
4IIL+jy+aLzJo69cC/Yg4qG6vozVscce2zXe8Dj4ffGJT3yi/fKXv+y52Tm1
xj36LoQQ5k8mq+/seSH+2FfV3r6veMUr2itf+cq+N5a982ixWaXx+E7yT9b1
2mfOfrv2Z7C+YVagPTQbvULXWDPx5je/uX3oQx/qe9IN7yehf2jAtdZaq73p
TW9q22233bQyRssEnUMD2Tf2jW98Y3v5y1/e9zK2Z7R1iLMzNquDeYF8uA02
2KCvmaBJrff17+E9CGhYc+eXX375ru/cd2KsdhV0iLwgjfG6172uj/1//dd/
9b+XXXbZdvrpp2c/lCngt4X+p/2tmbDX9dve9rb+PbRmtfCdovesffrABz7Q
/eM5uUdJ9F0IIcyfTEbf3XfffX3vlE9+8pP93gT2U6X1lllmmfbRj360x3xe
Ed9qZqER3DdjxRVX7GU/97nPbc94xjPa5z//+e5hzArETPdWoOV+8YtfdE/E
HDR79dsjxFy7ml9Hax599NH9ffnZgw8+uL8+lr6jmfQfzWS9Aj20xRZb9H6i
oT74wQ/2PCitNDty2sbSHrTub/Dzn/+8r3n87W9/28/73e9+t1144YXT9toz
pu49JW7T6Mccc8yY7Sro4bovG61hLaXy3/nOd/a9dl0fdHE8vMlhvY51La49
16DvlO+X3zN+Hxifmg/helxttdW6XtfPE839HN47dnif2uFciqmMUfRdCCHM
n/h/f/fdd+/6ZVTfiQP0gPybdaMvfOEL+3F8L8hrfuQjH2nPetazZsl9tsQe
OVjxhFfx3ve+t3t3z3ve83psc75ZgThH69B3q6++es//ystal0gL8ej4leCH
0bLWLdoDmE81HrSp/ltvvfXaOuusM80v03/mTb30pS/t/TW77gNgLHl32sVv
dA8JWvl73/te1w7yqXLskGO2l7H36NEa06lAE5q79453vKPvy0bfR99NDv40
fed3jNys/RSNg73tXP98Xt8Hvxnk9mlpD78vxvNJa86la9B8Bjl5z+4H7PeX
3K/9kKdy7SnLdyT6LoQQ5i9oAvOp+Dzbb7/9P/l39Ba9Q/fIxbk/kvl27nkg
t0mDPfOZz+xx3j3NMCMxvuaZOz+/i57kL9Ef8oD2nJtV+g7aTbt5yJfynrTz
W9/6Vve6yiuUC3PPCu3zvj3/J2qDcnkv5b+IufJw7u/09re/vXuSYu7s2F+l
PERlO7/+NH50hBw0jWmuF+gLmsy91ug+Yzq9suli5Yrx5vfZ7/ZTn/pUz//S
k+bvRd9NDn3JEzVWfkPpV98tXp5rkEdKh3mv5hCY++m3wuj80MK1xxveeOON
+3wGetC95vjOfEG/kWg18w0wmbFy7Tovn5EXHX0XQgjzB3I94j8dRd+N7m9M
x5k3Zt6d+UH8K2sHaAL/59Mr5pbx28yXw4zkHks/0Fm8NHPteGjO4V7os1rf
jSJmOi/No61iJP/NvZx4d4ssskjXZcM5bJOBxjr11FP7HKv3vOc9vSx9PKfm
qtEH1sDwX5yfJqMp5PzkkOlW7aYvJsLY8Px4SeYWyum6/7z8LA+Kb0iPRN/N
GPrXtbbuuuv231LytTQ0vVbzIMzVo6HH+37Rd/xZWtv1yrPlq5sfK79rzOg9
8w2M92S+p34HuGaMuTLq902t/Q0hhDBvQc/Ip/m/foklluj3tJT7Gf4+9/+3
mCMna60A3cNjEC/oIL4WvWJdgvll8kyYVXPL6Am6ZE7oO23VH+aVaas9jGlM
5zQnT6wU66YS0/SD/nOv2oUXXrhrqZqnNqegG2gEusH4uV88vWcceTruSzaZ
e3EohxdoTTBdqD/oO94d/a9MXud462/DxNR6bjl1Wo6vuu+++/b14/ZF0c81
R3I8St+ZG6AMvp25tcbfbwxzMl3LvEF+7WTGytoOeV2+onvz2U/H94A+zFiH
EMK8hVguFrs/OV1He/DveHWje2j4vU4TWF9qHShdR+/J89Au9lw1/0oZ8rwQ
q/hT9t8QW5xrRrwdemJ6+q72maCZZuZcoHl5dDSrHBkPRfvkxviIU9FlYp9Y
a44bLURbKUtubLz82ljtEl9pbr6N+D8j7VKOsZZ3/va3v93Xu5qjZ+yN7WQ8
yco1q4M60d48O2s5jL2yaLzplVVlaI92KWt27xkzOxnmxO1f55qVd52q9qn2
m3fHr3O9y6+ai2fMFl988enOkRz6d3Sc76rr2fdQXtcaKr8x5Ht5g6Pf9bEw
XtrFB/Qbzu8BPr/Pz6k9WkIIIUwO/2fTGXw4us3/29YOjLXvAs1kbw0a7tnP
fnb3bsyztoeD4+3XYA8Q87Cs+4O4IU4pn6agAczzr7Wbk2Uy+k5sFffkmJ2L
bqEzZiT2iLHio3yUOKhv6BaxVUyc7L27qn9puy984Qt9Xa44fdZZZ3XdOxkt
o6/Mj7cGl29iDtSM7kGiPnS6PrLWVZ5dro4vpK0zutZD3DfGyuPlyd3SfROh
D7VjeC8G601mJl893HvZ9VB7Lo91XM0DcJzHePtmj1fm6LE+73eR3CmPy28f
3uiM7mHic/rR/Dm5bx6c3xrD3Oh4DPWd74vvJg3Oa7OeyO8V16O5B+YITFaD
0uz8X2vnefXGbrgWO4QQwryBGGV/Bvkf2sXeI7wC8WP4m95x/BXxRr7n//yf
/9PXPVjrBxpOHLL+gTdgXh7EQ1qPhvgf/+N/9D3YxJzhvq2TgcfjvlnKp7Pk
iUYRY+zZYe740572tK41aIYZyYHWGg+xS7voWWtK1EFubDKasfwOeTH5T+tP
5Hrpval4VGKqMuw987/+1//qHpn57VOd/1doF12lH5/znOf0MaHpaeEZ1Vau
oQ033LCXJe5bDzO9+yrQL/wfWsG+N7SvfOH05v9NhGvAuhznt4+ftTGu5VH9
UntPm2/o2vegf/hbo5iXaq1plWkew1j+tr7zfTA/zTpvv0X4ZvbfwVR9SeU7
D491wQUX7HtN+s5Z4z497Tzq3/HcfCd5i65p2tPvFntaT1bf1T59fp/w7vw/
IUevjvHvQghh3sP/7f7vNpdGLKEj5PBGY4j4Jc6JX6961av6GkxzhOR76Cj7
fdAe9l+oz/oMTSivSRO++MUv7nuPTDTPq7wV2pBGoB34Vzy5F7zgBT3HySOh
D8Tj0iS8J3OC+BX/8i//0mOiGCT3N6M5P+fnV/Dv/uM//qPvWaefJspnDfc3
1nax0H4y+oBOE++VQfvRDtOLrcrRXn7bv/7rv/b9pOVSeZoz2i79bx3va1/7
2r5XCx0wvXlYNS5iOW2kDcaGXnUd+H3A/5W/nkzu2TXCM3TdaJe68KZmZs9e
Y81fpRVda3WtjPpL6kbPupZf/epX9+t5dD/hQl/xuawbWmCBBbpWp2tGy3Qd
WpPMu3NuewUZexqy+m+quD5cM/ZKsT8Q/5ZOm949j0vf8df83nG90PSl77R1
qv6dvtVu7at9dCbyPUMIIcwbiAl8ITqKR1D7vqFyVOIDzWJ+Nn9MHJU3sue+
eeA8HHGlYnvlJ8Vcc/ZoLrm46ek7n6cfxB/likV0Dd0mdvKIaDexr+pZ6w7t
Oedc/A71lFee0fhDy8gn0yxveMMbej667v0+HlV/Ok4eTJuf/vSn9/s8iNP8
FFqPljZnfno+l7LoDmsX6AtahC9EH85ou+gDOW7zC+3VYr7k9OJ0aTterTmX
xoUvywe0RtNazxVWWKF7WMqfXt2URSNoizGl7+Tv6buZ0a3GX5t4rrxBe9mM
5p1pMR6wuaZ0E/1Nt9A+o9Cw1imYN8nv1E5rxkf1XXmCPEi/c/7v//2/vY/K
456RNtX8BmMvR0unGffprVsarq9QB+ufyr9Tnj73O8j30ndmMvrO99j323fK
OiHfqxBCCPM+YoLf5zSJvFnllUYRf+WqzAUy186DZrEeVAwYjT30CT/wNa95
Tc/fiS0T3T+2cqPyPuaa8a08aDzn8UxT8ovswzyci+RzvCTnEo/5DNPLZU2E
uvg8X5AulZubDOrBF+GfqHPVWzv0l2drlZU3mfrRS3QDr0mclyObmT3mxHM6
Qf/RNaVBJqL0Hb+Wjqu28LP8bd/EystPFrlYGl675K/phplZU+yz9vClg2hX
9bT2eTTvrP00M33DT7ZnDe1Oy42in82js9aBf2YPmIly2fpSv9D1tJD9ZzAj
Y1X7FNOi+td4TSYXqn3qbW4Evev3mnUQriNttL7dd8s+lXy5yaxzr/2N/a6y
z7frJ4QQwrzPZO8/K3aIMeJHPcynq7WCFceU53V6wDyfhRZaqGtCGnJ66xOG
e+hW+cPzeYjlYl/dd8lr7pshnjmXeXPuRzG9XNb0qHnzNO3Q05xe/Wt/4/Hq
L+9K+44XW8sHrPWpPBy+lH3L7F8zs/e9UD8a1By1upfFZKg1oqPtGubKp+cD
1n7Lcpd1zzY6U11mZq6+vnRtqou61Z7VY91DTvtdG64jx46XK6/5C8MyR9fG
OMZ40lD8QnMcPPjh09sveiLqHLQUjee7NJm1rsM1zq5B10p9Tl21tfpmsvcp
y/3JQghh/mQy+m6yiBf+/+c58TCs2zCn2zx2WmIyMWoq51Imz5EXwyezXoCP
J4c0s3tz1b3Z5N5mx73ExkO9eZP24aPpap68+Y200azYc0yc58fOyfWPxp43
bE0xP0x+lydG29Gy8+NeavrQ9Vb7R8rn13doVvQtTe0cNNncmusWfRdCCPMn
s0PfmT9P33mYxzY79vN1Lh4JHWS+vPgzmf3X5nX4Kvwge5nIH8qb25t2ZtaX
zgu4zqzTkYulW+XQ654X8yt0qd8u1lfzIeXz/R54MhF9F0II8yezWt/xYcRs
eS2PygXNaioXNTyX/NnsONecxphoF108vXzu/ELlRuXojRVPSrvm5zWYlQvV
npo3ML+P0yjRdyGEMH8yK/VdCOHJRfRdCCHMn0TfhRDGI/ouhBDmT6LvQgjj
MdR35rpG34UQwvwBfWefLPrOHg/RdyGEYrj/Xfy7EEKYf6Dv3MfAWlf3rnJP
sBBCgD1t7GNjjbD7dzzZ1geHEMKTFfrOHl7yL+6fJQdjP197rc3J/dFCCPMG
1qHbu9o+ku7hYe8X9wZxbztrhUMIIcz72J/CfRrkaBdddNF+b3b3gNhggw36
PStDCE8Naq8a9zLj1fnNZ9/mxRZbrO9p6f+J8e7PFkIIYd7D/+vXXXddvzcl
bece5O5R7j7wIYSnBqXv+Pfm2rnXs/v5uvef++lG24UQwvzF8L6vfru7f4K9
+ZOfDeGph++9e//x68zTeDLsRR1CCE917L9vTt5k7z8eQnhy4XtPz/l/IP8H
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEMLc4e9///u0
xz/+8Y+5XZ0xUa/HH3+8PfbYY/1ZXef0ubzu73ptXu2rEEIIITy1oVPuvvvu
dtNNN7Xbb7+9Pfzww3O7SmOiXtdcc007//zz29VXX93uu+++2Xquq666qp/L
Oe+///7+Or131113tZtvvrndcccd7ZFHHpltdQghhBDC7IdX8+CDD7Y777yz
x/aHHnpobldpUpTnRLPcc889/TH0vh599NF28cUXt6OOOqqdccYZ7bbbbpur
9dSv6njvvfc+oZ7+fcQRR7RtttmmHXnkkV1jzS5ouMMPP7xtu+22vV9uvfXW
/voDDzzQNd/RRx/dzj777H4tTBbtowfpUnpav4cQQghh7kJrXHbZZe2www5r
Bx98cPd15gfoCprpuuuuayeddFI7+eSTn+DR0Swnnnhi22677dq+++4719pV
+pk3pz6nn376E/wx+u6QQw5pm222WX++8cYbZ1td6LaDDjqobb755n28S0vS
fcccc0zbfvvt+/tTqQPvj04888wz23HHHTdNM4YQQghh7kHf0Rz8o7/+9a/t
ggsumNtVmhR0Ez+M37THHnt0DUdHFbTeJZdc0o499th26qmnzjXdoZ70Ew9x
t9126xp66JHSd4ceemjXXJ7nhL4zzny80nfytBdeeGHvKzqNjztZtOXyyy9v
BxxwQNt1113nm98HIYQQwpMZ+k5M591stdVWPc7PL9BNfDu6ib4Y+ne1lkC+
0GN2rluYCPWgl3h39A9dNerfDfWd+YKzi1F9d8stt0yrIx9OP3meSl/Rd34T
7LPPPl1n81NDCCGEMHeZSN8N11rW3zQAfVKaqdZbeq+OHesc9fnhms2xyhzv
mGEZpdnMqZMT3Hnnndt+++3XtVLVdXje0TWhY7XL+T3qXHW855pDN6zr6EM5
deyQyl/Kf6qnHKy5alWvUX13/fXXT5vTNlZ9Rvt0tO/GqwfG03fVJ6N9NVxX
W30+qpe15Zxzzunajs6+8sorp10Pc0tThxBCCE91xtN3Yjqtce655/Y1l+bo
yYWal28dgJwnr0lO1EOOjo8jvg81nvL5bLVu01rWet3nzzrrrF4mvSE/qIya
309HXHvttf21G264oedbTznllL4OgK7zGXVee+2120YbbdT1kfedi6/ks+qv
TnRUlSmHeN555/XjLr300t5+bfKQR6V7KodKq/gMjaaudJrzWhNRfeE1dbO+
YKhpaBx9qK5Vz0033bTPfdN/6qGt6k1zHXjgge20007r51Gu8tVNfUa9Sblp
60dOOOGEXp5jfU4/qe9U9J226gt9ZZ5gras1jj7jPMam6qSP5JH/9re/dW23
5557tnXXXbett956XeepkzHTHyGEEEKY84yn73hC4jQtIH7vv//+ba+99mob
b7xx1yme6Qr6hX4T93fYYYeepyt9ABqHPqBdfP6KK67or/Pejj/++Lb11lt3
bbbBBht07SOHSQcqwxoJusJ6TxqIR6ee1iL43BZbbNFWWWWV9qc//amtsMIK
vYxddtmlayS6xGcd57N0D5RJH/qsdimTJlEH7VK2tlSeVP3pIHlgcxS123nW
WWedfk7n3nDDDftnzGdzfEGT0Tl8rVVXXbX98Y9/bCuuuGIvw2v0mH7Qj5ts
sknbcccde520QX2cg69HPw5zqbRdlau+66+/fj9e32gzLTrWHifj6Tvjpw61
rrZe5825NoyJOmun8/Ah6WNjqW+9ph+WX3753of6nP7NWosQQghh7jCevuMB
0UFrrrlmf9BBF1100TQvh5ajc2gp3hhvT1ynN/g65WPxhsw9c7zy+D70CU9r
991373qGb8T/ss5j77337ppBPRzHM+IN0WM0iTrwEvlNNIbj6RX1p3nM/zLf
jTahMegm2pKXB7qRllljjTW6fqJ3tMn5aBsah87UHm2gB3mCNI1z8d3UVZuU
rW/oL+Vr69C/K+9S2T5LqylHG9ST3vK+9iqHNrJOhCemLeqjT7VPW2ufFf1F
R9OBNDIP0mvK8br6lk86ZDx9N9a6WjpSHWlf14XxUgfncb0YR+Ou3erpmC23
3LL3C19SGfPqnoMhhBDCk52J9B3dQgPRcTRDeUJ8Gbpr5ZVX7pqN5hDPaTVe
Dv1FRymb1rP2QdlyuLSEfCndQsvQSpVLlOdVF1qSVqFRnIc/5fO0xTD3S1+o
F51Inwy9M7qMvqM36bua969eXq9cqfPVnm08O+tbV1999a5TlCfHyLtUDi1L
j4GGVH/1otcm2pfYZ5Snntoz2gZz8sqrcw5113c0lL5Q1+p//ak99n1xbOVA
9aF+VRYtKc9arxfT03fDdbXabhzViW9H2xkf5WlraTd1cs3oC/7s7Fz/G0II
IYTJMT19x6OiF/hlqPygOVg8J14eLSD2y+fSHTyl8m8qjyjHR0d48Ol8liag
+XhA8rzOoVzH0kL0Bz1EW9E55cHV+gFl1bpUGnK478j09B1t5zNVpn6o8viF
8rF1Xwf1pHPkjWsen9eVS6fKs463J7By6VR9op78saGvNdz/jsbSD/U5GtIY
0Nf6TJvkRPWx43mMdJzP1D0w1IkHyZOsviqmou+cX5/R7F5X75oHqV7VBuNe
Piqvr/ozhBBCCHOP6ek7Ooh/VfualX9DW6y11lo9b1drZ/lYtBBtJmfIW6IL
aAQ+H31ivhlNaL7Waqut1nWTBw1Bs5jnxa+jFeiPsTRa1WNm9J3XeXVDPUW3
0nXWCXjms9X6VvWTh+RP0TZ0DN0qJ0lLjeffTUbfjbU/SuV29W/pu5p3R3Mv
t9xyva+q7zx7Xd3ViS9a/VRMRd9VX9GT6m4MzT+kLfUDnVf5a7oy+i6EEEKY
d5iMf8c7G+q7mm9H35V/pxy6oD7Dh6Od6AH6kN6QyyutU+sM5PQ86AMP+pAG
koulb8q/o9/mhr5Tpvlw5rppF+3Kb1NncwqVLV893n25pqrvKr85lr5zrPFR
95VWWqmXV/3mYe6d+rifR61tmBF9N9w3xdjKCfMo9Zf5g/rCuNN4dO1Q32X/
uxBCCGHuMyv1Xfl69BEdQ+Px4mgGOT3H1TFyoPQCPUNz0X50j3wfbUZX+Xt6
+k5OuPa/G96/Ylbou9rvTg6ZRq09QOhS6z3UjV810T1XS9/RaTvttFPXhjOq
77TPOCinPDoeafWdNte647HqNFX/ru4rq0zl1T44NLi1vnSk89N3/L3cvyKE
EEKYN5iV+s6zOXS0h/gv3tND1gbU3rnKtQ7AuRzDfxtqFJqGFqS16BS5wPH0
nWNpDB4hT8nnlFN5w1nh3ynHmln+lBwzH0semraSS9UXtd/vWHvO1f0r6FDz
4vh+9JTPVP6X5puevqOVfYZWrLWuPkdf6nd9pyzv+9xYa1e97jO06TAXPN78
O7l014Ncu36juV0HjqUxtcnYOYavqX36ZrgH8lh9EkIIIYTZS91/VmwW9+v+
s3QSbWU9rLzfcD0mHUETWmdKAw7vVUBf0A7m7dmbjtYT8wufpwms/eT5VP6W
1vI5+kJuVk6w9jjhlw3XV1Q59AbtQdvx1hxDbzofTcVD9Fnl12eVWa8PNaP6
qxe9ab0q3Uh/8azoO+dQX/qo9jX2oL+GezKP6hn/phHVqfaUUR/1pBG1k16i
o/VB7dNX6z30r7YZo6qPz/mM8tTJ59RLu+hSGsw5RzFu6muczaWzLqI0Iw1s
zIxB7Y/C33N+5/C+89CndLnz63v1oUm951rRT8aMHlXuePfSCCGEEMLsg46o
/Yfl3XhrEPfFaHOqaJHyekqv0Bj0BZ1X3hxoLmXwu+iF2ve3qHhf8/JpR8fZ
g8MzX8h5eU2OKR1o/tpwXlhBs/CRaBYaiU7ls/Ge6DJ6xPv12dJryqTlap5a
5Zdpntq/l25VB55d7Tlce/zWwzkdT+PxzEbvyVXt1R5aqepJ16qX89OS6ulZ
vas+2ubcfFD6sPqZ9uY70lHaSzMqk2ajj703nItYqJ89T+hL59fPfLnStcaM
10obV98a35p7qL3GyLqSWkusPspVP/3gfd4irT3UziGEEEKYc9R6WPqHDivf
pzQJXceHGd6vi87wGTqCNigNU/crpaGUxfPz2bFyhXVex9GD5nV55rM5b+Uv
qw7DPTmG1D4iPCtrPZ2z7t/gs8qvvC0mKpOek6OtPZjVQb/wxeQfaT71dB4P
uph+5VHy8pQ53INviNf1RdXTMy3n/Hw6n/Vc9ax7uOpf9dFXw/vC+pzPK6fq
VG3X/+PdB9j4alPtr1xzDPWFvhrWoc5vnI2Nc3iuvY2H97qlE3mP8vN1zPBa
CiGEEEKYF6BpaSc+JW9s9J4QNTfPGhL+Jx00nr4LIYQQQghzl5rfx7OSn7Qe
Q/5UfpP3xSuzxkSu01oR8954XclFhhBCCCHMm1SuWZ7W2obSeOaheTbHzL0r
zFkzR01elHeXXGQIIYQQwrxN7W9i/YR5ePw661A8m3NnTh4NGN8uhBBCCGH+
wTqC2mNu+LAOYbg3TAghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGE+Y9//OMf7bHHHmsPP/xwe+SRR9rf//73uV2lmeahhx5qN954Y7vg
ggvaaaed1s4888x24YUXtltuuWVa+7T57rvvbpdeemk/7qabbmoPPvjgTJ33
8ccfb3feeWcv0/luvvnmXpd5DW2/44472iWXXNIuuuii3i/Gf06g/11ndb3p
sxBCCGEsaBRxQyy9995723333Tft4d9e977jwv+P2KqPrrvuuh7rr7nmmt5f
mB19pczSk7TUAw888ITH/fff31/3fh07VR599NF2+eWXt2222aYtscQS7Vvf
+lb70Y9+1P785z+3Qw89dJrecq7TTz+9v/7LX/6y7b777u2GG26YqbYp85RT
Tml/+tOf2q9//eu2xx57dJ051rHqqS50zsxoamUZR+XoO+VO1HdeN8bHH398
W2aZZdrvfve7ts8++7Rbb711pupgzKo9/h7rmOqja6+9tl188cXtyiuvbLff
fnvXeSGEEMKQii3ixF577dWWWmqpHrPEV48ll1yy7bnnnu3666+PVzBAv/Ft
9t13365HfvzjH7c111yze136c3b4eMqk484999y2+eabt7XXXrs/1l133bbO
Ouu0NdZYo22yySZdI/HWpjpetA3tsPPOO3dNZ/xXXnnltummm3b9dvbZZ0/T
P/fcc0877LDD2pe//OX23ve+t9eDLpyZtqnzwQcf3L74xS+2D3zgA2299dbr
GmYU59ZG1+Xhhx/e/va3v83wefWRcxxwwAFtl1126eXSeePpO/XkMe69997t
s5/9bPvIRz7SNt54467xZxTXC8/ywAMPbPvtt1/3Lkc1nvNq96mnntr75ac/
/Wn7/e9/3+us/vluhhBCGCKO+f1/xRVXtJ/85CftOc95Tnv961/fFl544f54
1ate1b7xjW+0HXbYocff8P8h3spLLr300u3jH/94+9CHPtT/PvHEE3t/zi6v
c+gdff/732+f+cxn2nve8572iU98on3961/vMZ9GotenGvN5QyeccEJvx+c+
97m29dZbd93i9VFfiQY655xz2mqrrdZ/A/CwxvLapoIy6eNVVlml/eEPf+ja
WY52FLp6iy226NfrSiut1LXRjKJdxx57bO+3b3/72+2vf/1r128TjR+NTQeu
uOKKbbnlluu6bGY0puvlyCOP7P3+m9/8pmtNOnqIsTSmRx11VFt++eW7/n3X
u97VPda65kIIIYSi9N1ll13Wvve977UXvehFPc7w8vbff//23e9+t8eRRRdd
tB9TcWc0n+uZDqg5Qd4Xr70mHg7zu5Vfq/dKN4xXphhcWqXq63OeleP9+oxz
1rkq9+ZY79ejjhuWWXWq89Zx6lP5ziHOwUcT35dddtmuhei9u+66a9r5fa7m
SlU+1bMyPXsM21DvDb2/YS7S+46jP8z74p/xDsX6ymeef/757bbbbps2DlVu
PevPyuOWF1fwh2gVuolu5I+NelnDfqKzeE3nnXde13aVux3NI3vdY5hLHs5V
rDFVJj2nTO0YLVN5HvwqHtZiiy3Wr1Wa0OdHx0r56jqavx5eT/6mmeSYeZH8
T3PrxtJ3NfdNPc03NN4193B0/t2w/XWd1/hX26t+xpNvpw5801133bW/pj2j
x6qbsd9www3bD37wg67z6dNRPRhCCOGpzVDf8YNe+cpX9rlX8rH8ug022KC9
853v7J4en6Dml3mPnvjtb3/bfvWrX/UHL0W+TLwzH2n77bfv/o5cIu+h4rnz
KUtea6ONNup5P/VwjNhWZVZ+8Igjjpg2v0nM418p27mUw+fhIcktq7vYWPHw
qquualtuuWX7xS9+0eOnB03guMonOrfYe9ZZZ7W//OUv3UNxvDL5luY6jXph
pe/MP9MGebOhLtNGvtLRRx/ddbLz0Q6e5T+33XbbnvfUBvPY5PvU07GlEau9
6qVfPPishTFSBv9QP9FEw/rpM16eNvCEeFPGQy53xx137OWOenL03Q9/+MP2
+c9/vv89Cm1z0kknta222qqX4/rQHusw9Hv1J02jfOfh7am7HO5aa63V62wu
X3ledCXfsMqkXeQd9Yu+QOWld9ttt7bCCit0T/nDH/5w9xmN++qrr96vszPO
OKNfo/X7gvbzuty5thsrfSIPXde+MXK9ffWrX+11G0/fad8xxxzTvUP1VJb6
OIc2jPWd0vfq5iF/7prXdtrY94RG14c09Sc/+ck+lvqfhynvftBBB3WdO9Rv
2uZzflfoi+i7EEIIo4zqu1e84hVdZ/BI+EDi8dvf/vb2ute9rh133HE93pbf
sPjii7e3vOUtfQ7S+9///p6j9BqNQrOZx7fQQgv1+Vniv5gPOk6slf/95je/
OS2fyDPkIb71rW99QpnmtjmG1nHu9ddfv33pS1/qOo1mEOM++MEPtgUXXLDH
fPpPjDbfX2yXu3zpS1/aFllkkR4/+TTiJ70A3gt9RiM5p4dy1Nt5xHJ6YJgD
G+o79aFPhh4OPUK7qZvYrQ28UD6oPuLTfO1rX+vv0wu08Ve+8pX2s5/9rHtC
tRZVG+gIuUPtVU/QZbSr9z72sY91XVrz4+CZLuXv0EDKpRt4Xs5j3QStQWcY
U+0zvjQFnfPRj360/00/02m0iHPqf5pDvb/zne/045Snn9Wn+oZ222mnnfp7
jnN+YyuHbH4dDV9tMVb0p77UTmXqG/2iXqDZ9LE6aYcxlZc2TrUGhJcqz6k9
dKj8sbFxXn3uczwvuVjzCelf4zRZfadNdPgf//jHfk719EyrD3PTNTY8Xf1t
zI2/PpB3pnnlvR2jj/yO+MIXvjDt2nO8uqqTsn0Xh9eW69AYKEufRd+FEEIY
ZVTfvexlL+v+idgo7yYuvvGNb+z6iT/Ep6DV+DseYgyfh5/GG6MPzQniuYld
NJUyvS+mif10h3inXPqRfjCfiQ4R5/gS4v12223X55GbAygGOr8Y6zP0H20o
P8kTU77P0oZ8Mjm+k08+uX3605/u+WW6QZn0Cr9FzCwvUk6QXpHn1F76Vpto
UO324EEN54JNRt/RpGK0fuLfOM6cfG2iJekR7aJReaG0Bz2pns5VulMZXqcX
SkNNT98ZU31AR73tbW/rmooGozlpJPpJufrdeOpD59df7373u/tn5GjpF2XQ
EzS4OhkDY6hPXDPapx61FqL0nfGjgWpuov6gbegcGpunV2XSmfKOcsKlg43j
1VdfPa29tKVriA7V77Sja05/qY9r2G8SXitdqJ10n77xm4MOUibNxaNVDo3n
9cnoO31a+WP+or5RB9fLcO2w3yH6yzi7Rl2vrjvXi3pW3pmGV57rmpZ17blO
6W5j6Vjl1vyGYT2i70IIIUzEqL571rOe1fWMGCg20kx8OH6HuCce0W3/8R//
0V784hd3bSHG8kjoqP/23/5b1wiOF7fEUTpODk2+TVyTn5Jfo/3oInlMWkCZ
CyywQPdm5EfFeTrjv//3/951kRjt/PTQO97xjv4eH44uqFzkZptt1uMdHSCX
pk7K5EHSjfRN5RGhPnJ62vn0pz+9l6vt2uScz3ve83q9aD3xtpiMvjvkkEN6
34nZ+kMemR6g7fxbXs775pLpq1VXXbXrLn6hNulv+T/9QCuI+XwpVO55evpO
+TU/j5ajz/UTT80Y0LG0vPory3H6/33ve18fO6/JMTqGHh7OoazyaTGaZCx9
96lPfarrJj6U13iT1iV4Xb/JkVeOWJn61HnpP1qr9N0Q5Rhn1ytd7todou10
MQ+MB6v/rUkwhrxUr9GkfhMon86bjL4bjr1rhk7lR8orD/Ud3caL9p6x8T2i
zf2OcV2MQo/yHfmKP//5z7tenej80XchhBCmx6i+o3Fe85rX9LwqrSMW8ifM
txOHzf8Sl+lA2ofGotP4aXQhLSHuiFe8FL6EeUXieXlgfBXeBw1nDpm943gc
z372s3uZtFiVqTz+jzwjvcbnoe/khd/whjf02Cq21VqGWjfgQSPxyPiC2vT8
5z+/+1g8HDFdXeTy6E3n+5//83/247RZXJb7c36ai7811BqT9e9oSv6Xv8Vt
Md/59Y/P0Uf+TR/QcvSHfpFjpntpPv+mBfVn+TiT1Xc0g/bTkMrTP/KRxpqG
Gq57pZH5iN6jbf1ND9ZalNH1MdqvbRPpO7qZn0tXK8v1w8t0TXim92qdhzrz
VmmtifSdXLHz+U1Btxnn4bg4jzHV165hY65NNDKPzIPvS9u6/ibr31X5xplW
NlaujVF9px30H51OA7r29adz0n18cXUczrFUX/2kjsZkov2So+9CCCFMj1F9
x5OjpegG2uglL3lJ1xflvYnPtMK//du/dV3BR6k5WmIzjeEYukmMomPELLqJ
npELlAeUnzXfn27k4Zh7/tznPrfHfa+bwz8sk3ZQpgctaO6e/KE4V+0YbReN
RQMpQ87ZHELtk0Om3XhodIgy5BFf+MIX9jbzCflVYrQ60Ek0xfBeCpPVd8qj
scTv0nfypDTWUN/JU9bevrSNNQv8P33Ho6RHh+efir7jVWm/flYGPWCs6R7z
ySrvzJ/Tdr4XTWiO5ega2+rbyeg7np331MEaVd6jY4w1j5CfxresNa9T0Xf6
jK9pLpx2DsfFNaXv5EbpS8caH78jHMuH1Xd0nDpNdv5dlT89fVd7IHtN+2hz
/aDNtJ6cvO9T7aNT+k5fRt+FEEKYFYy1flYuib7hufDxrJ81f4oO4HfQX3w2
usI8pInKdk8Heka5cp5irTnk4hIfQxyTS6VT/v3f/73rO7prPMRN+o5XKH7T
DZNBzOYnyb3SrPxHeVL1E9/FXXlY9RprT91RpqLvaLihvqOJh/qONtIu3qSc
Ia+H/qWrHU/r0Uuja3jph1o/SwPywgrxfqjvaIzSd3xQY21O31Df8ZRq3Yw6
0BkT3QOLb6b+yjHGro2C1ziRvjPOpe+G5bsm6Bx5bN7vWHvqeY1e1TfOP1w3
DH6jNtJ/2qEc9RmL4frZWtNR64Amgg6VS5Xjdl1NtP9debP8Od6w3yX6lg6t
PYHo0Zrn4PqfSK9F34UQQpgepe/k7sRD60zFav8Wi8U9vpd8qBjNTxEP+Tti
Fb1kXpn3rKkQV/l3tW8azcN7kmPlX4j38q88j9rby3w48U0sVqZ60BnDMmsN
If/OXhfmh4nH3h8L5ZYnphxaVb7R3C7en7WX2kkrVB5XLk8d5Y/FTGXzH8Vy
dRzdo2IifUcjiMG8UHFd+3hj6kyTqRMflJahVWofQF4o7SUvrJ7mbsnV1jnV
QR6Vt6jfxXh6WR7QPDn+qDbRUvQe/aNf1ZGGH2ofYyFfWPqO3lCm85tDSfsN
94qDfxsL/WoeZq13pf9pFteN+tE09B1tqf36sfSdvCxNKvdMm9G2XrceRhvk
7r0vt+06UGbt6Qd/07y0EI3v94j68C95e/rSmNKRNCDdZOz1Wa0noXWd17G1
/51r2ni5VtTFg3/r90ftn6cPecvOaSz9LpAjluv1Xq0X0Qd+IzmXcrTDGmn1
odtdW/q7vn+O4UXyLXm4+stnax3QcAyi70IIIUyP4f0raIQ3v/nNPS7LX4nH
4j2/wRpYeqT28KVXzNGnB/l71lx6iPV0U+2noXzx2bx9murVr351z5n5fOE4
3pUYKba//OUvf0KZYr05gI7hw/GixFU6hFYZC20Sy5VHKynHWgtalYakEcVf
5xa3aTh6g1/5pje9qdfVZ3xW7Bfna70tJrs/irxprevQZrlp2oDmpfO8xw+t
efdyiHxFOtOcQFqo1nXU3DL6mmaibfhgdCAvVb5VXWmJ2n+XZqBDeIbGmFek
rsaaNnesfkXtb8yXkqv09+j9XflUxoK/qFx1pLXVQ334iPQGrcPb9Rrt7DXX
k+vKdaSu5qdpG/2kTFqWb6dMmtUYGz8+nzoP98IzHs7lvMpyHJ/QvnA0lrbw
Ap1LW+gq16s28yf5yK5LZdLPdLDz6Xd1pluV6fcA700d/bbxOfWkw2p+Ji3s
eL6ya462M0b0l2vUeZWpnrSddcPW95Zm82y8vM4PrDrIk/MTadHsjxJCCGGq
1N4T9Ic4Ky7W/UvFHT4OTSVmlRagdeQcxV56hI7x4JnQXOJmxS9liaHKFtP5
PLWvWTG8/+homeImPeR9/hMfRiykP+RXx2sTPUPX0G3WbCrL39ZK0BXDPBzd
w/MRv+mGOrfjeUrOM978u9rfeOix1Pw4ukR/+JsXo84+Ry/QlN7jO5UW5r3J
99E55U/SK3VO7Vd32okH6qE9nulE+48oT1/RYmK//qaHjLHzyKMaO34iHVZr
cmkIfUYj+Yy/614khXFXpjoOz29s/a1M9as9VPw+0MbaP9B1wZeyD4pnet1D
mX5XKIf+9RiWqZ6lgdVJ+8xhk8+mgYyza4KmdVx5x3LUXq/+8dtD2Tw717L+
1B+1n49zKs+xyvRa1VObfK76e1hPzzSXPtNH2i7PWuf18Dk637U01Gv1G8v1
od8dqw7K1C/04qh3bPx4jdnfOIQQwniIL3XvJfGutEa9Xve2EkMq1tfxdc+l
4f23hsdV+aP32Bqd0zWsw1hlDuvk77p300T3WPXe8F5gVV6df7getO5lNnps
1Xd4f7Vqf92fTH6OBqQP6z4GVZ52Vz3rfmHq7/Oea+1vUWsm5B55e3TgcP+Q
Klc5dd+v4aPKr/6se5/VOevz6lT1GvZDvTd6T7jRsRzr/F4b3p+u6jk8z/Dz
VaeqZ5UxXpmj/V+fqcd47RmrzLpGh9fdeG0arafXxjp2eP467+hxY7VlrLrW
Z2t9S133ri8eL+/X+o7yRqPvQgghhJlHLDZ3THyVf5N3lQuk+Ua14PQozVO5
Vzk8uUZzxspbC09tXFN1Tw4es3yw+ZM8PB7x8N4qIYQQQpgxaLJaFymfTOfx
VOi74T3uJ1OO9QJ0Hd+u9nWWd5Q3HHp74akLfSfvK88ud+t6k5uVj+fnxb8L
IYQQZp7aX8+cKfPozC/0bC3qWPm38RC3zXE0T80cwbpnRO3pNhUfMDx5cR2Y
K+A3hevMfFRrOawRMa9yOB8ihBBCCDPGcG4incdbsV6j9qydin9X93Q19846
AmssxPIQiuH8PNeZ602+1ly9qfjFIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQwuziH//4R7vvvvvahRde2I466qi2
zz77tAMPPLCdd9557c4772x///vfZ6jMhx56qF177bXt+OOPb/vuu2/bf//9
23777TdDD/U56aSTenmPP/74bOiFEOYevmN33313/w4eeuih/Tt4xBFH9H97
3fcphBBCmApiyxVXXNFWXXXV9slPfrK9+tWvbgsvvHBbbbXVusZ75JFHZqjM
G264oW2//fbti1/8YnvFK17R3vjGN7Y3vOENU368/vWvb29/+9vbD3/4w7bn
nnu2Bx98cDb0Qghzj0cffbRddNFFbb311msf/ehH2ytf+cq2yCKLtJVXXrl/
Bx977LG5XcUQQgjzGbTYBRdc0JZaaqn23e9+t/3sZz9rG264YTv22GPbzTff
PEP+nc+cf/75vcxPfepTPVbRZz/96U/bT37ykyk9fvzjH7df/epXPfadcMIJ
7eGHH54NvRDC3IMnfeutt3aPerPNNmvf/va32+c+97n+/TnllFO6/gshhBCm
Ai0mD/SnP/2prbPOOu3II49s9957b485M6LtwG+gD7/85S+3X//612277bbr
cerMM89sZ5xxxpQfZ511Vrv00kvb3/72txmuUwjzKvKvHq7te+65p+26667t
97//fVtxxRWj70IIIcwQ5d/Rd+uvv36fLzez8eSBBx5ou+++e3vnO9/Z1lhj
jT5v7v777+/em3l5M/KQJ6YbMxcpPJnxHdl7773bH/7wh+i7EEIIM8xQ38mB
HnfccTOVA1Xe9ddf3zbYYIP2tre9rXt3IYTJ4beMeaZys9F3IYQQZpRZre98
9sQTT2zLLbdc++xnP9sOOuig/np8txCmT/RdCCGEWcFU9F3NEarHWJrN3L0d
d9yxr4sQo04//fTZ3YTZQrV1TF366OOt3XBnO/qwm9pftr6xLbDvJ9tZN81f
+7Zol3y39cjmfNkLx14c9sqRC6926wPXg3F1nL9nZg5k9atzKE+5M1vmvMrw
+zJZou9CCCHMCqbq31l3QROIy2PtnUIniEtf+MIX2rbbbtuuvvrqiSswD2sl
8wjH3G/v/v+3f067qte1HlucNf/F4KuuuqqP0S9+8Yu+j813vvOdPnaugdJ4
NJg5mV5ffvnl2+GHH95uv/32GT5n7fVm/Y3yVlhhhb7v4h133DELWzZvQD+b
dxp9F0II8x7iu/+jzznnnL7Xrr1HzX/ea6+9+r+9PqP7AM8LTE/flc+jjeee
e25v8w477ND3Yb3xxhufcBzouR/96Ed9Hy95WrF8QuYRraT+NI09YdR7jz32
6Hsya88/je1srrO60JbWDB988MH9enPd2Sfas2uPzrryyiu7Hphq7ptesD+h
uZFf+cpX2oc//OE+Xl//+te75jrmmGOm6btbbrmlbbPNNu2tb31re9Ob3tTX
4FgvM6P4Pilziy22aG95y1t6uRtttFGfszmK3xCuTfuG2B/O93Buoj/8trH3
j3kHxoIW813wWu1F7KGd9LNj+Nn0rO+Lvp9ovKLvQghhziDOifHWs73sZS9r
r33ta6ftu+vvJZZYomui+XXf3enpO+/bm8vrf/7zn/t+dtbF2s/OfnRFxT6x
mGZwHB0wXd07j+g79eRLidvf//7327ve9a62+OKLd2/pn3zKEc9x0xMfnKWe
Iz190003tS233LJ95CMf6XtDv/zlL28LLrhg3/v2da97Xd8fbbfddut7xkz1
nh50yCGHHNK+9a1v9TUw9tE1bpdddlnXfTy7yi0qn55/73vf29797ne3TTbZ
pF133XUz3Lba641mfM973tPL3Xzzzft5R1EfdfvmN7/Z99uml+Ymrm97CZlb
6jtA7xqLD33oQ23ZZZftWow+02/0uXtQ8ET9X2GvIL+NXGMTfSei70IIYfZT
ng4fxf/Tz3nOc7rH8Ze//KXHHfv2vv/97+/5Lf7D/OjhTU/f8UzoCPse2//Y
HsX0G++F/qh4pq/4E/J93/jGN/rxPL/pMpu10mShO+oeAjT7H//4x+69XHPN
NQP99P9q2Hseabdc+0C75MoH2gVXPNAuuvrBdsVtj7c7H5p160f0p3lw9v3b
aqut2tJLL9211TOf+czutS2zzDLdE6I16IipUv7Z+973vj6Ou+yyy4Q5edqL
VqEJfRdm5Jyj+L4cdthh/XH55ZePWab7qvzud79rH/zgB7vemRnfcGYov+2S
Sy7pv3F85z/xiU/03LL9f3wvPvCBD3Tvk4+nLTS634W0mn26adR11123f9cm
uh9F9F0IIcx+St/xEXg6PJRNN920/z8v1tB57p31jne8o8di/6/zPk477bTu
A8nx+b9aPk0O5+KLL+7vo+K31+37K346nqaQH3OOigOe/e4/+eST+zHK85C3
k7M7+uijpx1fuTex2PvO75hTTz11zPtRTEbfKUcs23jjjXu5NAdtQGdoa+Wc
xDaviWdybto4Qe/OEa00WWg4faSd7t/Bm9T2J+bSHn6Czzh87HnRrL2H1HC/
WzGeX8q/s++tPZ9da9435jw214brRhuMUeWXtYOWGnp8/DPjw4Ny7fKVRq8L
Y2c8qywP1+hQi5VPRRfzOdVTHtL14kG7ubbqOpBvdb8tZboulWk/bTqu/G/P
vm/aIhf86U9/uvvk1mLbc8f3w2fkptVF++Sqfbdoo2H9nVs5vl933XXXDI+F
dqq7PR15dfSduvET1WOVVVaZdk+xnXfeud12223TxtDntHPJJZeclF6Lvgsh
hNnPqL5zH1Welf/XzQeXq+KryNHQWF4Tc+Ry5dW8LrfmWUzw/zVNJ144TqwW
X+khfoB7vzpWbnPNNdecFpM8i618gpe+9KU9Pyzm0Zv+veiii3Y/hhbgoe20
0049DlUemUcj1yjOlL4sJpOf5cMpV9wSr8RL9wxbbLHF2lprrdXLdJzPfvWr
X+1+kxg8jLcjPdvmpFaaDHSSWMqfoWNLtz6xzo+16y+4Y8w6z66csrE4++yz
+zVirPUt3VXanx6icVwb5tB973vf637Xq171qvbmN7+5jwfNYdx8xpjQQvKd
Cy20UJ//5nqhEeVtKxft94v7mbgWXUfK+/znP9/zqjXvUv/I1bpWXe/yvdZp
VN7SbwA+qN8e4Ge5XpTpulSm480D9NsDnt23mN+lDJ75//7f/7s997nP7cf7
Pn3ta1/r93hwnGvQeWgsv2tKx7qmnZsu9JuD1zmjaKc+9x1Rb30sn+03l++z
7/tLXvKSrvF4eDzf4fj5feUYvx3o8Oi7EEKYu4zqO/FFLOKHiEPyeDUfim/C
M6i1gf6PFn8cb76O2GhOF03os3wMMexpT3ta143K5wfK/4q7YqC1G7STZ/rM
a+JZ5RAXXnjh9qxnPavnTGku8Wbrrbfu8U+OdKWVVupem9hCP37pS1/qdRvm
TWdk/zv5PW1TH/PAxG/15Cmq++qrr941wPh5qLmjlSbCWPPFjIExMp5PnHc3
8PHE2xtvmiN1pt+Mrf1m6Dtj6dqpmM8/4wHT809/+tO7XvvlL3/ZNY2xofHc
I45GpANpNtcizeba8eDjWe9Ms/PCXMN+U9Aitb7WNep3wtprrz1Nv+gf/pU6
Pf/5z28vfvGLe+7eXLQf/OAHfW4fzckfVE9l0kU0omvWfFbH8MJqTp/vkHU8
fDp6SLucWzn0jt8xvlv0lmtVnfmavjfq6/N8V9cinWuOnzZPdx33BNBc/Enf
Ud9332ffGeeTc/V94+P7f0C7+JnD8eNl0muuLfsFZf5dCCHMXUb13Qte8ILu
o8gTydOKZbwz8Yzmo2dqPQb/ii9inhTt9LGPfaw973nP63GXdydGm9P3jGc8
o8eG0o2ezeXhE8iveU1sEQfN0VYen5BOE0sWWGCBHmP4M+pJB77oRS/q8Zqn
IT6LFcqjD+Tl5MOKqeo7fSIG0UL8GhrT/Dx6iO/FXxGD+SiTWtc5B7XSeNSa
Tu2QB+VH8e/G2v9lTtd5MvqOJuOfPfvZz+6azppbHp25YfQ2PWe+AA/YteLf
roehvvMarSSnSoe5Lv6f9u7jV5bifOM4YoVZIG8syxIW/AHeIBbAxlsQILFi
ARuQAINAZJODDZhossk5GzAZLsmYfDE5GAMmB5Mzlxzbv0/59143w8w5cxKc
w32+0ujcO9NdXV1dM/X089Zb7Ri0Hn1m3h+vmRYrfedzXrY+vcoqqzR9o+14
ZTwrdeHliXdXjNg+yqd59HP+d32Oyj11fPc16mQ79zP6qc+V4eV7YO4gDej+
xT0HD0//PuSQQ9p3hq9J1/p+TBf9XZu6Z+KZ77TTTq1N/A64h+LD+x2grf1O
0KeF7xL9rY2cCw9dXxuVExN9F0IIc8+gvlthhRXaOFZexrrrrtu8CPOZ/Ab7
zZb3SKPRYvyJyn382c9+1q200kptfFYe/4G+o8X4I7wAv+3GV+XSbbSZbWk5
GtAYIj7M6zDe0JritLQmT06MmKe23HLLNT+l4lnq6/88G3G5vr8w3edXiOcp
a4MNNmj+EI+Er0HHGvvGZoZaqeapaTseIj1CE00l14Xf47z5XjSBuJ6422zo
O32iXzf/nkq+67j6Tp+h2WgC17e8XOfDx+Jn0WX6Cc3gHPUN+uvkk09eOqdU
Pat+lROtr/HPRuk7MeNf/epXTf/YtuaK+r85B3yr/nxSdb7mmmuaLhvUd32c
B11nO/PX3BcVde/gOm277bZNf7rP8r1yP6S9aF79kp6q/lDfaXrP9ahciMnW
LKl8Y14h3ar91E27Omf3BbxS91euT+FY7n0q95xuq7mdo44VfRdCCHPLoL77
xS9+0X7j6QCxVbpJHq1YpDGR5hFXMtZY98G27vGNf8YaGs/vdl/f0XF0kfgZ
XWVsWn/99btVV121+WC8COPcpptu2sZqY7Jxgm9mbJSnSv8Zl41B9BVPRn35
N+KzyjHWGzeMhzONz8I29KQxjtZVZ/OSjLXG9rGZBX1nXiBd7Bx4KYsWLVo6
n2sc6BFrgGg786joEXHHkePqmHWutWV4Z7QHD8c18t64jKPvnDv/Sv9wDfUZ
15if5T190bXXP+Fv5Vd40VrDqPwJ9dd/R+k7daIt1VH/4c+JQ5pL4B7DnDSe
Xuko2oY3PZm+s8/OO++8VN/53hSlx9zr2N82/HR9kl5138Ev8//+PNDKf+Lv
6SvuxbTXRJpbX6fJ+OXu75yrevmu63s0mGO71/LbIMe4cM76El+Tlnad9LXK
wRgk+i6EEOaeYfmz5mYZM8ReeRO01qmnntpiRbYT//r5z3/e5nX7nfa+scw8
d/HZYfrOuE93GUfEdY0B5jLx6vgeFQs1xtIgvEHl0VZibvQCHUDnyTf85S9/
2eJGjoF6RlLFvfpexXT1nf3oWvrRuMarpPGMtf1xeFJmqO/Uo9ZJM37SxcZe
7VnXcDKM+dqRjyoWyPMx5s9U32lvGoV3o436+mzcuul/4pS0hf31Fder/CjX
vfSd+KC687n6+k7+gb5YutJ1o9Mq91ssddS6u/oCTcq/owX7Wox26es7HpZ8
VcemofRZ+s75u0cp/46GocHdB5kfJ67P9x7EefKG3cvQTWLOg/Dg3BPxCp0L
zea4+qK+OZg77Nx57tpEXzFvT/x0dC7Qf8+TZtPH/Aa4lv5tHob9xPVpaGVq
n/65VG4Gr1sbuo781sE8pyL6LoQQ5p5h+bO8MJrLHJu6Zze2+g03lvt95/PR
X3wRYwBNaBzj3/HyxtV3juV9+tD4YawT+xTv8b4yjFc8FvvSDerJgzLeGZeN
F8bAerbo4Ly46eo7aBu+hrl+6mscpjWm9PyqGeo756MdjIeujxwDY7t61DWc
jHpmljib9dZ4Wzyz78ZnP+2evPetkXm/Xhc/+kX35Hv/q5ty6E1xPfF5MXY6
fLK61XNfxRZpJt6o66oPeF6YNvY5L2wu9J26i2Haln4R41U+30s/c2zakjel
T0+m72izeo6tOXJyetVLHfjM+qC+2q+Hffh26kiH0XG8Qdqoro124tXyXF3/
lVdeuX2n9H+5HIM5PuX3OZef/vSn7S8dONFzVrSFz+Xsagf1lmei3zlP31/z
HGk33nU/9lpz9/i3zoUXWvMbhxF9F0IIc0/pO3pOPFZshlYzfhpfxYGMn9Zu
MGaISbk3Nx7x9vgd4kTGOX/5en63lceTMWbRgjwH+9b8O7EmXp/y+R60nDLc
/3vJgy0PT3yWn6iuxlW+iHHGuEpT0hPmC9nHOESX9ueaz0TfOaaxWpvQn7xF
vtdE67f+/1G7qWqlkSX9X/2Nl86bl2oNYB6c/1cdx0E5roExlZ9kXP22vlPn
JRPW12vHRZ92t7z8v/bh38ol4L2Km2sjfWSiutWadsZ59wDW1jF/cvnll286
mr4w95Ju0P40gz4jv4FWcv/guGLydBcNRZvQirCPdUrMxxTvdxzn2tccdJs8
aOuX2J82/clPftI0FC0pd4e21zf1X/6tutazZOkc9z91/6If02v2q1wEuUUr
rrhi66uuHY+LXqr+qb7yibQZ3aY/88XlN+jzpcnozMqzoNnURX/u5xEVtJf7
I/PkfJ+1ges90Vrc5X/73vLn1cdcO+vdqZO8ePqbTnbu/XYczJ91fhPFgqPv
Qgjh+8Fvq3gLT8fcMmOzccd4yMcQB6W9jEN0X60HZn0IOYnWTjCm0Wq0mHGI
J2IOk7l5ntVqPk7N96K/jAPeFzM0RvFrjJXGL2OLMdfLuM8XqjXRjA3GF/vZ
nwak67xoSWOe7WZT3xm/zB3kT6jHpM+bbRjfpqaVJoN+oMHFprU5H6nqOA7G
3Fr/jl6l9b6tU79qryXvfNa99MzH3RPP/HdN5v7riRc+7V56/+tuSW84dnwa
yDWgJ8yj5CtNVDd1MT+LLnAd7asv0em8UvrI3DL+rL6ofH2G98jr1V95tTQQ
z8i1obfq2tR9gM+86J3BHINaq44Ppq/1j699+XjK1Of1fb6iduNhO7b39Scx
b32ephTjpD/7ZXopU//0mbkI1T9rrT7lVK66/ehJ17dinL6LPFGajf6lP+U9
DPORnSO/T5tY60SM2FyLidbirnahDX1/fL/dW6mP+jtHx+uvv1f4LvHcs/5d
CCHML/y21/Mj6DLjQI2Ffrv5LDSdMdM44zNjs3k/5ibRceJitUawMbaeM6FM
YwL/qZ7n7vfd9vUcUJ4BHcjjMKbTejSfsdI8InmLvCH6s8ZF8VrHN0Z7qYe/
xv3B/M2Z6LtCPe1HV463r/Fy6lpp2LVxPO3NN6IBxMnMjaoc4XH1nWvCWzEG
i3GKk7su/WeTTYXPl7y5tH/w2WgYPk/5axPVrfqcvqJvuXb6Ub1cz+oftqOx
9RnXt95zXekRWsZLn6hzqdir9+3jM8fs10d/VKbj9Y9ffYqutJ/ttJO+XTFj
x/a+61J9Xn/32agy63tSz+WodlCOcuX2Vl927jXXAMp27SrXh/4bzI+pNlVX
3jlNxl/313dqZK70wHWp86p6q49zrPWja7ta58X3nv4Vo8/zK0IIIaA8JWOD
OK48xIojGT94NeJl5gSJD09nja/Z0Hf1jAvj3rh6airQSsOgX2hK3oi8Et6Y
czB+T7UttLV24IPVus2ee0+LTeec6Kyaz6du1mETB+T5TvzctjBV6CoayjXj
7w3z42gkPjNP0n0AvU3L8wEHY6ozpe7TeJnWLuK5i6nrW65/nj8bQgjLNpV/
KR7EpxMTouOMZXJ2aQcxWnFRc6EmygEcxWzou1qDbjbHyHGg78QgxVTN7TdP
nq851fpD3XlSYqI8HRrA/DPx8rHXau5hH3MprZNmrpy1DMUsy6cNM6Oul9iy
XA3z3+ho3ms/V7egkeh+Xrj5qeb62bdivLN5TWo9RrFmczNoTmvH6FvDngHd
J/ouhBCWDWiYxYsXt/lJYk/8Ojm7XnIaStsNzo8fl9nQdz8U6s6nMWaKR/MQ
pzsWVjxN/I6m5guK0YoLTrb+7SgqBqpuys04PXvo7+ay6f/8a7FW9zs03DA9
XnNFa+6EuDktNRdau+51xJH1IfMk3SfwCSe7V4i+CyGEZQe6hcbzuy8n0rw7
fpA53eI94+U0DGch67u5gp6jzcz7qvlg8dzmF3SSeW/mzlm/xXdBnsmo50J8
n9T8O1pNH5qKto++CyGEZYeaG17P3ey/phM77BN9921qbK6Yc3Td/KXW7J6t
78JsMtiHxq1X9F0IIYTZIPouhPlD9F0IIYTZIPouhPlD9F0IIYTZoK/v5Baa
5zf58ydCCHOBvJErrrii5Y1E34UQQpgu9J18UfrOeiCeayDHkI8QnRfC3FPz
a2utbs8N9gw26/NZwyX6LoQQwlSpdX2toex5mp6BZv1/a4pZRyxjSwhzi++Y
tRHFZffZZ5/u17/+dXuutWe+xb8LIYQwHfh31gOz3op1X+v5np4Zaq3geHgh
zC2+Y55zZo0X+s7zhq3XbA1zz0/JdzCEEMJ04A+IC/HxzL+zjpjnknp/vqw3
EcKPFfdYYrPWwrYO8l133dXWabY+8lytwRxCCGHZgZ6znq8x5ft+1lgIyyr9
tfJ893wH6b18B0MIIcwG/bV94xmE8P0x+N3LdzCEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCPON
L774ovvoo4+6t99+u/vkk0/a/999993ugw8+6D799NPum2++mXB/n3/99dft
FX7c1HUep098/vnnrQ/pS5999lnrS++99163ZMmS9tlkZYQQQghhehirH3/8
8e60007rNtlkk+7CCy/sHn744W6bbbbpDjzwwO6mm25qmm8ybPPll19+DzUO
PyS0/zj9wf3CPffc0x1yyCHd9ttv311//fXdNddc0+2www7dMccc0913331N
44UQQghh9vnqq6+6xYsXd7/97W+7VVZZpY3HNN3qq6/ebbjhht25557bffjh
h9/ah+9iP97ME0880d1+++3t9dJLL43l7cwnnMf777/fPfbYY93f//73pedy
5513dg899FD3xhtvNO9pqtjnlVdeaWXcdtttrUzt/M9//rO1m+NOl48//rh7
8cUXm3565JFHuldffXVa5blOXvw0Gt8533HHHe2l3v/+97+b51bb+vezzz7b
3Xrrre187ONchul6bXr11Vd3G220UbfGGmt0Z5xxRnf88cd3a665Zrfllls2
vVdlhxBCCGF2ocfuuuuubrfddutWXXXV7tBDD+1uueWWpfrunHPO+Y6+A41B
E5111lndvvvu2x199NHdvffe2zyZhRSnpYuef/75dp4HHXRQt+eee7bXrrvu
2h122GFNm9F441La9/XXX+9uuOGG7qijjup23333Vqa/xx13XPePf/yjaaqp
UDFw1+Lpp5/uLrnkklbm4Ycf3q7XdDSoMl3HRx99tDvppJNaH9hrr73ay7lf
ddVVTePBscVZaT+f7bPPPt3pp5/e/etf/2plDELfXXvttd3GG2/cNN2ZZ57Z
jrHWWmt1v/nNb7rrrrsu+i6EEEKYI4zbxnc6YbXVVmv6g05bZ5112tgsbjtM
35mrx4OhMxYtWtS0nvF/IWk70Dhiic8991zzo/hhfDHn/fvf/747+eST27nV
tpPh/Hlad999d9O8l156affggw82DX3KKac0XcTHovHowHG9TtvRmX/729+6
Y489tttpp526rbbaqjvggAO6G2+8cVr6ju/mnNWLrj/77LPbud98883dqaee
2nTcX//61+6tt95q29LurrvzueCCC5onx8t78803v1O2NnXOYrNrr712d/HF
F3fnn39+t95667V68/ai70IIIYS5oXSDeNsf//jH5s/wbOga3pyY3aB2qH1o
Fx6NmONCn0vV11m0Cc1K39E9999//3e2GQV9Z39xa2U89dRTTcfx6+imgw8+
uNt7773bv/le4+hhxzXnjfakxWhwcXQaT3k02FT1XXmMrp/zpGfNuyx/kNbj
53mf/jfvruDN8Qx5njT+a6+99p3y9Qfx+ssvv7z5dsoW89WvaEP6dqH3mRBC
CGE+Q2MYa43tFV+lPbyG5TmWvuPdibPxtxZybkXFPvlJ2oBeueKKK7o//OEP
LReArqrtxinLS3sor9qF/qJvaB3xT+02rt9pG5qK9ub90Vb0IV1G503Hv1O3
0os8RTqPTye/9YEHHmj13HnnnVv5jtf32viTfLvSd+b/DWsHGtJ+9K528NKn
Kkd7Ic3TDCGEEJYFxOl4M8b3hazvSovJhaDp6Bl5wzSY+Op05soNg6ahyfiB
YqpyLcZdI6TWGtHm4si0tRj6fvvtN219R3PxbI844ohWjvqIs/Iq//znP7f3
999//zYn0Tw8bVB1pe/Kv3PsqcxPDCGEEML8wxhvfOf9iLWJ0ZrDtdD1He3E
kxKXlAvwpz/9qXlY5rvJv6Cfpus38azEsOUj0I7WoJGHWscfp479F0/MPLmZ
6LuKF5tjJz+Gf0czXnnllW1u3EUXXdQ0nvpedtll7ZqX18jjpAe1lVir+C39
Gj8uhBBCWJiIuZmf9Ze//KV5XOedd17LoZyv+o4mEQuksXhWdFA/JlqayXs+
o1NoGbFUOk8M1LptYpeVDzFYJm9t1PokPnvmmWdabgGtRDfyO8sT7B/ftsqr
eo4q02eT6bvJyqTReHDyauT1itO6pmLurqf5cvxLdebTapPSb9pI+5ifaX/t
Y67dTNZ8CSGEEMIPB71gbVo6xVq1Ynlim/NR35XXSIvwmeSEyhcZlu/Zhy6i
V3iTu+yyS9OwPLzKMTAXzhw1Zco/kCfK/xtEm9By1hCkxfhdfE/aqq8xa36d
2Khj8fmsxffOO+8Mrd84+k6Z5tLx5BxfrqucXnP+QJv6zHWUp8HH4+FZV0/9
nJ/YrPLF4PtrGpdmdf7WaNGu4tj9HIwQQgghLBxoFrFFno25ZOas0UKjxvbK
xRCfpIPoBhpimB6kIcwvox9tK+5LowxCu8j9FBe0nfU6hpVZxxZvNJdsxx13
bDrnySefXPr5MJRvG/PL6DvxSTkX5d/5tzgmfUUb8bHonX6ZNNALL7zQPDEa
6cQTT2z6bdizHxyPRuaT/e53v2t5DY49WGahrWkz5+QaWI96sP2V+fLLL7e6
i7/2dWrVT24v7Wdta7FYbUkn8ipdX/vRbjRpP9fVOWh7+k7+iVwROdfx70II
IYSFCx1FO5ijxfOZaP5daZETTjih6QieEO0wuPZZPydX/oFtxQzFCgehNfhX
1gmhW6wRQmMMaqfSYjQO3WTdNVqrv95JP3dYzNRfXpy5abSLHFqeX+mb0mLq
Sf9svfXWzfviERZ0jnNRJ/s7Ng+MtqrjOP/SQ8qkj2hBuazKFPfs5+3266l+
1l0WO3bu2tN7tFnpPNvTvK6R9Vg8b+7II49suqzqaB/en/amP82pkwurbc2t
FJu19ort+n4jT9TxadCKzVY9QwghhLBwEeMUv5xsfRR6gz7iM22++eZtrpe1
bodpMdqCZqDtNttss2/pkT50jLVCaLUtttii22OPPZqGG3yOQuWd8sFoxe22
267pLXoTNAutxf+jFWkl+rPyZ3latE4/9qpMx+d9yb9Qpn1KM/bXN6a/PKtB
HZ135aN6pgW9RyP310+hZelgZWov9UI9Q63iqepnbTrletYXv48erFyX0nja
2P+tqaJM6xv2NWOtUcffdO7KpPXoQfXkUfIgB9dh7ufPjlr/LoQQQggLi77X
ZnynIUat40YbiOfygeQY0Ay8rmHxXLqBhqHVbMtDG7a2Gk1Es/GexAit3yEf
YNR6ubSoGCodROuIFaPWIhaLdS7mx3nRLXV8umow7uj8xYfFemlR3pc2qDJ5
bLQaP055jl1l+7c5i3SjevXbzbmKhyqTf2aN5GpDZdLRVWa/3CpT/u9gnJov
SNvyOZXdj03Xusl8RT6sfBLlidnS7dpY+wxCE9f6d7Ybdo1CCCGEsPCg78wX
4/3wrmizUfOvvE97iUnyqeiPYbE879F9trGtfw/TjbV27kRlVlnqRSfRNubL
9Z+p2i9LOYOvwfXpyvNSJq1Fg/G7xCjFbAfLrPMY9qpzqzLpyHoOLH/Osy9K
Nw2umTzqVXm8de7mLvLreIL8OBqOLq0y62/Ffmm9YWUN1sG192xdutLfKjOE
EEIIC5t6/qxYo7ij2CC/p3TADw19QtvwosQe6TsxRZppOs9qRT2Dgm8lNix3
lo8lPjndZ23RUuKwtJJ68gStOzyTMuk0mpsfp57+imfTYdMts+LOdC1v0zU3
79D5j8rzDSGEEMLCoeJ6fDH+He3EyxP7K0/qh6Yfw5VjIDeUvpnJOi48MWv/
8azMIbSGCS9rJmXSW9qNVhYjNm9P3HYmuag0o/iw2KkyxbxnWmbFnStGTDPy
QrXx4LzHEEIIISxMKgYpBmj+lnGffhqci/9D149+qrzSmdZrsEy6bpznx061
zLmo52xck4rNutbWsbGW3myVHUIIIYT5Qz33gYczar5c+PHgGvefAxJtF0II
Ifw46c+5y3j/4yfXO4QQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII4cfLfwDQgY7C
     "], {{0, 534}, {632, 
     0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{277.63636363636294`, Automatic},
   ImageSizeRaw->{632, 534},
   PlotRange->{{0, 632}, {0, 534}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnb9LXEkcwOOvRGIRm5AqgauTKiAcQopDUhwkTc4jdcKp2OTEHByCnWAn
dpLm+kC6pJNUgTSClf4DWgUbLQxqft6+gUl2nr7n/PrOzvN9PjD3uNvdmc/O
vo/hNs/dX57+/Wi6/9KlS8+HO/949OTf3+bnnyz8Mdr5lz+fPZ+deTb11+/P
/pmamZr/9elA5z/+1xmbnTHYGdPT098ZDIbdKCiO3759+w4A1Xz58oVmAByg
GQA3qprRx8+fPxv3//r1qzpevXr1e+d/gX6MgYEBdTw4OEhoX8/R0ZE6jo+P
K7f+/v4fvsPDw+r49u1bdZ9iH3rN8fGxOi4sLCi3y5cvG8fFxUXjfr1G79n6
+rqxp3qf7927p27Xr0Mu7O/vK7/BwUHjHB4ZGVG363Nc8+nTJ3XUTdAMzfhC
MzTTa2gmDTRTDc3IQjM002toJg00Uw3NyEIzNNNraCYN0s2U59X78fHjR2Ne
vX/Xrl0z7j80NKSOe3t7Qjvw8xy6e/eu4ahfw/fv36vbu/dCv44TExNG8/ox
b968MZ6XhO/c3JzRxJUrV9RxeXlZ3X5ycmIcl5aWjPt1P3Z+ft6YOyZ6D16/
fm3skd6z+/fvq9v1nup9fvfu3ZktjY2NGfePiT5vP3z4YJx/3WN0dFTdp/zn
weHh4amfrXqO7rlphmbOg2ZopoBm7KEZmimgGXtohmYKaMYemqGZApqxh2bc
minP64p+n+769eun3PXrvbu7a6xZhT4fbt++rR7X19dnnEObm5vq9vJ7hS7o
1/HBgwdntvTq1St1u82+aN+ZmRnj9dO+q6ur6nbdhA/6sSsrK8bceq3Z2VnD
pQr9fF6+fGk83+49ePjwobqP77muX5eNjY1Ta+jX8s6dO1a++lzZ2dkxziU9
z40bN9Tt+vwLIfTvZ3zXoxmaoRm39WiGZmjGbT2aoRmacVuPZmiGZtzWoxma
aUszku8169f75s2bxvOtGvp82N7eNhxTvNes7z85OaluL+9Lne+LFy+MvU/x
XrNea21t7dRjzhr6+Tx+/Nh4vt17IPles34tt7a2rHz1uXLr1i1jj3J4r5lm
aIZmaKb79aIZmtHQDM0U0AzN0AzN0AzN0MzFaib0veY6YjWTgpjNpCBmMymI
1YwEqf9+pg6akYNm4kEzftCMLDRjB83IQTPxoBk/aEYWmrGDZuSgmXjQjB80
IwvNnF7vrOuaY40U1zVL+Epe1xxzpLiuOdbI4bpmmqEZmqGZOmiGZsrQTD00
QzNlaKYemqGZMjRTD83QTJnUv9tcN2J9HkDV8Lmu+by5YnwewHktuVzXXDVi
fh7AeS3ZXtdsc66Hfh6Azcj9dwFohmZohmbO2u86X5qhGZqhGZqhGZqhGZqh
GZq5eM1Ij5jNpBgxm0kxYjaTctBM9aAZ2UEzNNNrX5pJM2imetCM7KAZmum1
L82kGTRTPWhGdtAM39vc/Ri+t/knfG8zzRTQjD00QzMFNGMPzdBMAc3YQzM0
U0Az9tAMzRTQjD00QzMFNGMPzaT9/hm+65zvOte05bvOaYZmaIZm6qAZmilD
M/XQDM2UoZl6aIZmytBMPTRDM2VSfyYg33XOd5237bvOaYZmaIZmul8vmqEZ
Dc3QTAHN0AzN0AzN0AzNXIxmAOBsaAbADZoBcKPcDIPBsBsA4E6vu2UwmjR0
MwBwPjQD4AbNALhBMwBu+DZTdV1DruArS5N8667LsYFm8gRfOWjGDnxlaZIv
zdiBryxN8qUZO/CVpUm+NGMHvrI0yZdm7MBXlib5SjZTN7frSAG++KbwpRl8
8aUZfPGV9KUZfPGlGXzxlfSlGXzxTdNMTP8UexFrDR/wzcs3FJpxW8MHfPPy
DYVm3NbwAd+8fEOhGbc1fMA3L99QaMZtDR/wzcs3FJpxW8MHfPPyDSX2NZq9
HPjia+MbOhfN4Ns239C5aAbftvmGzkUz+LbNN3QumsG3bb6hc9EMvm3zDZ2L
323OE3zl8P25oKGZPMFXDpqxA19ZmuRLM3bgK0uTfGnGDnxlaZIvzdiBryxN
8qUZO/CVpUm+ks3Uze06UoAvvil8aQZffGkGX3wlfWkGX3xpBl98JX1pBl98
0zQT0z/FXsRawwd88/INhWbc1vAB37x8Q6EZtzV8wDcv31Boxm0NH/DNyzcU
mnFbwwd88/INhWbc1vAB37x8Q+HzAPBtm2/oXDSDb9t8Q+eiGXzb5hs6F83g
2zbf0LloBt+2+YbORTP4ts03dC6awbdtvqFz8XkAeYKvHL4/FzQ0kyf4ykEz
duArS5N8acYOfGVpki/N2IGvLE3ypRk78JWlSb6SzdTN7TpSgC++KXxpBl98
aQZffCV9aQZffGkGX3wlfWkGX3zTNBPTP8VexFrDB3zz8g2FZtzW8AHfvHxD
oRm3NXzANy/fUGjGbQ0f8M3LNxSacVvDB3zz8g2FZtzW8AHfvHxD8b1GE6Ct
0AyAGzQD4EZ3MwwG4/wBAH78DxQC6Vk=
     "], {{0, 157}, {205, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{279.25, Automatic},
   ImageSizeRaw->{205, 157},
   PlotRange->{{0, 205}, {0, 157}}]}]], "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Image: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{20, 0}, {0, 0}},
 CellChangeTimes->{
  3.7367046498340807`*^9, {3.736882273548814*^9, 3.736882273937325*^9}, {
   3.736882678983438*^9, 3.736882681164237*^9}, {3.7402270425937567`*^9, 
   3.7402270774935427`*^9}, {3.7402279006219015`*^9, 
   3.7402279016557302`*^9}},ExpressionUUID->"32f16ef4-646e-45ed-a15a-\
a912cfc9ecd6"],

Cell["\<\
I have extended most of the basic Mathematica functions for lists to infinite \
lists through symbolic manipulation, though partial explicit numerical \
results can be obtained.
Two non trivial applications of this results are the capacity to define \
infinite graphs, and to work with Cellular Automata with an infinite initial \
condition.\
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Summary \nof Results: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{5, 0}, {0, 0}},
 CellChangeTimes->{3.7368810316239147`*^9, 
  3.7402270997047014`*^9},ExpressionUUID->"ba2205bf-d701-4ef5-aa12-\
c7a7f1002441"],

Cell["\<\
It is still pendant to extend other Mathematica functions for finite lists to \
work with this project\[CloseCurlyQuote]s approach for infinite lists in an \
optimal way. Also, an implementation could be explored for systems that in \
principle accept infinite initial conditions.\
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Future \nwork: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{20, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536768881929*^9, {3.7367072121682987`*^9, 3.736707214173369*^9}, 
   3.740227105498351*^9, {3.740227956209984*^9, 
   3.740227970317952*^9}},ExpressionUUID->"e44105f6-e95a-4d28-9e4d-\
8a40b3d4e596"],

Cell[BoxData[""], "Input",
 CellOpen->False,ExpressionUUID->"4a721f19-623c-47ad-bb58-c6de867557f0"],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": Everything above this bar is your poster.Make sure it fits on a single \
page. ",
 Cell[BoxData[
  ButtonBox["\<\"Preview Poster\"\>",
   Appearance->Automatic,
   ButtonFunction:>With[{$CellContext`authorInfo = NotebookImport[
        EvaluationNotebook[], "TemplateAuthorInfo"], $CellContext`content = 
      NotebookImport[
        EvaluationNotebook[], "TemplateEditableContent"]}, 
     CreateDocument[
      Notebook[{
        Cell[
         Part[$CellContext`content, 1], "Title", FontColor -> 
         RGBColor[
          0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         TextAlignment -> Center], 
        Cell[
         TextData[{
           Part[$CellContext`authorInfo, 1], " (", 
           StyleBox["Mentor", Bold], ": ", 
           Part[$CellContext`authorInfo, 2], ")"}], "Text", TextAlignment -> 
         Center], 
        Cell[
         Part[$CellContext`authorInfo, 3], "Text", TextAlignment -> Center], 
        Cell[
         Part[$CellContext`content, 3], TextAlignment -> Center], 
        Cell[
         TextData[
          StyleBox["Goal", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 2], "Text"], 
        Cell[
         TextData[
          StyleBox["Summary of Results", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 4], "Text"], 
        Cell[
         TextData[
          StyleBox["Future Work", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 5], "Text"]}, WindowSize -> {550, 650}, 
       ScreenStyleEnvironment -> "Printout", ShowPageBreaks -> True, 
       PrintingOptions -> {"PaperOrientation" -> "Portrait"}, 
       WindowFrameElements -> {"CloseBox"}]]],
   Evaluator->Automatic,
   Method->"Queued"]],ExpressionUUID->"2f09c4c1-886c-4a07-bdd0-f7e9c2bd843a"]
}], "TemplateDivider",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.7401549957986803`*^9},ExpressionUUID->"3dd6c29c-0c7c-4de9-8e57-\
c12593f67d71"]
}, Open  ]],

Cell[CellGroupData[{

Cell["End of School Presentation Content", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188003855814*^9},
 CellTags->
  "PresentationContent",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-\
57044e03e425"],

Cell[TextData[{
 Cell["\<\
In addition to the poster content, include other content to present at the 2 \
minute presentation for end of school. Use the buttons below to add more \
sections.\
\>", "Text",ExpressionUUID->"36bb9e60-8d73-47a8-8a18-581b097aa5c4"],
 Cell[BoxData[
  TemplateBox[{ButtonBox["\"Add Header\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], 
       Cell["Section Header", "TemplateEditableHeader"]], Appearance -> 
     Automatic, Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
    "\"Add Text\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], {
        Cell[
        "Type text here", "TemplateEditableContent", 
         CellMargins -> {{65, 20}, {10, 10}}, ShowCellBracket -> True]}], 
     Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"],
    ButtonBox["\"Add Code or Image\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], 
       Cell[
        ExpressionCell[123], "TemplateEditableInput", 
        CellMargins -> {{65, 20}, {10, 10}}, ShowCellBracket -> True]], 
     Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
   "RowDefault"]],ExpressionUUID->"6fd17dbc-b056-4736-99ad-b691cb8932d7"]
}], "TemplateInstructions",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.738720159560079*^9},ExpressionUUID->"a415c0fc-f692-474a-a3a1-\
95fb4df9ef20"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Basic Operations with Infinite Lists",
 FontWeight->"Bold"]], "TemplateEditableHeader",
 CellChangeTimes->{
  3.7402271482581234`*^9},ExpressionUUID->"a82eb68b-c55f-495d-ac5a-\
d97167784e73"],

Cell["\<\
Many of the basic operations on lists now have a version for infinite lists!\
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{
  3.7402271819426374`*^9},ExpressionUUID->"c93624b0-8e9f-452c-9c74-\
674d9e990fed"],

Cell["\<\
First, I define the infinite list of the cubes of the integers\
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740227201598732*^9, 3.74022720285209*^9}, 
   3.740231321211056*^9},ExpressionUUID->"0873015d-c800-452b-9f9c-\
6cf07209b9ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cubes", "=", 
    RowBox[{"InfiniteList", "[", 
     RowBox[{"0", ",", 
      RowBox[{"x", "\[Function]", 
       RowBox[{"x", "^", "3"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "showing", " ", "the", " ", "first", " ", "five", " ", "element", " ", 
    "on", " ", "both", " ", "sides"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"InfinitePrint", "[", "cubes", "]"}]}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7402272407523937`*^9, 3.740227245130026*^9}, {
  3.74023036186252*^9, 3.7402303684369054`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"168282be-eb8e-4cf5-9e98-fe245b8338a1"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{"...", ",", 
    RowBox[{"-", "125"}], ",", 
    RowBox[{"-", "64"}], ",", 
    RowBox[{"-", "27"}], ",", 
    RowBox[{"-", "8"}], ",", 
    RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "8", ",", "27", ",", "64", 
    ",", "125", ",", "..."}], "}"}],
  FontWeight->"Bold"]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7402272407523937`*^9, 3.740227245130026*^9}, 
   3.7402275024054427`*^9, 3.7402303775582533`*^9, {3.7402308153863544`*^9, 
   3.7402308190499587`*^9}, 3.740232893130685*^9, {3.7402329415161858`*^9, 
   3.7402329440833893`*^9}},ExpressionUUID->"10563911-b174-41fe-bd01-\
4afdf1d8d713"],

Cell["One can reverse this list, or drop all the negative cubes.", \
"TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 
  10}},ExpressionUUID->"77113ce2-61a2-4a2a-80d4-255780d6b178"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InfiniteReverse", "[", "cubes", "]"}], "//", 
  "InfinitePrint"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InfiniteDrop", "[", 
   RowBox[{"cubes", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "Infinity"}], ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "]"}], "//", 
  "InfinitePrint"}]}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740230385424261*^9, 3.740230395436391*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"65c93228-96bd-4cee-bb89-90350180a825"],

Cell[BoxData[{
 StyleBox[
  RowBox[{"{", 
   RowBox[{
   "...", ",", "125", ",", "64", ",", "27", ",", "8", ",", "1", ",", "0", ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "8"}], ",", 
    RowBox[{"-", "27"}], ",", 
    RowBox[{"-", "64"}], ",", 
    RowBox[{"-", "125"}], ",", "..."}], "}"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "8", ",", "27", ",", "64", ",", "125", ",", "..."}], 
   "}"}],
  FontWeight->"Bold"]}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{
  3.740227454774994*^9, {3.74023049667986*^9, 3.7402305059577417`*^9}, {
   3.7402308244828634`*^9, 
   3.7402308304835167`*^9}},ExpressionUUID->"322919dc-8e37-41ba-a71c-\
7d29f2f43250"],

Cell["\<\
Here, I make the range from 1 to infinity, and select all the primes:\
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7402273726129065`*^9, 
  3.740227376905285*^9}},ExpressionUUID->"810da60d-638d-4129-996c-\
be981ac3fe28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InfiniteSelect", "[", " ", 
   RowBox[{
    RowBox[{"InfiniteRange", "[", 
     RowBox[{"1", ",", "Infinity"}], "]"}], ",", "PrimeQ"}], "]"}], " ", "//",
   "InfinitePrint"}]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7402305155569468`*^9, 3.740230518595481*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"38551ab4-7ace-4b2f-a9a9-a07f658b0c0c"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "..."}], "}"}],
  FontWeight->"Bold"]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{
  3.7402274835361977`*^9, 3.740230523290062*^9, {3.7402308339080334`*^9, 
   3.7402308350166764`*^9}},ExpressionUUID->"8c1e3270-3c04-47c5-b7a8-\
0cad730c19fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Matrices and graphs",
 FontWeight->"Bold"]], "TemplateEditableHeader",
 CellChangeTimes->{
  3.740227154749295*^9},ExpressionUUID->"d81a2f92-5f84-4614-aee9-\
dcb6b7eeac79"],

Cell["\<\
With the help of infinite lists, it is possible to work with matrices, which \
are nested infinite lists.\
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 
  10}},ExpressionUUID->"9d8b740a-384d-45c7-a651-60fa5fc4eeed"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"myInfiniteMatrix", "=", "\[IndentingNewLine]", 
    RowBox[{"InfiniteMatrix", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}], "\[Function]", 
      RowBox[{"\"\<[row \>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<,col \>\"", "<>", 
       RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<]\>\""}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Take", " ", "the", " ", "first", " ", "rows", " ", "and", " ", 
    "columns"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InfiniteTake", "[", 
   RowBox[{"myInfiniteMatrix", ",", "2", ",", "3"}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InfiniteTake", "[", 
   RowBox[{"myInfiniteMatrix", ",", "4", ",", "4"}], "]"}], "//", 
  "MatrixForm"}]}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellLabel->"In[4]:=",ExpressionUUID->"61001d85-00cf-4dfd-817c-055db2dc7652"],

Cell[BoxData[{
 RowBox[{
  TagBox[
   RowBox[{"\[IndentingNewLine]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\"\<[row 1,col 1]\>\"", "\"\<[row 1,col 2]\>\"", 
        "\"\<[row 1,col 3]\>\""},
       {"\"\<[row 2,col 1]\>\"", "\"\<[row 2,col 2]\>\"", 
        "\"\<[row 2,col 3]\>\""}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 

 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\"\<[row 1,col 1]\>\"", "\"\<[row 1,col 2]\>\"", 
      "\"\<[row 1,col 3]\>\"", "\"\<[row 1,col 4]\>\""},
     {"\"\<[row 2,col 1]\>\"", "\"\<[row 2,col 2]\>\"", 
      "\"\<[row 2,col 3]\>\"", "\"\<[row 2,col 4]\>\""},
     {"\"\<[row 3,col 1]\>\"", "\"\<[row 3,col 2]\>\"", 
      "\"\<[row 3,col 3]\>\"", "\"\<[row 3,col 4]\>\""},
     {"\"\<[row 4,col 1]\>\"", "\"\<[row 4,col 2]\>\"", 
      "\"\<[row 4,col 3]\>\"", "\"\<[row 4,col 4]\>\""}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{
  3.740227515843341*^9, {3.7402305388951344`*^9, 3.740230543503194*^9}, {
   3.740233091672254*^9, 
   3.740233092900215*^9}},ExpressionUUID->"9541e6c4-1d69-4df6-8b3b-\
e8c2276b7c20"],

Cell["\<\
Infinite matrices allow us to work with infinite graphs!
We can consider the graph with vertices the natural numbers, and where every \
number is connected its divisors\
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 
  10}},ExpressionUUID->"ae89b08c-08e5-429a-9666-be9672c6d839"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myGraphMatrix", "=", 
   RowBox[{"InfiniteMatrix", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "\[Function]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "\[Equal]", "0"}], ",", "1", ",", 
       "0"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"GraphPlot", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{"myGraphMatrix", ",", "n", ",", "n"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
     RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "4", ",", "9"}], "}"}]}], 
  "]"}]}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellLabel->"In[40]:=",ExpressionUUID->"1ee13e03-5bf6-4655-a299-ab974070e0ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{1.1141060919809997`, 0.42373938770793124`}, {
      2.031093212295816, 0.}, {0., 0.42364103879064774`}, {2.031481386203642, 
      0.8470830608194897}}, {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.03365789097068841, 0.7}}], 
        ArrowBox[{2, 1}], ArrowBox[{3, 1}], ArrowBox[{4, 1}], 
        ArrowBox[{4, 2}]}, {InsetBox[
         FrameBox["1",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["2",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["3",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["4",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{1.1141060919809997`, 0.42373938770793124`}, {
       2.031093212295816, 0.}, {0., 0.42364103879064774`}, {2.031481386203642,
        0.8470830608194897}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{0.7371789453155361, 0.8059778623701405}, {
      1.6800871361765972`, 0.43232437440949273`}, {0.0006249958503357078, 
      0.}, {1.6800704750705713`, 1.1796403948693213`}, {0., 
      1.611343010753724}}, {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.03591505553075059, 0.7}}], 
        ArrowBox[{2, 1}], ArrowBox[{3, 1}], ArrowBox[{4, 1}], 
        ArrowBox[{4, 2}], ArrowBox[{5, 1}]}, {InsetBox[
         FrameBox["1",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["2",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["3",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["4",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["5",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{0.7371789453155361, 0.8059778623701405}, {
       1.6800871361765972`, 0.43232437440949273`}, {0.0006249958503357078, 
       0.}, {1.6800704750705713`, 1.1796403948693213`}, {0., 
       1.611343010753724}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{1.2024578072617547`, 1.0639745057278236`}, {
      2.044911970706236, 1.5354853538633957`}, {1.4836721333413125`, 0.}, {
      1.4499910344990816`, 2.1353839779329107`}, {0., 1.0464800647172359`}, {
      2.0595012804263666`, 0.6188721449341319}}, {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.033056459260506876`, 0.7}}], 
        ArrowBox[{2, 1}], ArrowBox[{3, 1}], ArrowBox[{4, 1}], 
        ArrowBox[{4, 2}], ArrowBox[{5, 1}], ArrowBox[{6, 1}], 
        ArrowBox[{6, 2}], ArrowBox[{6, 3}]}, {InsetBox[
         FrameBox["1",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["2",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["3",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["4",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["5",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["6",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{1.2024578072617547`, 1.0639745057278236`}, {
       2.044911970706236, 1.5354853538633957`}, {1.4836721333413125`, 0.}, {
       1.4499910344990816`, 2.1353839779329107`}, {0., 1.0464800647172359`}, {
       2.0595012804263666`, 0.6188721449341319}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{0.914444406939332, 1.005227665316271}, {
      0.002318550942209008, 1.4149359954555878`}, {0.4663348675311936, 0.}, {
      0.47097617423765425`, 2.011740859886916}, {1.8953528265412032`, 
      1.6510884581093825`}, {0., 0.5986720617684426}, {1.8935758737056076`, 
      0.35588091184022475`}}, {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.03377530980740994, 0.7}}], 
        ArrowBox[{2, 1}], ArrowBox[{3, 1}], ArrowBox[{4, 1}], 
        ArrowBox[{4, 2}], ArrowBox[{5, 1}], ArrowBox[{6, 1}], 
        ArrowBox[{6, 2}], ArrowBox[{6, 3}], ArrowBox[{7, 1}]}, {InsetBox[
         FrameBox["1",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["2",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["3",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["4",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["5",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["6",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["7",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{0.914444406939332, 1.005227665316271}, {
       0.002318550942209008, 1.4149359954555878`}, {0.4663348675311936, 0.}, {
       0.47097617423765425`, 2.011740859886916}, {1.8953528265412032`, 
       1.6510884581093825`}, {0., 0.5986720617684426}, {1.8935758737056076`, 
       0.35588091184022475`}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{1.2461602493246229`, 1.1006864582507632`}, {
      2.10154016751119, 0.7983685602949333}, {0.8098272677820844, 0.}, {
      2.0285227788006486`, 1.7109470376282943`}, {0., 1.1591516282050631`}, {
      1.5641282678833572`, 0.10526761815971308`}, {0.6649169455423511, 
      2.2109868244916733`}, {2.4873987615037394`, 1.3348659405815544`}}, {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.031206243187828633`, 0.7}}], 
        ArrowBox[{2, 1}], ArrowBox[{3, 1}], ArrowBox[{4, 1}], 
        ArrowBox[{4, 2}], ArrowBox[{5, 1}], ArrowBox[{6, 1}], 
        ArrowBox[{6, 2}], ArrowBox[{6, 3}], ArrowBox[{7, 1}], 
        ArrowBox[{8, 1}], ArrowBox[{8, 2}], ArrowBox[{8, 4}]}, {InsetBox[
         FrameBox["1",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["2",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["3",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["4",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["5",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["6",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["7",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["8",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{1.2461602493246229`, 1.1006864582507632`}, {
       2.10154016751119, 0.7983685602949333}, {0.8098272677820844, 0.}, {
       2.0285227788006486`, 1.7109470376282943`}, {0., 1.1591516282050631`}, {
       1.5641282678833572`, 0.10526761815971308`}, {0.6649169455423511, 
       2.2109868244916733`}, {2.4873987615037394`, 1.3348659405815544`}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{1.115944899642637, 1.0510000885747637`}, {
      1.9321212518713067`, 0.5477098460360061}, {0.518387577677496, 
      0.09303997750096216}, {2.0713627099062633`, 1.4122820886387804`}, {
      0.12919499349845265`, 1.83241463925389}, {1.2953093123359338`, 0.}, {
      1.1269528742337256`, 2.316416686224585}, {2.405615939405802, 
      0.960644606437543}, {0., 0.5893844090336053}}, {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.03161227493948683, 0.7}}], 
        ArrowBox[{2, 1}], ArrowBox[{3, 1}], ArrowBox[{4, 1}], 
        ArrowBox[{4, 2}], ArrowBox[{5, 1}], ArrowBox[{6, 1}], 
        ArrowBox[{6, 2}], ArrowBox[{6, 3}], ArrowBox[{7, 1}], 
        ArrowBox[{8, 1}], ArrowBox[{8, 2}], ArrowBox[{8, 4}], 
        ArrowBox[{9, 1}], ArrowBox[{9, 3}]}, {InsetBox[
         FrameBox["1",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["2",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["3",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["4",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["5",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["6",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["7",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["8",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8], InsetBox[
         FrameBox["9",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 9]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{1.115944899642637, 1.0510000885747637`}, {
       1.9321212518713067`, 0.5477098460360061}, {0.518387577677496, 
       0.09303997750096216}, {2.0713627099062633`, 1.4122820886387804`}, {
       0.12919499349845265`, 1.83241463925389}, {1.2953093123359338`, 0.}, {
       1.1269528742337256`, 2.316416686224585}, {2.405615939405802, 
       0.960644606437543}, {0., 0.5893844090336053}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]]}], "}"}]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7387205132977057`*^9, 3.7387205369163227`*^9}, {
  3.738720567351904*^9, 3.738720567939702*^9}, {3.738720735157468*^9, 
  3.738720735688446*^9}, {3.74022763626758*^9, 
  3.7402276499769545`*^9}},ExpressionUUID->"20197eb1-0a2c-4e3a-a068-\
01939f0a01f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Applications to Cellular Automata",
 FontWeight->"Bold"]], "TemplateEditableHeader",
 CellChangeTimes->{
  3.7402271621850815`*^9},ExpressionUUID->"37dac56d-c7b7-42f4-a213-\
8f585c953197"],

Cell["\<\
A neat application is that now we can have Cellular Automata that admit \
infinite initial conditions!
For example, rule 90 gives interesting results:\
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{
  3.7402277194028215`*^9},ExpressionUUID->"c104e2eb-d293-4a31-baa8-\
d271773768ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Initial", " ", "condition", " ", "with", " ", "a", " ", "black", " ", 
    "cell", " ", "every", " ", "7", " ", "cells"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"myInitialCondition", "=", 
     RowBox[{"InfiniteList", "[", 
      RowBox[{"0", ",", 
       RowBox[{"x", "\[Function]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"x", ",", "7"}], "]"}], "\[Equal]", "0"}], ",", "1", ",", 
          "0"}], "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "With", " ", "a", " ", "widht", " ", "of", " ", "40", " ", "cells", " ", 
      "to", " ", "either", " ", "side"}], ",", " ", 
     RowBox[{"plot", " ", "the", " ", "first", " ", "10", " ", "steps"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"InfiniteCellularAutomatonPlot1", "[", 
    RowBox[{"90", ",", "myInitialCondition", ",", "40", ",", "10"}], 
    "]"}]}]}]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellLabel->"In[4]:=",ExpressionUUID->"0c0448dd-fd6c-44e7-9540-b45524662c69"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGDgBuJAIGYEIUaqUiBEXQpsNvUoBoi/qUgxQgKSahTYTEYq
UmAWIxWpkZdsIF6nIgUASOsEAQ==
   "], {{0, 0}, {81, 11}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{607.2727272727263, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740230911199338*^9, 
  3.740230920008936*^9}},ExpressionUUID->"4243a26b-c3c1-40a4-b481-\
6c97bbdbdd11"],

Cell["\<\
Or we can see rule 90 where only the cells in prime number position are black:\
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740231077552297*^9, 
  3.7402311129859686`*^9}},ExpressionUUID->"0a0b2f20-0156-43fa-bd76-\
894e17e6e46f"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJx1kcsRhDAMQ2WuWwUlQQk0sP3f+MQQyUqSCTByZJvn9fjvxwLgd53tOnFv
Xsgn8vN+t1tg6bunXpjW1KbjWW9qqBTeC3fDu+vcFKpEWdnbIyG53gydCrJB
iQ+8VN9qdG5f59C/GHlDosY3uUXhiakXJcokmVvlWbmFOLVXqCu5VZ6Vm8+A
SY+4VZ5zr04K7kqGXmvm1WkNXMnQa7n3BFzvBGw=
   "], {{0, 0}, {81, 11}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{610., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{
  3.7402310719499035`*^9},ExpressionUUID->"76a3f304-398e-4a06-88b5-\
fef154f07a00"],

Cell["\<\
There are differences if one uses the implemented Cellular Automata function \
with a similar but finite initial condition. Notice the extremes of the \
images below.\
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{
  3.7402423766507473`*^9},ExpressionUUID->"010f1506-2d28-4486-aab9-\
f8276f2dfe7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"with", " ", "infinite", " ", "initial", " ", "condition"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGDgBuJAIGYEIUaqUiBEXQpsNvUoBoi/qUgxQgKSahTYTEYq
UmAWIxWpkZdsIF6nIgUASOsEAQ==
     "], {{0, 0}, {81, 11}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{590.909090909095, Automatic},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"with", " ", "finite", " ", "initial", " ", "condition"}], "*)"}],
    "\[IndentingNewLine]", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGDgBuJAIGZghEAoxUAuBTcAxARjGINcCsGAmIlgkEtBGWBP
QwEjZRSUAXE2BFNIQU2COBtsNKUUPFIYIRZQTsEjhYL0gp56KE8v6KmH8vSC
nnoQJlOFAgBnUwQR
     "], {{0, 0}, {81, 11}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageMargins->0.,
    ImageSize->{588.0000000000005, Automatic},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
      Automatic}]}]}]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 
  10}},ExpressionUUID->"53b094b3-2c04-4e65-9d4e-c2a5c9fe9b2b"],

Cell[BoxData[""], "Input",
 CellOpen->False,ExpressionUUID->"5ddaca3b-16c4-4ddd-a510-a603177f7695"],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": Everything above this bar is in your 2 minute presentation. Make sure it \
fits on 2 slides. ",
 Cell[BoxData[
  ButtonBox["\<\"Preview Presentation\"\>",
   Appearance->Automatic,
   ButtonFunction:>With[{$CellContext`authorInfo = NotebookImport[
        EvaluationNotebook[], "TemplateAuthorInfo"], $CellContext`content = 
      NotebookImport[
        EvaluationNotebook[], 
        Alternatives[
        "TemplateEditableHeader", "TemplateEditableInput", 
         "TemplateEditableContent"]]}, 
     CreateDocument[
      Notebook[{
        Cell[
        "Wolfram Summer School 2018", FontFamily -> "Source Sans Pro", 
         FontSize -> 42, FontVariations -> {"CapsType" -> "AllCaps"}, 
         RGBColor[
         0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         Background -> RGBColor[1., 0.807843137254902, 0.2549019607843137], 
         PageWidth -> WindowWidth, ShowCellBracket -> False, 
         CellMargins -> {{0, 0}, {0, 0}}, 
         CellBracketOptions -> {"OverlapContent" -> True}], 
        Cell[
         Part[$CellContext`content, 1], "Title", FontColor -> 
         RGBColor[
          0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         CellMargins -> {{Inherited, 10}, {10, 10}}], 
        Cell[
         TextData[{
           StyleBox["AUTHOR: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`authorInfo, 1], " (Mentor: ", 
           Part[$CellContext`authorInfo, 2], ")"}], "Text"], 
        Cell[
         TextData[{
           StyleBox["AFFILIATION: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`authorInfo, 3]}], "Text"], 
        Cell[
         Part[$CellContext`content, 3], TextAlignment -> Center], 
        Cell[
         TextData[{
           StyleBox["GOAL OF THE PROJECT: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 2]}], "Text"], 
        Cell["", "SlideShowNavigationBar", CellTags -> "SlideShowHeader"], 
        Cell[
         TextData[{
           StyleBox["SUMMARY OF RESULTS: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 4]}], "Text"], 
        Cell[
         TextData[{
           StyleBox["ADDITIONAL CONTENT: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]]}], "Text"], 
        Apply[Sequence, 
         Map[Cell[#, "Text"]& , 
          Part[$CellContext`content, 
           Span[6, All]]]], 
        Cell[
         TextData[{
           StyleBox["FUTURE WORK: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 5]}], "Text"]}, ScreenStyleEnvironment -> 
       "SlideShow", WindowSize -> {1024, 740}]]],
   Evaluator->Automatic,
   Method->"Queued"]],ExpressionUUID->"de93efd8-12a9-4f5c-8a79-b815d24ac5f9"]
}], "TemplateDivider",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.740224343432857*^9},ExpressionUUID->"01c4256e-42d0-42b4-b6a6-\
4fa4583bf2f0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Detailed Project Notes", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188072178087*^9},
 CellTags->
  "ProjectNotes",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e"],

Cell[CellGroupData[{

Cell["Main Results in Detail", "Subsubsection",
 CellChangeTimes->{
  3.7361820729365396`*^9},ExpressionUUID->"c1b785be-a60a-40fe-b1f1-\
2d83590b38cd"],

Cell["\<\
If the InfiniteLists.m package is in the same folder as the current notebook, \
one can load the package with the following command:\
\>", "Text",
 CellChangeTimes->{{3.7402280134143996`*^9, 
  3.7402280303502254`*^9}},ExpressionUUID->"3093e2ee-02d3-470d-9e20-\
6503447fe167"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", 
     "\"\<InfiniteLists.m\>\""}], "}"}], "]"}], "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"405db9f0-667a-42e9-8a33-2f40e37286b4"],

Cell[TextData[StyleBox["General Introduction",
 FontWeight->"Bold"]], "Text",ExpressionUUID->"f1ad00bc-7977-48fd-a88e-704a2e5ad3fb"],

Cell["\<\
Main idea: Infinite lists are treated as symbolical objects within the \
Wolfram Language. All infinite lists are countably infinite. An infinite list \
consists of two components, a direction and a rule that generates its \
elements. Elements can be of any Head.
With this approach, one can think of the infinite list as \
\[OpenCurlyDoubleQuote]lazily\[CloseCurlyDoubleQuote] implemented, i.e,  \
values are only computed when explicitly asked for. 
By far, the most complicated part of the project was to figure out the \
constructions needed for the generating rules for the new infinite lists that \
result from manipulating (applying functions) to infinite lists.
Note that, thanks to functions that insert a finite amount of elements to the \
list, strictly speaking the generating rule is only needed for the elements \
in the tail of the infinite list.
After the basic implementation was completed, infinite matrices were quickly \
available, via nesting of infinite lists and some modification of the already \
implemented functions of the project. With this,  the implementation of \
graphs with an infinite number of nodes and infinite adjacent matrices was \
possible. 
1- dimensional Cellular Automata with infinite initial conditions become \
available. Though the implementation here is still inefficient, it respects \
the spirit of cellular automata, which is that the value of a cell depends \
locally on the cells above it.\
\>", "Text",
 CellChangeTimes->{{3.740237749588975*^9, 
  3.740237749820326*^9}},ExpressionUUID->"46578b5f-5761-4cdf-b70d-\
d913449f1276"],

Cell[TextData[StyleBox["Technical Introduction",
 FontWeight->"Bold"]], "Text",ExpressionUUID->"409068f9-11a9-4cd5-8969-6b162c1e8d94"],

Cell[TextData[{
 "Infinite lists are objects: InfiniteList[direction,rule].\nThere are three \
types of infinite lists:\ndirection 1 lists  : open on the right side, closed \
on the left side. \tExample: {1,2,3,4,5,....}\ndirection -1 lists: open on \
the left side, closed on the right side. \tExample: {....,-5,-4,-3,-2,-1}\n\
direction 0 lists  : open on both sides: \t\t\t\t\t\tExample: \
{...,-3,-2,-1,0,1,2,---}\n\nMost functions take one or more infinite lists as \
input and return an infinite list as output. Some of these operations change \
the direction and most of them change the generating rule.\n\n",
 StyleBox["List of all functions and objects implemented:",
  FontWeight->"Bold"],
 "\n(Still inefficient implementations are marked with \
\[OpenCurlyDoubleQuote] * \[CloseCurlyDoubleQuote]. A \
\[OpenCurlyDoubleQuote]-\[CloseCurlyDoubleQuote] is added for ease of \
reading, but is not included in the name of the function or object )\n\n\
Infinite-List\nInfinite-Prepend\nInfinite-Append\nInfinite-Part\n\
Infinite-Take\nInfinite-Length\nInfinite-Print\nInfinite-Drop\nInfinite-First\
\nInfinite-Last\nInfinite-Direction\nInfinite-Range\nInfinite-Reverse\n\
Infinite-Join\nInfinite-RealDigits*\nInfinite-Rest\nInfinite-Most\n\
Infinite-Riffle\nInfinite-SelectRule\nInfinite-Select*\nInfinite-Cases*\n\
Infinite-Rule\nInfinite-FirstPosition\nInfinite-Unequal\nInfinite-Plus\n\
Infinite-Times\nInfinite-Sum\nInfinite-Unequal*\nInfinite-And\nInfinite-And2*\
\nInfinite-Or\nInfinite-Matrix\nInfinite-MatrixPlus\nInfinite-MatrixTimes\n\
Infinite-PolyTimes\nInfinite-CellularAutomatonStep*\n\
Infinite-CellularAutomaton\nInfinite-CellularAutomatonData1*\n\
Infinite-CellularAutomatonPlot1*\nInfinite-CellularAutomatonData2\n\
Infinite-CellularAutomatonPlot2\n\nA lot of functions return a Failure object \
if they are called with the wrong arguments, specifically:\nInfinitePrepend, \
InfiniteAppend, InfinitePart, InfiniteTake, InfiniteDrop, InfiniteFirst, \
InfiniteLast, InfiniteJoin, InfiniteRest, InfiniteMost, InfiniteEqual"
}], "Text",
 CellChangeTimes->{{3.7402311544026623`*^9, 
  3.7402311756245685`*^9}},ExpressionUUID->"4a6e6a58-f0bb-4818-856e-\
74ee29558aa2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{
  3.736182092776252*^9},ExpressionUUID->"6ebeefbd-4857-42fb-a308-\
27aaa279c47f"],

Cell["Provide one of:", "Text",
 CellChangeTimes->{{3.70811356171093*^9, 
  3.7081135645971746`*^9}},ExpressionUUID->"14e3781a-a52e-4548-bf74-\
c0aba980dad1"],

Cell[CellGroupData[{

Cell["\<\
Link to the GitHub: https://github.com/LuisAVasquez/Summer2018Starter \
\>", "Item",ExpressionUUID->"c5e47558-ad77-48ef-a210-57e48083e7f1"],

Cell["\<\
see under \[OpenCurlyDoubleQuote]project-notebooks\[CloseCurlyDoubleQuote] \
folder for the progressive advance of the project: \
https://github.com/LuisAVasquez/Summer2018Starter/tree/master/Project%\
20Notebooks\
\>", "Item",
 CellChangeTimes->{{3.740233247668457*^9, 3.740233249518004*^9}, {
  3.740233280127923*^9, 
  3.7402332852951365`*^9}},ExpressionUUID->"15f4edd9-d972-487b-ae6a-\
12c1af5581f1"],

Cell["\<\
The package \[OpenCurlyDoubleQuote]Infinite Lists\[CloseCurlyDoubleQuote] \
includes the code for all the functions implemented in this project\
\>", "Item",ExpressionUUID->"269d52b9-4776-4bd0-b4ec-0a80e467f6ef"]
}, Open  ]],

Cell["\<\
For the sake of completeness, I\[CloseCurlyQuote]ll include the code of my \
InfiniteLists Package, which has explanations of the inner structure of the \
functions\
\>", "Text",
 CellChangeTimes->{{3.740231181430018*^9, 
  3.740231234967167*^9}},ExpressionUUID->"eeb61d1a-6281-4c96-8f4d-\
1327383ea618"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<InfiniteLists`\>\"", "]"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "There", " ", "are", " ", "three", " ", "types", " ", "of", " ", 
     "infinite", " ", 
     RowBox[{"lists", ":", "\n", 
      RowBox[{"direction", " ", "1", " ", "lists"}], "  ", ":", " ", 
      RowBox[{"open", " ", "on", " ", "the", " ", "right", " ", "side"}]}]}], 
    ",", " ", 
    RowBox[{"closed", " ", "on", " ", "the", " ", "left", " ", 
     RowBox[{"side", ".", " \t", 
      RowBox[{"Example", ":", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", 
           RowBox[{"...", "."}]}], "}"}], "\n", "direction"}], " ", "-", 
        RowBox[{"1", " ", "lists"}]}], ":", " ", 
       RowBox[{
       "open", " ", "on", " ", "the", " ", "left", " ", "side"}]}]}]}], ",", 
    " ", 
    RowBox[{"closed", " ", "on", " ", "the", " ", "right", " ", 
     RowBox[{"side", ".", " \t", 
      RowBox[{"Example", ":", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"...", "."}], ",", 
          RowBox[{"-", "5"}], ",", 
          RowBox[{"-", "4"}], ",", 
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], "\n", "direction", " ", "0", " ", 
        "lists"}], "  ", ":", " ", 
       RowBox[{"open", " ", "on", " ", "both", " ", 
        RowBox[{"sides", ":", "\t\t\t\t\t\t", "Example", ":", " ", 
         RowBox[{"{", 
          RowBox[{"...", ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", 
           RowBox[{"--", "-"}]}], "}"}]}]}]}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InfiniteList", "[", 
    RowBox[{"direction_", ",", "rule_"}], "]"}], "[", "n_Integer", "]"}], ":=",
   " ", 
  RowBox[{
   RowBox[{"rule", "@", "n"}], " ", "/;", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"direction", "==", "0"}], ")"}], "||", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"direction", "*", "n"}], ">", "0"}], ")"}]}], 
    ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InfiniteList", "[", 
    RowBox[{"direction_", ",", "rule_"}], "]"}], "[", "n_Integer", "]"}], ":=",
   "\n", 
  RowBox[{
   RowBox[{"Failure", "[", 
    RowBox[{"\"\<InvalidInfinitePart\>\"", ",", 
     RowBox[{"<|", 
      RowBox[{
      "\"\<MessageTemplate\>\"", "->", 
       "\"\<Invalid infinite part specification\>\""}], "|>"}]}], "]"}], "/;", 
   RowBox[{"Not", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"direction", "==", "0"}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "*", "n"}], ">", "0"}], ")"}]}], 
     ")"}]}]}]}]}], "Code",ExpressionUUID->"5f37793d-f00d-4888-bcea-\
395bc9d1256b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Attention", ":", " ", 
     RowBox[{
     "Most", " ", "of", " ", "the", " ", "functions", " ", "are", " ", 
      "analogous", " ", "to", " ", "the", " ", "ones", " ", "already", " ", 
      "in", " ", "the", " ", "Wolfram", " ", "Language"}]}], ",", " ", "\n", 
    RowBox[{
    "and", " ", "they", " ", "have", " ", "\"\<Infinite\>\"", " ", "added", 
     " ", "before", " ", "the", " ", "existing", " ", "name"}]}], "*)"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Prepend", " ", "only", " ", "works", " ", "for", " ", "direction", " ", 
    "1"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"InfinitePrepend", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "elem_"}], "]"}], ":=",
      "\n", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newrule", "=", " ", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "==", "1"}], ",", "elem", ",", 
             RowBox[{"rule", "@", 
              RowBox[{"(", 
               RowBox[{"#", "-", "1"}], ")"}]}]}], "]"}], "&"}]}], "\n", 
         "}"}], ",", " ", 
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{"direction", "==", "1"}], " ", ")"}]}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfinitePrepend", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "elem_"}], "]"}], ":=",
      "\n", 
     RowBox[{
      RowBox[{"Failure", "[", 
       RowBox[{"\"\<InvalidInfinitePrepend\>\"", ",", 
        RowBox[{"<|", 
         RowBox[{
         "\"\<MessageTemplate\>\"", "->", 
          "\"\<InfinitePrepend only defined for right-open infinite \
lists\>\""}], "|>"}]}], "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{"direction", "!=", " ", "1"}], " ", ")"}]}]}], ";"}], 
   "\n"}]}]], "Code",ExpressionUUID->"caf5c791-b3f5-4045-9609-7527154f6f6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Append", " ", "only", " ", "works", " ", "for", " ", "direction"}], " ", 
    "-", "1"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteAppend", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "elem_"}], "]"}], ":=",
      "\n", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newrule", "=", " ", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "==", 
              RowBox[{"-", "1"}]}], ",", "elem", ",", 
             RowBox[{"rule", "@", 
              RowBox[{"(", 
               RowBox[{"#", "+", "1"}], ")"}]}]}], "]"}], "&"}]}], "\n", 
         "}"}], ",", " ", 
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{"direction", "==", 
        RowBox[{"-", "1"}]}], " ", ")"}]}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteAppend", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "elem_"}], "]"}], ":=",
      "\n", 
     RowBox[{
      RowBox[{"Failure", "[", 
       RowBox[{"\"\<InvalidInfinitePrepend\>\"", ",", 
        RowBox[{"<|", 
         RowBox[{
         "\"\<MessageTemplate\>\"", "->", 
          "\"\<InfinitePrepend only defined for left-open infinite \
lists\>\""}], "|>"}]}], "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{"direction", "!=", " ", 
        RowBox[{"-", "1"}]}], " ", ")"}]}]}], ";"}], "\n"}]}]], "Code",Express\
ionUUID->"7986f34b-aba0-417e-843e-f34a097f2b74"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InfinitePart", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "n_Integer"}], "]"}],
     ":=", 
    RowBox[{
     RowBox[{"rule", "@", "n"}], " ", "/;", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"direction", "==", "0"}], ")"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"direction", "*", "n"}], ">", "0"}], ")"}]}], ")"}]}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"InfinitePart", "[", 
   RowBox[{
    RowBox[{"InfiniteList", "[", 
     RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "n_Integer"}], "]"}], ":=",
   "\n", 
  RowBox[{
   RowBox[{"Failure", "[", 
    RowBox[{"\"\<InvalidInfinitePart\>\"", ",", 
     RowBox[{"<|", 
      RowBox[{
      "\"\<MessageTemplate\>\"", "->", 
       "\"\<Invalid infinite part specification\>\""}], "|>"}]}], "]"}], "/;", 
   RowBox[{"Not", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"direction", "==", "0"}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "*", "n"}], ">", "0"}], ")"}]}], 
     ")"}]}]}]}], "\n"}], "Code",ExpressionUUID->"f776c7bf-8243-4e84-9e28-\
e20432402803"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "only", " ", "integers", " ", "can", " ", "be", " ", "taken", " ", "as", 
    " ", 
    RowBox[{"indexs", "!"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfinitePart", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
      RowBox[{"list_List", "/;", 
       RowBox[{"AllTrue", "[", 
        RowBox[{"list", ",", "IntegerQ"}], "]"}]}]}], "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"InfinitePart", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction", ",", "rule"}], "]"}], ",", "list"}], "]"}], "=", 
     
     RowBox[{"Map", "[", 
      RowBox[{"rule", ",", "list"}], "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfinitePart", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "list_List"}], "]"}],
     ":=", 
    RowBox[{"Failure", "/;", 
     RowBox[{"!", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"list", ",", "IntegerQ"}], "]"}]}]}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "this", " ", "definitions", " ", "needs", " ", "to", " ", "be", " ", 
     RowBox[{"refined", "!"}]}], " ", "*)"}], "\n"}]}]], "Code",ExpressionUUID\
->"d1e51ae0-b3be-4077-96ba-f68db592a6eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Infinite", " ", "Take"}], ",", " ", 
    RowBox[{"based", " ", "on", " ", "InfinitePart"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "n_Integer"}], 
      "]"}], ":=", 
     RowBox[{
      RowBox[{"InfinitePart", "[", 
       RowBox[{
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "rule"}], "]"}], ",", 
        RowBox[{"Range", "[", "n", "]"}]}], "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", "1"}], "&&", 
        RowBox[{"n", ">", "0"}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "n_Integer"}], 
      "]"}], ":=", 
     RowBox[{
      RowBox[{"InfinitePart", "[", 
       RowBox[{
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "rule"}], "]"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "n", ",", 
          RowBox[{"-", "1"}]}], "]"}]}], "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", 
         RowBox[{"-", "1"}]}], " ", "&&", 
        RowBox[{"n", "<", "0"}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"for", " ", "direction"}], " ", "-", 
      RowBox[{"1", " ", "lists"}]}], ",", " ", 
     RowBox[{
      RowBox[{"InfiniteTake", "[", 
       RowBox[{"#", ",", "n"}], "]"}], " ", "returns", " ", "in", " ", "the", 
      " ", "order", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "3"}], ",", "...", ",", 
        RowBox[{"-", 
         RowBox[{"Abs", "[", "n", "]"}]}]}], "}"}]}]}], "  ", "*)"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"InfiniteTake", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "n_Integer"}], "]"}],
     ":=", 
    RowBox[{"Failure", "/;", 
     RowBox[{"Not", "@", 
      RowBox[{"Or", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"direction", "==", "1"}], "&&", 
          RowBox[{"n", ">", "0"}]}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"direction", "==", 
           RowBox[{"-", "1"}]}], " ", "&&", 
          RowBox[{"n", "<", "0"}]}], ")"}]}], "]"}]}]}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n_Integer", ",", "m_Integer"}], "}"}]}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"InfinitePart", "[", 
       RowBox[{
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "rule"}], "]"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"n", ",", "m", ",", "1"}], "]"}]}], "]"}], "/;", "\n", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", "1"}], "&&", " ", 
        RowBox[{"n", "<=", "  ", "m"}]}], ")"}]}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n_Integer", ",", "m_Integer"}], "}"}]}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"InfinitePart", "[", 
       RowBox[{
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "rule"}], "]"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"n", ",", "m", ",", 
          RowBox[{"-", "1"}]}], "]"}]}], "]"}], "/;", "\n", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", 
         RowBox[{"-", "1"}]}], "&&", 
        RowBox[{"m", "<=", "n", "<", "0"}]}], ")"}]}]}], ";"}], "\n", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "careful", " ", "with", " ", "the", " ", "direction", " ", "of", " ", 
      "the", " ", "part", " ", "in", " ", "direction"}], " ", "-", 
     RowBox[{"1", " ", 
      RowBox[{"lists", "!!"}]}]}], "*)"}], " ", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{"mIL", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", 
         RowBox[{"-", "8"}]}], "}"}]}], "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mIL", "\[LeftDoubleBracket]", 
        RowBox[{"-", "4"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"mIL", "\[LeftDoubleBracket]", 
        RowBox[{"-", "5"}], "\[RightDoubleBracket]"}], ",", "...", ",", 
       RowBox[{"mIL", "\[LeftDoubleBracket]", 
        RowBox[{"-", "8"}], "\[RightDoubleBracket]"}]}], "}"}]}], "  ", 
    "*)"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "mIL", " ", "is", " ", "an", " ", "arbitrary", " ", "direction"}], " ", 
     "-", 
     RowBox[{"1", " ", "infinite", " ", "list"}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"with", " ", "this", " ", "implementation", " ", "we", " ", 
      RowBox[{"have", ":", "     ", 
       RowBox[{"InfiniteTake", "[", 
        RowBox[{"mIL", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", 
            RowBox[{"Abs", "[", "n", "]"}]}]}], "}"}]}], "]"}]}]}], "=", " ", 
     
     RowBox[{"InfiniteTake", "[", 
      RowBox[{"mIL", ",", 
       RowBox[{"-", 
        RowBox[{"Abs", "[", "n", "]"}]}]}], "]"}]}], "  ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n_Integer", ",", "m_Integer"}], "}"}]}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"InfinitePart", "[", 
       RowBox[{
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "rule"}], "]"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"n", ",", "m", ",", "1"}], "]"}]}], "]"}], "/;", "\n", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", "0"}], "&&", "  ", 
        RowBox[{"n", "<=", "m"}]}], " ", ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n_Integer", ",", "m_Integer"}], "}"}]}], "]"}], ":=", "\n", 
     RowBox[{"Failure", "/;", " ", 
      RowBox[{"Not", "@", 
       RowBox[{"Or", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"direction", "==", "1"}], "&&", " ", 
           RowBox[{"n", "<=", "  ", "m"}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"direction", "==", 
            RowBox[{"-", "1"}]}], "&&", 
           RowBox[{"m", "<=", "n", "<", "0"}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"direction", "==", "0"}], "&&", "  ", 
           RowBox[{"n", "<=", "m"}]}], " ", ")"}]}], "]"}]}]}]}], ";"}], "\n",
    "\n", 
   RowBox[{"(*", 
    RowBox[{
    "beginning", " ", "work", " ", "of", " ", "the", " ", "04.07", " ", "for",
      " ", "this", " ", "definition"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n_Integer", ",", "Infinity"}], "}"}]}], "]"}], ":=", "\n", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newrule", "=", 
          RowBox[{
           RowBox[{"rule", "@", 
            RowBox[{"(", 
             RowBox[{"#", "+", "n", "-", "1"}], ")"}]}], "&"}]}], "}"}], ",", 
        
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", "1"}], "&&", 
        RowBox[{"n", ">", "0"}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n_Integer", ",", "Infinity"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Failure", "/;", 
      RowBox[{"Not", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"direction", "==", "1"}], "&&", 
          RowBox[{"n", ">", "0"}]}], "||", 
         RowBox[{"direction", "==", "0"}]}], ")"}]}]}]}], ";"}], "\t", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "Infinity"}], ",", "n_Integer"}], "}"}]}], "]"}], ":=", 
     "\n", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newrule", "=", 
          RowBox[{
           RowBox[{"rule", "@", 
            RowBox[{"(", 
             RowBox[{"#", "+", "n", "+", "1"}], ")"}]}], "&"}]}], "}"}], ",", 
        
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", 
         RowBox[{"-", "1"}]}], "&&", 
        RowBox[{"n", "<", "0"}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "Infinity"}], ",", "n_Integer"}], "}"}]}], "]"}], ":=", 
     
     RowBox[{"Failure", "/;", 
      RowBox[{"Not", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"direction", "==", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{"n", "<", "0"}]}], "||", 
         RowBox[{"direction", "==", "0"}]}], ")"}]}]}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction", ",", "rule"}], "]"}], "/;", 
      RowBox[{"direction", "==", "0"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Failure", "/;", 
      RowBox[{
       RowBox[{"Not", "@", "direction"}], "==", "0"}]}]}], ";"}], "\t\t", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "notice", " ", "that", " ", "direction", " ", "0", " ", "lists", " ", 
      "can", " ", "get", " ", "direction", " ", "1", " ", "or"}], " ", "-", 
     RowBox[{"1", " ", "lists", " ", "taken", " ", "from", " ", 
      RowBox[{"them", "!"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"0", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n_Integer", ",", "Infinity"}], "}"}]}], "]"}], ":=", "\n", 
     "\t", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"newrule", "=", 
         RowBox[{
          RowBox[{"rule", "@", 
           RowBox[{"(", 
            RowBox[{"#", "+", "n", "-", "1"}], ")"}]}], "&"}]}], "}"}], ",", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{"1", ",", "newrule"}], "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteTake", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"0", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "Infinity"}], ",", "n_Integer"}], "}"}]}], "]"}], ":=", 
     "\n", "\t", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"newrule", "=", 
         RowBox[{
          RowBox[{"rule", "@", 
           RowBox[{"(", 
            RowBox[{"#", "+", "n", "+", "1"}], ")"}]}], "&"}]}], "}"}], ",", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "newrule"}], "]"}]}], "]"}]}], ";"}], "\n", 
   
   RowBox[{"(*", 
    RowBox[{
    "end", " ", "of", " ", "work", " ", "of", " ", "the", " ", "04.07", " ", 
     "for", " ", "this", " ", "definition"}], "*)"}]}]}]], "Code",ExpressionUU\
ID->"59a2a3a3-9634-40bb-be49-e3122be7c779"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InfiniteLength", "[", 
    RowBox[{"InfiniteList", "[", 
     RowBox[{"direction_", ",", "rule_"}], "]"}], "]"}], "=", "Infinity"}], 
  ";", " ", 
  RowBox[{"(*", 
   RowBox[{"by", " ", "far", " ", "the", " ", "easiest"}], "*)"}], 
  "\n"}]], "Code",ExpressionUUID->"e9d1463f-0a9f-45f1-a0c2-bb40a088b8d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "InfinitePrint", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "shows", " ", "some", " ", "elements", " ", "of", " ", "the", 
    " ", "infnite", " ", "list"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfinitePrint", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule_"}], "]"}], ",", 
      RowBox[{"n_:", "5"}]}], "]"}], ":=", "\n", 
    RowBox[{"Print", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "\"\<...\>\"", "}"}], ",", 
       RowBox[{"InfiniteTake", "[", 
        RowBox[{
         RowBox[{"InfiniteList", "[", 
          RowBox[{"0", ",", "rule"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "\"\<...\>\"", "}"}]}], "]"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"InfinitePrint", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"1", ",", "rule_"}], "]"}], ",", 
      RowBox[{"n_:", "5"}]}], "]"}], ":=", "\n", 
    RowBox[{"Print", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"InfiniteTake", "[", 
        RowBox[{
         RowBox[{"InfiniteList", "[", 
          RowBox[{"1", ",", "rule"}], "]"}], ",", "n"}], "]"}], ",", 
       RowBox[{"{", "\"\<...\>\"", "}"}]}], "]"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"InfinitePrint", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "rule_"}], "]"}], ",", 
      RowBox[{"n_:", "-", "5"}]}], "]"}], ":=", "\n", 
    RowBox[{"Print", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "\"\<...\>\"", "}"}], ",", 
       RowBox[{"Reverse", "[", 
        RowBox[{"InfiniteTake", "[", 
         RowBox[{
          RowBox[{"InfiniteList", "[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "rule"}], "]"}], ",", "n"}], "]"}], 
        "]"}]}], "]"}], "]"}]}], "\n", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "the", " ", "Reverse", " ", "is", " ", "here", " ", "because", " ", "of",
       " ", "how", " ", "infiniteTake", " ", "works", " ", "for"}], " ", "-", 
     
     RowBox[{"1", " ", "lists"}]}], "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.7402282825122786`*^9, 3.7402283371961823`*^9}, {
  3.740228375734915*^9, 3.7402284666792817`*^9}, {3.7402300919179287`*^9, 
  3.7402302214915333`*^9}, {3.7402302781701136`*^9, 3.740230306579135*^9}, {
  3.740230419172388*^9, 
  3.7402304518145604`*^9}},ExpressionUUID->"687685fd-abb0-46c5-8d68-\
111f7f86544a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "InfiniteDrop", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteDrop", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "n_Integer"}], 
      "]"}], ":=", "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newrule", "=", " ", 
          RowBox[{
           RowBox[{"rule", "@", 
            RowBox[{"(", 
             RowBox[{"#", "+", "n"}], ")"}]}], "&"}]}], "}"}], ",", "\n", 
        "\t", 
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "newrule"}], "]"}]}], "\n", "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", "1"}], " ", "&&", 
        RowBox[{"n", ">", "0"}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteDrop", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "n_Integer"}], 
      "]"}], ":=", "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newrule", "=", " ", 
          RowBox[{
           RowBox[{"rule", "@", 
            RowBox[{"(", 
             RowBox[{"#", "+", "n"}], ")"}]}], "&"}]}], "}"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"\"\<+n\>\"", " ", "even", " ", "though", " ", "n"}], "<", 
          "0"}], " ", "*)"}], "\n", "\t", 
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "newrule"}], "]"}]}], "\n", "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", 
         RowBox[{"-", "1"}]}], " ", "&&", 
        RowBox[{"n", "<", "0"}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"InfiniteDrop", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "n_Integer"}], "]"}],
     ":=", 
    RowBox[{"Failure", "/;", " ", 
     RowBox[{"Not", "@", 
      RowBox[{"Or", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"direction", "==", "1"}], " ", "&&", 
          RowBox[{"n", ">", "0"}]}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"direction", "==", 
           RowBox[{"-", "1"}]}], " ", "&&", 
          RowBox[{"n", "<", "0"}]}], ")"}]}], "]"}]}]}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteDrop", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", "n_Integer", "}"}]}], "]"}], ":=", "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newrule", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#", "<", "n"}], ",", 
              RowBox[{"rule", "@", "#"}], ",", " ", 
              RowBox[{"rule", "@", 
               RowBox[{"(", 
                RowBox[{"#", "+", "1"}], ")"}]}]}], "]"}], ")"}], "&"}]}], 
         "}"}], ",", "\n", "\t", 
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", "1"}], "&&", 
        RowBox[{"n", ">", "0"}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteDrop", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", "n_Integer", "}"}]}], "]"}], ":=", "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newrule", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#", ">", "n"}], ",", 
              RowBox[{"rule", "@", "#"}], ",", " ", 
              RowBox[{"rule", "@", 
               RowBox[{"(", 
                RowBox[{"#", "-", "1"}], ")"}]}]}], "]"}], ")"}], "&"}]}], 
         "}"}], ",", "\n", "\t", 
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", 
         RowBox[{"-", "1"}]}], "&&", 
        RowBox[{"n", "<", "0"}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "beginning", " ", "work", " ", "of", " ", "the", " ", "05.07", " ", "on", 
     " ", "this", " ", "definition"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteDrop", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n_Integer", ",", "m_Integer"}], "}"}]}], "]"}], ":=", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newrule", "=", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "<", "n"}], ",", 
             RowBox[{"rule", "@", "#"}], ",", 
             RowBox[{"rule", "@", 
              RowBox[{"(", 
               RowBox[{"#", "+", "m", "-", "n", "+", "1"}], ")"}]}]}], "]"}], 
           "&"}]}], "}"}], ",", "\n", "\t\t", 
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", "1"}], "&&", 
        RowBox[{"0", "<", "n", "<=", "m"}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteDrop", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n_Integer", ",", "m_Integer"}], "}"}]}], "]"}], ":=", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newrule", "=", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", ">", "n"}], ",", 
             RowBox[{"rule", "@", "#"}], ",", 
             RowBox[{"rule", "@", 
              RowBox[{"(", 
               RowBox[{"#", "+", "m", "-", "n", "-", "1"}], ")"}]}]}], "]"}], 
           "&"}]}], "}"}], ",", "\n", 
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", 
         RowBox[{"-", "1"}]}], "&&", 
        RowBox[{"m", "<=", "n", "<", "0"}]}], ")"}]}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteDrop", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n_Integer", ",", "m_Integer"}], "}"}]}], "]"}], ":=", "\n", 
     RowBox[{"(*", 
      RowBox[{
      "problems", " ", "if", " ", "range", " ", "includes", " ", "index", " ",
        "0"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "newrule", "}"}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"newrule", "=", 
          RowBox[{"Which", "[", " ", 
           RowBox[{
            RowBox[{"n", ">", "0"}], ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", "<", "n"}], ",", 
               RowBox[{"rule", "@", "#"}], ",", 
               RowBox[{"rule", "@", 
                RowBox[{"(", 
                 RowBox[{"#", "+", "m", "-", "n", "+", "1"}], ")"}]}]}], 
              "]"}], "&"}], ",", "\n", "\t\t\t\t   ", 
            RowBox[{"m", "<", "0"}], ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", ">", "m"}], ",", 
               RowBox[{"rule", "@", "#"}], ",", 
               RowBox[{"rule", "@", 
                RowBox[{"(", 
                 RowBox[{"#", "+", "n", "-", "m", "-", "1"}], ")"}]}]}], 
              "]"}], "&"}], ",", "\n", "\t\t\t\t", "True", ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", ">=", "0"}], ",", 
               RowBox[{"rule", "@", 
                RowBox[{"(", 
                 RowBox[{"#", "+", "m", "+", "1"}], ")"}]}], ",", 
               RowBox[{"rule", "@", 
                RowBox[{"(", 
                 RowBox[{"#", "+", "n"}], ")"}]}]}], "]"}], "&"}]}], "]"}]}], 
         " ", ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"remember", " ", "n"}], "<", 
           RowBox[{"0", " ", "in", " ", "this", " ", "case"}]}], "*)"}], "\n", 
         RowBox[{"InfiniteList", "[", 
          RowBox[{"direction", ",", "newrule"}], "]"}]}]}], " ", "]"}], "/;", 
      
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction", "==", "0"}], "&&", 
        RowBox[{"n", "<=", "m"}]}], ")"}]}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteDrop", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n_Integer", ",", "m_Integer"}], "}"}]}], "]"}], ":=", "\n", 
     RowBox[{"Failure", "/;", 
      RowBox[{"Not", "@", 
       RowBox[{"Or", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"direction", "==", "1"}], "&&", 
           RowBox[{"0", "<", "n", "<=", "m"}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"direction", "==", 
            RowBox[{"-", "1"}]}], "&&", 
           RowBox[{"m", "<=", "n", "<", "0"}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"direction", "==", "0"}], "&&", 
           RowBox[{"n", "<=", "m"}]}], ")"}]}], "]"}]}]}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"InfiniteDrop", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n_Integer", ",", "Infinity"}], "}"}]}], "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"direction", "==", "1"}], "&&", 
        RowBox[{"n", "==", "1"}]}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"InfiniteTake", "[", 
        RowBox[{
         RowBox[{"InfiniteList", "[", 
          RowBox[{"direction", ",", "rule"}], "]"}], ",", 
         RowBox[{"n", "-", "1"}]}], "]"}]}], "]"}], "/;", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"direction", "==", "1"}], "&&", 
       RowBox[{"n", ">", "0"}]}], ")"}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteDrop", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n_Integer", ",", "Infinity"}], "}"}]}], "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"newrule", "=", 
         RowBox[{
          RowBox[{"rule", "@", 
           RowBox[{"(", 
            RowBox[{"#", "+", "n"}], ")"}]}], "&"}]}], "}"}], ",", " ", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "newrule"}], "]"}]}], "]"}], "/;", 
     RowBox[{"direction", "==", "0"}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteDrop", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n_Integer", ",", "Infinity"}], "}"}]}], "]"}], ":=", 
    RowBox[{"Failure", "/;", 
     RowBox[{"Not", "@", 
      RowBox[{"Or", "[", 
       RowBox[{
        RowBox[{"direction", "==", "0"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"direction", "==", "1"}], "&&", 
          RowBox[{"n", ">", "0"}]}], ")"}]}], "]"}]}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteDrop", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Infinity"}], ",", "n_Integer"}], "}"}]}], "]"}], ":=", 
    "\n", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"direction", "==", 
         RowBox[{"-", "1"}]}], "&&", 
        RowBox[{"n", "==", 
         RowBox[{"-", "1"}]}]}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"Reverse", "@", 
        RowBox[{"InfiniteTake", "[", 
         RowBox[{
          RowBox[{"InfiniteList", "[", 
           RowBox[{"direction", ",", "rule"}], "]"}], ",", 
          RowBox[{"n", "+", "1"}]}], "]"}]}]}], "]"}], "/;", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"direction", "==", 
        RowBox[{"-", "1"}]}], "&&", 
       RowBox[{"n", "<", "0"}]}], ")"}]}]}], " ", 
   RowBox[{"(*", 
    RowBox[{"remember", " ", "the", " ", 
     RowBox[{"Reverse", "!"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"InfiniteDrop", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Infinity"}], ",", "n_Integer"}], "}"}]}], "]"}], ":=", 
    "\n", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"newrule", "=", 
         RowBox[{
          RowBox[{"rule", "@", 
           RowBox[{"(", 
            RowBox[{"#", "+", "n"}], ")"}]}], "&"}]}], "}"}], ",", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{"1", ",", "rule"}], "]"}]}], "]"}], "/;", 
     RowBox[{"direction", "==", "0"}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteDrop", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Infinity"}], ",", "n_Integer"}], "}"}]}], "]"}], ":=", 
    RowBox[{"Failure", "/;", 
     RowBox[{"Not", "@", 
      RowBox[{"Or", "[", 
       RowBox[{
        RowBox[{"direction", "==", "0"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"direction", "==", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{"n", "<", "0"}]}], ")"}]}], "]"}]}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteDrop", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"{", "}"}], "/;", 
     RowBox[{"direction", "==", "0"}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteDrop", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], ":=", 
    RowBox[{"Failure", "/;", 
     RowBox[{"direction", "!=", "0"}]}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "end", " ", "of", " ", "work", " ", "of", " ", "05.07", " ", "on", " ", 
     "this", " ", "definition"}], "*)"}], "\n"}]}]], "Code",ExpressionUUID->\
"7c67000d-9dd3-4a5d-adc5-54bd80235180"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "First", " ", "only", " ", "makes", " ", "sense", " ", "for", " ", 
    "direction", " ", "1", " ", "lists"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfiniteFirst", "[", 
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction_", ",", "rule_"}], "]"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"rule", "@", "1"}], "/;", 
     RowBox[{"direction", "==", "1"}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteFirst", "[", 
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction_", ",", "rule_"}], "]"}], "]"}], ":=", 
    RowBox[{"Failure", "/;", 
     RowBox[{"direction", "!=", "1"}]}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "last", " ", "only", " ", "makes", " ", "sense", " ", "for", " ", 
      "direction"}], " ", "-", 
     RowBox[{"1", " ", "lists"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"InfiniteLast", "[", 
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction_", ",", "rule_"}], "]"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"rule", "@", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]}], "/;", 
     RowBox[{"direction", "==", 
      RowBox[{"-", "1"}]}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteLast", "[", 
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction_", ",", "rule_"}], "]"}], "]"}], ":=", 
    RowBox[{"Failure", "/;", 
     RowBox[{"direction", "!=", " ", 
      RowBox[{"-", "1"}]}]}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "InfiniteDirection", " ", "returns", " ", "the", " ", "direction", " ", 
     "of", " ", "the", " ", "list"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteDirection", "[", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], "]"}], ":=", 
     "direction"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"InfiniteRange", ",", " ", 
     RowBox[{"Infinite", " ", "Reverse"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteRange", "[", 
      RowBox[{"n_Integer", ",", "Infinity"}], "]"}], ":=", 
     RowBox[{"InfiniteList", "[", 
      RowBox[{"1", ",", 
       RowBox[{"x", "\[Function]", 
        RowBox[{"x", "+", "n", "-", "1"}]}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteRange", "[", 
      RowBox[{
       RowBox[{"-", "Infinity"}], ",", "n_Integer"}], "]"}], ":=", 
     RowBox[{"InfiniteList", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"x", "\[Function]", 
        RowBox[{"x", "+", "n", "+", "1"}]}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteRange", "[", 
      RowBox[{
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "]"}], ":=", 
     RowBox[{"InfiniteList", "[", 
      RowBox[{"0", ",", 
       RowBox[{"x", "\[Function]", "x"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"InfiniteReverse", "[", 
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction_", ",", "rule_"}], "]"}], "]"}], ":=", "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newrule", "=", 
        RowBox[{
         RowBox[{"rule", "@", 
          RowBox[{"(", 
           RowBox[{"-", "#"}], ")"}]}], "&"}]}], "}"}], ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{
        RowBox[{"-", "direction"}], ",", "newrule"}], "]"}]}], 
     "]"}]}]}]}]], "Code",ExpressionUUID->"931418bf-13dd-43de-bb27-\
ee7a1a2ae588"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Infinite", " ", "Join"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfiniteJoin", "[", 
     RowBox[{"list_List", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}]}], "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"newrule", "=", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", "<=", " ", 
             RowBox[{"Length", "[", "list", "]"}]}], ",", 
            RowBox[{"list", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", 
            RowBox[{"rule", "@", 
             RowBox[{"(", 
              RowBox[{"#", "-", 
               RowBox[{"Length", "[", "list", "]"}]}], ")"}]}]}], "]"}], 
          "&"}]}], "}"}], ",", "\n", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
     RowBox[{"direction", "==", "1"}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteJoin", "[", 
     RowBox[{"list_List", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}]}], "]"}], ":=", 
    RowBox[{"Failure", "/;", 
     RowBox[{
      RowBox[{"Not", "@", "direction"}], "==", "1"}]}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"InfiniteJoin", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction1_", ",", "rule1_"}], "]"}], ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction2_", ",", "rule2_"}], "]"}]}], "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"newrule", "=", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", "<", "0"}], ",", 
            RowBox[{"rule1", "@", "#"}], ",", 
            RowBox[{"rule2", "@", 
             RowBox[{"(", 
              RowBox[{"#", "+", "1"}], ")"}]}]}], "]"}], "&"}]}], "}"}], ",", 
       "\n", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{"0", ",", "newrule"}], "]"}]}], "]"}], "/;", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"direction1", "==", 
        RowBox[{"-", "1"}]}], "&&", 
       RowBox[{"direction2", "==", "1"}]}], ")"}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteJoin", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction1_", ",", "rule1_"}], "]"}], ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction2_", ",", "rule2_"}], "]"}]}], "]"}], ":=", " ", 
    RowBox[{"Failure", "/;", 
     RowBox[{"Not", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"direction1", "==", 
         RowBox[{"-", "1"}]}], "&&", 
        RowBox[{"direction2", "==", "1"}]}], ")"}]}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteJoin", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "list_List"}], "]"}],
     ":=", "\n", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"newrule", "=", " ", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", ">=", 
             RowBox[{"-", 
              RowBox[{"Length", "[", "list", "]"}]}]}], ",", 
            RowBox[{"list", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", 
            RowBox[{"rule", "@", 
             RowBox[{"(", 
              RowBox[{"#", "+", 
               RowBox[{"Length", "[", "list", "]"}]}], ")"}]}]}], " ", "]"}], 
          "&"}]}], "}"}], ",", "\n", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
     RowBox[{"direction", "==", 
      RowBox[{"-", "1"}]}]}]}], "   ", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"attention", " ", "to", " ", "the", " ", 
      RowBox[{"order", ":", "   ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"...", "-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]}]}], 
     " ", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"...", ",", 
         RowBox[{"-", "3"}], ",", 
         RowBox[{"-", "2"}], ",", 
         RowBox[{"-", "1"}], ",", "a", ",", "b", ",", "c", ",", "d"}], "}"}], 
       " ", ".", " ", "NOT"}], " ", 
      RowBox[{"{", 
       RowBox[{"...", ",", 
        RowBox[{"-", "3"}], ",", 
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "d", ",", "c", ",", "b", ",", "a"}], 
       "}"}]}]}], " ", "*)"}], " ", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "think", " ", "of", " ", "it", " ", "as", " ", "pasting", " ", "one", " ",
      "after", " ", "the", " ", "other"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"InfiniteJoin", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "list_List"}], "]"}],
     ":=", 
    RowBox[{"Failure", "/;", 
     RowBox[{"direction", "!=", 
      RowBox[{"-", "1"}]}]}]}], "\n"}]}]], "Code",ExpressionUUID->"8de54154-\
bd8d-42dd-9652-be46f547333d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "InfiniteRealDigits", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "one", " ", "seems", " ", "very", " ", "inefficient"}], 
   "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"returns", " ", "a", " ", "list", " ", "of", " ", "two", " ", 
     RowBox[{"elements", ":", " ", 
      RowBox[{
      "First", " ", "the", " ", "infinite", " ", "list", " ", "of", " ", 
       "the", " ", "digits"}]}]}], ",", " ", 
    RowBox[{
    "Second", " ", "the", " ", "number", " ", "of", " ", "digits", " ", "to", 
     " ", "the", " ", "left", " ", "of", " ", "the", " ", "decimal", " ", 
     "point"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfiniteRealDigits", "[", 
     RowBox[{
      RowBox[{"x_", "/;", 
       RowBox[{"x", "\[Element]", "Reals"}]}], ",", 
      RowBox[{"b_:", "10"}]}], "]"}], ":=", "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rule", "=", " ", 
        RowBox[{
         RowBox[{"Last", "@", 
          RowBox[{"First", "@", 
           RowBox[{"RealDigits", "[", 
            RowBox[{"x", ",", "b", ",", "#"}], "]"}]}]}], "&"}]}], "}"}], ",",
       "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"InfiniteList", "[", 
         RowBox[{"1", ",", "rule"}], "]"}], ",", 
        RowBox[{
         RowBox[{"RealDigits", "[", 
          RowBox[{"x", ",", "b", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"IntegerDigits", "@", 
             RowBox[{"Floor", "[", "x", "]"}]}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"InfiniteRealDigits", "[", "E", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "//", 
     RowBox[{
      RowBox[{"InfiniteTake", "[", 
       RowBox[{"#", ",", "10"}], "]"}], "&"}]}], "//", "AbsoluteTiming"}], 
   " ", 
   RowBox[{"(*", 
    RowBox[{"before", " ", "modification"}], "*)"}], "\n", 
   RowBox[{"{", 
    RowBox[{"0.0008095322421513319`", ",", 
     RowBox[{"{", 
      RowBox[{
      "2", ",", "7", ",", "1", ",", "8", ",", "2", ",", "8", ",", "1", ",", 
       "8", ",", "2", ",", "8"}], "}"}]}], "}"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"InfiniteRealDigits", "[", "E", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "//", 
     RowBox[{
      RowBox[{"InfiniteTake", "[", 
       RowBox[{"#", ",", "10"}], "]"}], "&"}]}], "//", "AbsoluteTiming"}], 
   " ", 
   RowBox[{"(*", 
    RowBox[{"after", " ", "modification"}], "*)"}], "\n", 
   RowBox[{"{", 
    RowBox[{"0.00012648941283614561`", ",", 
     RowBox[{"{", 
      RowBox[{
      "2", ",", "7", ",", "1", ",", "8", ",", "2", ",", "8", ",", "1", ",", 
       "8", ",", "2", ",", "8"}], "}"}]}], "}"}], "\n", 
   RowBox[{
    RowBox[{"InfiniteRealDigits", "[", 
     RowBox[{"E", ",", "2"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "\n", "2", "\n"}]}]], "Code",ExpressionUUI\
D->"a7ab768a-6520-4821-97a4-5eeaebae4f7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"InfiniteRest", ",", " ", "InfiniteMost"}], " ", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Rest", " ", "only", " ", "makes", " ", "sense", " ", "for", " ", 
    "direction", " ", "1", " ", "lists"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteRest", "[", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newrule", "=", 
          RowBox[{
           RowBox[{"rule", "@", 
            RowBox[{"(", 
             RowBox[{"#", "+", "1"}], ")"}]}], "&"}]}], "}"}], ",", 
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
      RowBox[{"direction", "==", "1"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteRest", "[", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], "]"}], ":=", 
     RowBox[{"Failure", "/;", 
      RowBox[{"direction", "!=", " ", "1"}]}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Most", " ", "only", " ", "makes", " ", "sense", " ", "for", " ", 
      "direction"}], " ", "-", 
     RowBox[{"1", " ", "lists"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"InfiniteMost", "[", 
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction_", ",", "rule_"}], "]"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"newrule", "=", 
         RowBox[{
          RowBox[{"rule", "@", 
           RowBox[{"(", 
            RowBox[{"#", "-", "1"}], ")"}]}], "&"}]}], "}"}], ",", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
     RowBox[{"direction", "==", 
      RowBox[{"-", "1"}]}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteMost", "[", 
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction_", ",", "rule_"}], "]"}], "]"}], ":=", 
    RowBox[{"Failure", "/;", 
     RowBox[{"direction", "!=", " ", 
      RowBox[{"-", "1"}]}]}]}], "\n"}]}]], "Code",ExpressionUUID->"bc47540b-\
36e0-4a1c-9fe6-193ea0e545f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "InfiniteRiffle", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfiniteRiffle", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "x_"}], "]"}], ":=", 
    "\n", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"newrule", "=", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"direction", "*", "#"}], ",", "2"}], "]"}], "==", 
             "1"}], ",", 
            RowBox[{"rule", "@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#", "+", "direction"}], ")"}], "/", "2"}], ")"}]}], 
            ",", "x"}], "]"}], "&"}]}], "\n", " ", 
        RowBox[{"(*", 
         RowBox[{"#", "+", 
          RowBox[{"direction", ":", " ", 
           RowBox[{
            RowBox[{
            "I", " ", "use", " ", "this", " ", "not", " ", "to", " ", "write",
              " ", "#"}], "+", 
            RowBox[{
            "1", " ", "for", " ", "direction", " ", "1", " ", "lists", " ", 
             "or", " ", "#"}], "-", 
            RowBox[{"1", " ", "for"}], " ", "-", 
            RowBox[{"1", " ", "lists"}]}]}]}], "*)"}], "\n", "}"}], ",", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"direction", "==", "1"}], "||", 
       RowBox[{"direction", "==", 
        RowBox[{"-", "1"}]}]}], ")"}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteRiffle", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "x_"}], "]"}], ":=", 
    "\n", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"newrule", "=", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"#", ",", "2"}], "]"}], "==", "1"}], ",", "x", ",", 
            RowBox[{"rule", "@", 
             RowBox[{"(", 
              RowBox[{"#", "/", "2"}], ")"}]}]}], "]"}], "&"}]}], "}"}], ",", 
       
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
     RowBox[{"direction", "==", "0"}]}]}], "\n", "\n", "\n"}]}]], "Code",Expre\
ssionUUID->"ad420a45-f850-44bb-a9e6-8f6583008c35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"InfiniteSelectRule", ",", " ", "InfiniteSelect"}], "*)"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"First", " ", 
    RowBox[{"I", "'"}], "m", " ", "implementing", " ", "a", " ", "way", " ", 
    "to", " ", "get", " ", "the", " ", "nth", " ", "element", " ", "that", 
    " ", "satisfies", " ", "an", " ", "specific", " ", "condition"}], "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteSelectRule", "[", 
      RowBox[{"1", ",", "rule_", ",", "condition_"}], "]"}], "[", "n_Integer",
      "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"InfiniteSelectRule", "[", 
       RowBox[{"1", ",", "rule", ",", "condition"}], "]"}], "[", "n", "]"}], 
     "=", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"direction", " ", "1", " ", "assumes", " ", "n"}], ">", "0"}], 
      "*)"}], "\n", "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"countCases", "=", "0"}], ",", 
         RowBox[{"i", "=", "1"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"countCases", "<", "n"}], ",", " ", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"condition", "[", 
               RowBox[{"rule", "@", "i"}], "]"}], "==", "True"}], ",", 
             RowBox[{"countCases", "++"}]}], "]"}], ";", 
           RowBox[{"i", "++"}]}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"rule", "@", 
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}]}]}]}], "\n", "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteSelectRule", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "rule_", ",", "condition_"}], "]"}], "[", 
     "n_Integer", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"InfiniteSelectRule", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "rule", ",", "condition"}], "]"}], "[", "n", 
      "]"}], "=", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"direction", " ", "-", 
        RowBox[{"1", " ", "assumes", " ", "n"}]}], "<", "0"}], "*)"}], "\n", 
     "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"countCases", "=", "0"}], ",", 
         RowBox[{"i", "=", "1"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"countCases", "<", 
           RowBox[{"-", "n"}]}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"condition", "[", 
               RowBox[{"rule", "@", 
                RowBox[{"(", 
                 RowBox[{"-", "i"}], ")"}]}], "]"}], "==", "True"}], ",", 
             RowBox[{"countCases", "++"}]}], "]"}], ";", 
           RowBox[{"i", "++"}]}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"rule", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "i"}], "+", "1"}], ")"}]}]}]}], "\n", "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteSelect", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "condition_"}], 
     "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"InfiniteSelectRule", "[", 
          RowBox[{"direction", ",", "rule", ",", "condition"}], "]"}], "[", 
         "#", "]"}], "&"}]}], "]"}], "/;", 
     RowBox[{"direction", "==", "1"}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteSelect", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "condition_"}], 
     "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"InfiniteSelectRule", "[", 
          RowBox[{"direction", ",", "rule", ",", "condition"}], "]"}], "[", 
         "#", "]"}], "&"}]}], "]"}], "/;", 
     RowBox[{"direction", "==", 
      RowBox[{"-", "1"}]}]}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Beginning", " ", "of", " ", "work", " ", "of", " ", "the", " ", "06.07", 
     " ", "for", " ", "this", " ", "definition"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InfiniteSelect", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "condition_"}], 
      "]"}], ":=", "\n", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newrule", "=", " ", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", ">=", "0"}], ",", 
             RowBox[{
              RowBox[{"InfiniteSelectRule", "[", 
               RowBox[{"1", ",", "rule", ",", "condition"}], "]"}], "[", "#", 
              "]"}], ",", 
             RowBox[{
              RowBox[{"InfiniteSelectRule", "[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "rule", ",", "condition"}], "]"}], 
              "[", "#", "]"}]}], "]"}], "&"}]}], "}"}], ",", "\n", 
        RowBox[{"InfiniteList", "[", 
         RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}], "/;", 
      RowBox[{"direction", "==", "0"}]}]}], ";"}]}]}]], "Code",ExpressionUUID-\
>"fd76d6dc-53f5-48c0-9bf9-ce566c7dd528"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"first", " ", "a", " ", "really", " ", "inefficient", " ", 
    RowBox[{"implementation", ":", " ", 
     RowBox[{"Use", " ", "MatchQ"}]}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"InfiniteCases", "[", 
    RowBox[{
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "pattern_"}], "]"}], ":=",
    "\n", 
   RowBox[{"InfiniteSelect", "[", 
    RowBox[{
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction", ",", "rule"}], "]"}], ",", 
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{"#", ",", "pattern"}], "]"}], "&"}]}], "]"}]}]}]], "Code",Expre\
ssionUUID->"4f7e0668-f9aa-41d0-bca4-ec2e0c711f22"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "returns", " ", "the", " ", "rule", " ", "of", " ", "the", 
    " ", "list"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"InfiniteRule", "[", 
    RowBox[{"InfiniteList", "[", 
     RowBox[{"direction_", ",", "rule_"}], "]"}], "]"}], ":=", 
   "rule"}]}]], "Code",ExpressionUUID->"44b60bcf-019d-4ce9-b22c-58eb7f74f56d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "InfiniteFirstPosition", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "function", " ", "gives", " ", "the", " ", "first", " ", 
    "position", " ", 
    RowBox[{"(", 
     RowBox[{
     "in", " ", "absolute", " ", "value", " ", "for", " ", "direction", " ", 
      "0"}], ")"}], " ", "of", " ", "the", " ", "element", " ", "that", " ", 
    "matches", " ", "the", " ", "pattern"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "It", " ", "is", " ", "not", " ", "guaranteed", " ", "to", " ", "finish"}],
    "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfiniteFirstPosition", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{
        RowBox[{"direction_", "/;", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"direction", "==", "1"}], "||", 
           RowBox[{"direction", "==", 
            RowBox[{"-", "1"}]}]}], ")"}]}], ",", "rule_"}], "]"}], ",", 
      "pattern_"}], "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"InfiniteFirstPosition", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction", ",", "rule"}], "]"}], ",", "pattern"}], "]"}], 
     "=", "\n", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", "=", "1"}], "}"}], ",", "\n", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"Not", "@", 
           RowBox[{"MatchQ", "[", 
            RowBox[{
             RowBox[{"rule", "@", 
              RowBox[{"(", 
               RowBox[{"direction", "*", "i"}], ")"}]}], ",", "pattern"}], 
            "]"}]}], ",", 
          RowBox[{"i", "++"}]}], "]"}], ";", "\n", 
        RowBox[{"i", "*", "direction"}]}]}], "\n", "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteFirstPosition", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{
        RowBox[{"direction_", "/;", 
         RowBox[{"direction", "==", "0"}]}], ",", "rule_"}], "]"}], ",", 
      "pattern_"}], "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"InfiniteFirstPosition", "[", 
      RowBox[{
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction", ",", "rule"}], "]"}], ",", "pattern"}], "]"}], 
     "=", "\n", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"i", "=", "0"}], ",", 
         RowBox[{"index", "=", "0"}]}], "}"}], ",", "\n", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"Not", "@", 
           RowBox[{"MatchQ", "[", 
            RowBox[{
             RowBox[{"rule", "@", "index"}], ",", "pattern"}], "]"}]}], ",", 
          "\n", 
          RowBox[{
           RowBox[{"i", "++"}], ";", 
           RowBox[{"index", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "i"}], ")"}], "*", 
             RowBox[{"Floor", "[", 
              RowBox[{"i", "/", "2"}], "]"}]}]}], ";"}]}], "\n", "]"}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"this", " ", "makes", " ", "index"}], "=", " ", "0"}], ",",
           "1", ",", 
          RowBox[{"-", "1"}], ",", "2", ",", 
          RowBox[{"-", "2"}], ",", "3", ",", 
          RowBox[{"-", "3"}], ",", 
          RowBox[{"...", "."}]}], "*)"}], "\n", "index"}]}], "\n", "]"}]}]}], 
   "\n"}]}]], "Code",ExpressionUUID->"1d4af85b-3163-47c3-ae91-1399fd00b32d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "InfiniteUnequal", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "returns", " ", "True", " ", "if", " ", "the", " ", 
     "infinite", " ", "lists", " ", "are", " ", 
     RowBox[{"Unequal", ".", " ", "Sadly"}]}], ",", " ", 
    RowBox[{"with", " ", "my", " ", "algorithm"}], ",", " ", 
    RowBox[{
    "this", " ", "is", " ", "not", " ", "guaranteed", " ", "to", " ", 
     "end"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfiniteUnequal", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction1_", ",", "rule1_"}], "]"}], ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction2_", ",", "rule2_"}], "]"}]}], "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", "=", "1"}], "}"}], ",", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"direction1", "!=", " ", "direction2"}], ",", 
          RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", "\n", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"rule1", "@", 
            RowBox[{"(", 
             RowBox[{"direction1", "*", "i"}], ")"}]}], "==", 
           RowBox[{"rule2", "@", 
            RowBox[{"(", 
             RowBox[{"direction2", "*", "i"}], ")"}]}]}], ",", 
          RowBox[{"i", "++"}]}], "]"}], ";", "\n", 
        RowBox[{"Return", "[", "True", "]"}]}]}], "\n", "]"}], "/;", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"direction1", "*", "direction2"}], "==", "1"}], ")"}]}]}], 
   "\n", 
   RowBox[{
    RowBox[{"InfiniteUnequal", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction1_", ",", "rule1_"}], "]"}], ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction2_", ",", "rule2_"}], "]"}]}], "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"i", "=", "0"}], ",", 
         RowBox[{"index", "=", "0"}]}], "}"}], ",", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"direction1", "!=", "direction2"}], ",", 
          RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", "\n", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"rule1", "@", "index"}], "==", 
           RowBox[{"rule2", "@", "index"}]}], ",", "\n", 
          RowBox[{
           RowBox[{"i", "++"}], ";", 
           RowBox[{"index", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "i"}], ")"}], "*", 
             RowBox[{"Floor", "[", 
              RowBox[{"i", "/", "2"}], "]"}]}]}], ";"}]}], "]"}], ";"}]}], 
      "\n", "]"}], "/;", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"direction1", "*", "direction2"}], "==", "0"}], ")"}]}]}], 
   "\n"}]}]], "Code",ExpressionUUID->"114d6f7d-6b0d-422e-bdfa-01a1a05efb45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"InfinitePlus", ",", "InfiniteTimes", ",", " ", "InfiniteSum"}], 
   "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "when", " ", "involving", " ", "two", " ", "infinite", " ", "lists"}], 
    ",", " ", 
    RowBox[{"this", " ", "operations", " ", "are", " ", "componentwise"}]}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfinitePlus", "[", 
     RowBox[{"alpha_Real", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}]}], "]"}], ":=", 
    RowBox[{"InfiniteList", "[", 
     RowBox[{"direction", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alpha", "+", 
         RowBox[{"rule", "@", "#"}]}], ")"}], "&"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"InfinitePlus", "[", 
     RowBox[{"alpha_Integer", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}]}], "]"}], ":=", 
    RowBox[{"InfiniteList", "[", 
     RowBox[{"direction", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alpha", "+", 
         RowBox[{"rule", "@", "#"}]}], ")"}], "&"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteTimes", "[", 
     RowBox[{"alpha_Real", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}]}], "]"}], ":=", 
    RowBox[{"InfiniteList", "[", 
     RowBox[{"direction", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alpha", "*", 
         RowBox[{"rule", "@", "#"}]}], ")"}], "&"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteTimes", "[", 
     RowBox[{"alpha_Integer", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction_", ",", "rule_"}], "]"}]}], "]"}], ":=", 
    RowBox[{"InfiniteList", "[", 
     RowBox[{"direction", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alpha", "*", 
         RowBox[{"rule", "@", "#"}]}], ")"}], "&"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"InfinitePlus", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction1_", ",", "rule1_"}], "]"}], ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction2_", ",", "rule2_"}], "]"}]}], "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rule1", "@", "#"}], "+", 
          RowBox[{"rule2", "@", "#"}]}], ")"}], "&"}]}], "]"}], "/;", 
     RowBox[{"direction1", "==", "direction2"}]}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteTimes", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction1_", ",", "rule1_"}], "]"}], ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction2_", ",", "rule2_"}], "]"}]}], "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"rule1", "@", "#"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"rule2", "@", "#"}], ")"}]}], ")"}], "&"}]}], "]"}], "/;", 
     
     RowBox[{"direction1", "==", "direction2"}]}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "InfiniteSum", " ", "gives", " ", "the", " ", "infinite", " ", "list", 
     " ", "of", " ", "partial", " ", "sums", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"only", " ", "for", " ", "direction", " ", "1", " ", "and"}], 
       " ", "-", "1"}], ")"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"InfiniteSum", "[", 
     RowBox[{"InfiniteList", "[", 
      RowBox[{
       RowBox[{"direction_", "/;", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"direction", "==", "1"}], "||", 
          RowBox[{"direction", "==", 
           RowBox[{"-", "1"}]}]}], ")"}]}], ",", "rule_"}], "]"}], "]"}], ":=",
     "\n", 
    RowBox[{
     RowBox[{"InfiniteSum", "[", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction", ",", "rule"}], "]"}], "]"}], "=", "\n", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"newrule", "=", "\n", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"rule", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "direction", ",", "#1", ",", "direction"}], 
             "}"}]}], "]"}], "&"}]}], "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "1"}], ",", 
            RowBox[{"rule", "[", "1", "]"}], ",", 
            RowBox[{
             RowBox[{"rule", "[", "#", "]"}], "+", 
             RowBox[{"newrule", "[", 
              RowBox[{"#", "-", "1"}], "]"}]}]}], "]"}], "&"}], "*)"}], " ", 
        RowBox[{"(*", 
         RowBox[{"recursive", " ", "implementation", " ", 
          RowBox[{"doesn", "'"}], "t", " ", "work"}], "*)"}], "\n", "}"}], 
       ",", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{"direction", ",", "newrule"}], "]"}]}], "]"}]}]}], 
   "\n"}]}]], "Code",ExpressionUUID->"59a6c99c-2cbf-4639-b216-47ba5c78cc7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "InfiniteEqual", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"not", " ", "guaranteed", " ", "to", " ", "finish"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfiniteEqual", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction1_", ",", "rule1_"}], "]"}], ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"direction2_", ",", "rule2_"}], "]"}]}], "]"}], ":=", "\n", 
    RowBox[{"Module", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"(*", "auxstring", "*)"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"direction1", "!=", "direction2"}], ",", 
         RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"auxstring", "=", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tostring", "[", "rule1", "]"}], "<>", "\"\<==\>\"", "<>", 
            RowBox[{"tostring", "[", "rule2", "]"}]}], ")"}]}], ";"}], "*)"}],
        "\n", 
       RowBox[{"Which", "[", "\n", 
        RowBox[{
         RowBox[{"TrueQ", "@", 
          RowBox[{"Resolve", "[", 
           RowBox[{"ForAll", "[", 
            RowBox[{"x", ",", 
             RowBox[{
              RowBox[{"rule1", "[", "x", "]"}], "==", 
              RowBox[{"rule2", "[", "x", "]"}]}]}], "]"}], "]"}]}], ",", "\n", 
         RowBox[{"Return", "[", "True", "]"}], ",", "\n", 
         RowBox[{"TrueQ", "@", 
          RowBox[{"FullSimplify", "[", 
           RowBox[{"ForAll", "[", 
            RowBox[{"x", ",", 
             RowBox[{
              RowBox[{"rule1", "[", "x", "]"}], "==", 
              RowBox[{"rule2", "[", "x", "]"}]}]}], "]"}], "]"}]}], ",", "\n", 
         RowBox[{"Return", "[", "True", "]"}], ",", "\n", 
         RowBox[{
          RowBox[{"Quiet", "@", 
           RowBox[{"FindInstance", "[", 
            RowBox[{
             RowBox[{"ForAll", "[", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"rule1", "[", "x", "]"}], "!=", 
                RowBox[{"rule2", "[", "x", "]"}]}]}], " ", "]"}], ",", 
             RowBox[{"{", "x", "}"}]}], "]"}]}], "!=", "  ", 
          RowBox[{"{", "}"}]}], ",", "\n", 
         RowBox[{"Return", "[", "False", "]"}], ",", "\n", "True", ",", "\n", 
         
         RowBox[{"Return", "[", "Failure", "]"}]}], "\n", "]"}]}]}], "      ",
      "\n", "]"}]}], "\n"}]}]], "Code",ExpressionUUID->"0c1133d3-d43e-4286-\
85da-7f54e223891e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"InfiniteAnd", ",", " ", "InfiniteOr"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"conjunction", "/", "disjunction"}], " ", "of", " ", "the", " ", 
    "elements", " ", "of", " ", "the", " ", "list"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"InfiniteAnd", "[", 
    RowBox[{
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "domain_"}], "]"}], ":=", 
   RowBox[{"TrueQ", "@", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"rule", "[", "x", "]"}], ",", 
      RowBox[{"Element", "[", 
       RowBox[{"x", ",", "domain"}], "]"}]}], "]"}], " "}]}]}]], "Code",Expres\
sionUUID->"725fb24b-a768-416f-af2b-c1d0eab6a7f8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InfiniteAnd2", "[", 
    RowBox[{
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "condition_"}], "]"}],
    ":=", 
   RowBox[{"TrueQ", "@", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"rule", "[", "x", "]"}], ",", 
      RowBox[{"condition", "[", "x", "]"}]}], "]"}]}]}], " "}], "\n", 
 RowBox[{
  RowBox[{"InfiniteOr", "[", 
   RowBox[{
    RowBox[{"InfiniteList", "[", 
     RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "condition_", ",", 
    "domain_"}], "]"}], ":=", "\n", 
  RowBox[{"TrueQ", "@", 
   RowBox[{"Quiet", "@", 
    RowBox[{"Resolve", "[", 
     RowBox[{
      RowBox[{"Exists", "[", 
       RowBox[{"x", ",", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{"rule", "[", "x", "]"}], ",", 
          RowBox[{"condition", "[", "x", "]"}]}], "]"}]}], "]"}], ",", 
      "domain"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InfiniteOr", "[", 
    RowBox[{
     RowBox[{"InfiniteList", "[", 
      RowBox[{"direction_", ",", "rule_"}], "]"}], ",", "condition_"}], "]"}],
    ":=", "\n", 
   RowBox[{"TrueQ", "@", 
    RowBox[{"Quiet", "@", 
     RowBox[{"Resolve", "[", 
      RowBox[{"Exists", "[", 
       RowBox[{"x", ",", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{"rule", "[", "x", "]"}], ",", 
          RowBox[{"condition", "[", "x", "]"}]}], "]"}]}], "]"}], "]"}]}]}]}],
   "\n"}], "\n"}], "Code",ExpressionUUID->"7325c305-97ee-4b46-866f-\
fe176bda1efc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"InfiniteMatrix", ",", " ", 
    RowBox[{"InfiniteTake", " ", 
     RowBox[{"(", 
      RowBox[{"for", " ", "infinite", " ", "matrices"}], ")"}]}]}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Infinite", " ", "matrices", " ", "are", " ", "infinite", " ", "lists", 
     " ", "of", " ", "their", " ", "rows"}], ",", " ", 
    RowBox[{
    "which", " ", "are", " ", "also", " ", "infinite", " ", "lists"}]}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfiniteMatrix", "[", "rule_", "]"}], ":=", "\n", 
    RowBox[{"InfiniteList", "[", 
     RowBox[{"1", ",", " ", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"InfiniteList", "[", 
         RowBox[{"1", ",", " ", 
          RowBox[{"Function", "[", 
           RowBox[{"y", ",", 
            RowBox[{"rule", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
     "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"InfiniteTake", "[", 
     RowBox[{
      RowBox[{"InfiniteMatrix", "[", "rule_", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n1_Integer", "?", "Positive"}], ",", 
        RowBox[{"n2_Integer", "?", "Positive"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m1_Integer", "?", "Positive"}], ",", 
        RowBox[{"m2_Integer", "?", "Positive"}]}], "}"}]}], "]"}], ":=", "\n", 
    RowBox[{"Table", "[", "    ", 
     RowBox[{
      RowBox[{"InfiniteTake", "[", "  ", 
       RowBox[{
        RowBox[{"InfinitePart", "[", " ", 
         RowBox[{
          RowBox[{"InfiniteMatrix", "[", "rule", "]"}], "  ", ",", "n"}], 
         "]"}], "       ", ",", 
        RowBox[{"{", 
         RowBox[{"m1", ",", "m2"}], "}"}]}], "]"}], "           ", ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "n1", ",", "n2", ",", "1"}], "}"}]}], "]"}]}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"InfiniteTake", "[", 
     RowBox[{
      RowBox[{"InfiniteMatrix", "[", "rule_", "]"}], ",", 
      RowBox[{"n_Integer", "?", "Positive"}], ",", 
      RowBox[{"m_Integer", "?", "Positive"}]}], "]"}], ":=", 
    RowBox[{"InfiniteTake", "[", 
     RowBox[{
      RowBox[{"InfiniteMatrix", "[", "rule", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "m"}], "}"}]}], "]"}]}], "\n"}]}]], "Code",Expression\
UUID->"852d3fa7-192b-4801-a11b-6def670a7f0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"InfiniteMatrixPlus", ",", " ", "InfiniteMatrixTimes"}], "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfiniteMatrixPlus", "[", 
     RowBox[{
      RowBox[{"InfiniteMatrix", "[", "rule1_", "]"}], ",", 
      RowBox[{"InfiniteMatrix", "[", "rule2_", "]"}]}], "]"}], ":=", " ", 
    RowBox[{"InfiniteMatrix", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"rule1", "[", 
        RowBox[{"#1", ",", "#2"}], "]"}], "+", 
       RowBox[{"rule2", "[", 
        RowBox[{"#1", ",", "#2"}], "]"}]}], "&"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteMatrixTimes", "[", 
     RowBox[{"alpha_Integer", ",", 
      RowBox[{"InfiniteMatrix", "[", "rule_", "]"}]}], "]"}], ":=", " ", 
    RowBox[{"InfiniteMatrix", "[", 
     RowBox[{
      RowBox[{"Times", "[", 
       RowBox[{"alpha", ",", 
        RowBox[{"rule", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}]}], "]"}], "&"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"InfiniteMatrixTimes", "[", 
     RowBox[{"alpha_Real", ",", 
      RowBox[{"InfiniteMatrix", "[", "rule_", "]"}]}], "]"}], ":=", 
    "        ", 
    RowBox[{"InfiniteMatrix", "[", 
     RowBox[{
      RowBox[{"Times", "[", 
       RowBox[{"alpha", ",", 
        RowBox[{"rule", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}]}], "]"}], "&"}], "]"}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Because", " ", "of", " ", "the", " ", "infinite", " ", "sum"}], 
     ",", " ", 
     RowBox[{"Matrix", " ", "multiplication", "  ", "is", " ", 
      RowBox[{"(", 
       RowBox[{"most", " ", "of", " ", "the", " ", "times"}], ")"}], " ", 
      "only", " ", "simbolically", " ", "defined"}]}], "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"InfiniteMatrixTimes", "[", 
     RowBox[{
      RowBox[{"InfiniteMatrix", "[", "rule1_", "]"}], ",", 
      RowBox[{"InfiniteMatrix", "[", "rule2_", "]"}]}], "]"}], ":=", 
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newrule", "=", " ", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"Times", "[", 
            RowBox[{
             RowBox[{"rule1", "[", 
              RowBox[{"#1", ",", "k"}], "]"}], ",", 
             RowBox[{"rule2", "[", 
              RowBox[{"k", ",", "#2"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], "&"}]}],
        "}"}], ",", "\n", 
      RowBox[{"InfiniteMatrix", "[", "newrule", "]"}]}], "]"}]}], "\n", 
   "\n"}]}]], "Code",ExpressionUUID->"087b6b8d-f93d-4045-8cc8-6685f531af38"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "InfinitePolyTimes", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"multiplication", " ", "of", " ", "infinite", " ", 
    RowBox[{"polynomials", "!"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfinitePolyTimes", "[", 
     RowBox[{
      RowBox[{"InfiniteList", "[", 
       RowBox[{"1", ",", "rule1_"}], "]"}], ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"1", ",", "rule2_"}], "]"}]}], "]"}], ":=", "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newrule", "=", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"Times", "[", 
            RowBox[{
             RowBox[{"rule1", "[", "j", "]"}], ",", 
             RowBox[{"rule2", "[", 
              RowBox[{"#", "+", "1", "-", "j"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "#"}], "}"}]}], "]"}], "&"}]}], "\n", 
       "}"}], ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"1", ",", "newrule"}], "]"}]}], "]"}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"the", " ", "term", " ", "#"}], "+", "1", "-", 
     RowBox[{
     "j", " ", "is", " ", "there", " ", "because", " ", "I", " ", "have", " ",
       "defined", " ", "infinite", " ", "lists", " ", "of", " ", "direction", 
      " ", "1", " ", "as", " ", "starting", " ", "with", " ", "index", " ", 
      "1"}]}], "*)"}], "\n", "\n", "\n"}]}]], "Code",ExpressionUUID->\
"268a7195-3d17-4084-a068-ab1750d6d8cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "InfiniteCellularAutomaton", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "this", " ", "is", " ", "a", " ", "cellular", " ", "automaton", " ", 
     "that", " ", "accepts", " ", "an", " ", "infinite", " ", "list", " ", 
     "as", " ", "an", " ", "initial", " ", "condition"}], ",", " ", "\n", 
    RowBox[{
    "it", " ", "is", " ", "a", " ", "direction", " ", "1", " ", "infinite", 
     " ", "list"}], ",", " ", 
    RowBox[{"of", " ", "direction", " ", "0", " ", "infinite", " ", 
     RowBox[{"lists", "."}]}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InfiniteCellularAutomatonStep", "[", 
     RowBox[{"cellularrule_", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule_"}], " ", "]"}]}], "]"}], ":=", "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newrule", "=", 
        RowBox[{
         RowBox[{"Part", "[", 
          RowBox[{
           RowBox[{"CellularAutomaton", "[", 
            RowBox[{"cellularrule", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"rule", "@", 
                RowBox[{"(", 
                 RowBox[{"#", "-", "1"}], ")"}]}], ",", 
               RowBox[{"rule", "@", "#"}], ",", 
               RowBox[{"rule", "@", 
                RowBox[{"(", 
                 RowBox[{"#", "+", "1"}], ")"}]}]}], "}"}]}], "]"}], ",", 
           "2"}], "]"}], "&"}]}], "\n", "}"}], ",", " ", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "newrule"}], "]"}]}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"InfiniteCellularAutomatonStep", "[", 
     RowBox[{"cellularrule_", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule_"}], "]"}], ",", "n_Integer"}], "]"}], ":=", 
    "\n", 
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"InfiniteCellularAutomatonStep", "[", 
        RowBox[{"cellularrule", ",", "#"}], "]"}], "&"}], ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule"}], "]"}], ",", "n"}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"InfiniteCellularAutomatonStep", "[", 
     RowBox[{"cellularrule_", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule_"}], "]"}], ",", "1"}], "]"}], ":=", 
    RowBox[{"InfiniteList", "[", 
     RowBox[{"0", ",", "rule"}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"InfiniteCellularAutomaton", "[", 
     RowBox[{"cellularrule_", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule_"}], "]"}]}], "]"}], ":=", "\n", 
    RowBox[{"InfiniteList", "[", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{"InfiniteCellularAutomatonStep", "[", 
        RowBox[{"cellularrule", ",", 
         RowBox[{"InfiniteList", "[", 
          RowBox[{"0", ",", "rule"}], "]"}], ",", "#"}], "]"}], "&"}]}], 
     "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"InfiniteCellularAutomatonData1", "[", 
     RowBox[{"cellularrule_", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule_"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n1_", ",", "n2_"}], "}"}], ",", "t_"}], "]"}], ":=", "\n", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"InfiniteTake", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"n1", ",", "n2"}], "}"}]}], "]"}], "&"}], ",", 
      RowBox[{
       RowBox[{"InfiniteCellularAutomaton", "[", 
        RowBox[{"cellularrule", ",", 
         RowBox[{"InfiniteList", "[", 
          RowBox[{"0", ",", "rule"}], "]"}]}], "]"}], "[", "t", "]"}]}], 
     "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"InfiniteCellularAutomatonData1", "[", 
     RowBox[{"cellularrule_", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule_"}], "]"}], ",", "n_", ",", "t_"}], "]"}], ":=",
     "\n", 
    RowBox[{"InfiniteCellularAutomatonData1", "[", 
     RowBox[{"cellularrule", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "n"}], ",", "n"}], "}"}], ",", "t"}], "]"}]}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"InfiniteCellularAutomatonPlot1", "[", 
     RowBox[{"cellularrule_", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule_"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n1_", ",", "n2_"}], "}"}], ",", "t_"}], "]"}], ":=", "\n", 
    RowBox[{"ArrayPlot", "[", 
     RowBox[{"InfiniteCellularAutomatonData1", "[", 
      RowBox[{"cellularrule", ",", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{"0", ",", "rule"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n1", ",", "n2"}], "}"}], ",", "t"}], "]"}], "]"}]}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"InfiniteCellularAutomatonPlot1", "[", 
     RowBox[{"cellularrule_", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule_"}], "]"}], ",", "n_", ",", "t_"}], "]"}], ":=",
     "\n", 
    RowBox[{"ArrayPlot", "[", 
     RowBox[{"InfiniteCellularAutomatonData1", "[", 
      RowBox[{"cellularrule", ",", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{"0", ",", "rule"}], "]"}], ",", "n", ",", "t"}], "]"}], 
     "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"InfiniteCellularAutomatonData2", "[", 
     RowBox[{"cellularrule_", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule_"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n1_", ",", "n2_"}], "}"}], ",", "t_"}], "]"}], ":=", "\n", 
    RowBox[{"CellularAutomaton", "[", 
     RowBox[{"cellularrule", ",", 
      RowBox[{"InfiniteTake", "[", 
       RowBox[{
        RowBox[{"InfiniteList", "[", 
         RowBox[{"0", ",", "rule"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n1", ",", "n2"}], "}"}]}], "]"}], ",", "t"}], "]"}]}], "\n",
    "\n", 
   RowBox[{
    RowBox[{"InfiniteCellularAutomatonData2", "[", 
     RowBox[{"cellularrule_", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule_"}], "]"}], ",", "n_", ",", "t_"}], "]"}], ":=",
     "\n", 
    RowBox[{"InfiniteCellularAutomatonData2", "[", 
     RowBox[{"cellularrule", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "n"}], ",", "n"}], "}"}], ",", "t"}], "]"}]}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"InfiniteCellularAutomatonPlot2", "[", 
     RowBox[{"cellularrule_", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule_"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n1_", ",", "n2_"}], "}"}], ",", "t_"}], "]"}], ":=", "\n", 
    RowBox[{"ArrayPlot", "[", 
     RowBox[{"InfiniteCellularAutomatonData2", "[", 
      RowBox[{"cellularrule", ",", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{"0", ",", "rule"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n1", ",", "n2"}], "}"}], ",", "t"}], "]"}], "]"}]}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"InfiniteCellularAutomatonPlot2", "[", 
     RowBox[{"cellularrule_", ",", 
      RowBox[{"InfiniteList", "[", 
       RowBox[{"0", ",", "rule_"}], "]"}], ",", "n_", ",", "t_"}], "]"}], ":=",
     "\n", 
    RowBox[{"ArrayPlot", "[", 
     RowBox[{"InfiniteCellularAutomatonData2", "[", 
      RowBox[{"cellularrule", ",", 
       RowBox[{"InfiniteList", "[", 
        RowBox[{"0", ",", "rule"}], "]"}], ",", "n", ",", "t"}], "]"}], 
     "]"}]}], "\n", "\n", "\n", "\n"}]}]], "Code",ExpressionUUID->"4437e564-\
2c12-4798-84bb-9fa10e70c327"],

Cell[BoxData[
 RowBox[{"EndPackage", "[", "]"}]], "Code",ExpressionUUID->"31f6ec73-c776-4353-aa06-e1f9b68002ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Written Content / Lesson Plans", "Subsubsection",
 CellChangeTimes->{
  3.736182124333714*^9},ExpressionUUID->"ba68b18e-0118-4694-9cc8-\
e616df451654"],

Cell["Does not apply.", "Text",ExpressionUUID->"c569ff5e-302a-42ad-a60e-bd8204ee2c1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusions in Detail", "Subsubsection",
 CellChangeTimes->{
  3.736182152929455*^9},ExpressionUUID->"405e0fe7-2022-4d50-b275-\
5f85c6659f37"],

Cell["\<\
A lot of the basic WL operations for lists have been successfully implemented \
for infinite lists. Yet, it can be difficult to figure the syntax to use this \
functions.
There are still many inefficient implementations which could be perfected.
Note that Cellular Automata with infinite initial conditions have a different \
behaviour than those with finite initial conditions. This is due to the fact \
that every cell in a cellular automata has an \
\[OpenCurlyDoubleQuote]influence cone\[CloseCurlyDoubleQuote] of the cells \
above it. If one uses a finite initial condition, when going far down the \
Cellular Automaton, one gets to cells with influence cones too big for the \
range of the initial condition. This problem does not occur with infinite \
initial conditions.
The successful work with infinite matrices and Cellular Automata with \
infinite initial conditions suggest that infinite lists are a worthy \
implementation into the Wolfram Language.\
\>", "Text",
 CellChangeTimes->{
  3.7402281003500743`*^9, {3.7402322384918246`*^9, 
   3.740232440562065*^9}},ExpressionUUID->"f3e2b6ab-35e6-46ab-be5a-\
cf1ec0c28105"]
}, Open  ]],

Cell[CellGroupData[{

Cell["All Visualizations", "Subsubsection",
 CellChangeTimes->{{3.736182157207601*^9, 
  3.736182158846121*^9}},ExpressionUUID->"aa59b7ca-7848-48f1-96cf-\
6286c1fabb09"],

Cell["\<\
Visualizations are not needed for the project, only for examples.\
\>", "Text",ExpressionUUID->"6f5c3c8b-3721-4a6d-b68e-e9a2a0181d62"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Sources Links/References", "Subsubsection",
 CellChangeTimes->{
  3.736182217183381*^9},ExpressionUUID->"8d03133e-d036-4673-985c-\
415dd5ec88bb"],

Cell["Does not apply.", "Text",ExpressionUUID->"d3c43c50-54d3-4a4e-9e61-da22cf00b0d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Future Directions", "Subsubsection",
 CellChangeTimes->{{3.7361822218287*^9, 
  3.7361822234759083`*^9}},ExpressionUUID->"9afe7952-52cb-49e5-812a-\
edf95df8c363"],

Cell["\<\
- Extend the existing Mathematica functions to work with infinite lists, and \
optimizing these extensions.
- Use infinite lists to implement Turing Machines, Tag Systems, and other \
systems that in principle can accept infinite lists.\
\>", "Text",ExpressionUUID->"8bfa6a3b-1c12-4faf-b2c9-0a2a866fef97"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Background Info Links/References", "Subsubsection",
 CellChangeTimes->{
  3.736182238022826*^9},ExpressionUUID->"19b709dc-5a9b-4a0e-8d93-\
1058844be4dd"],

Cell["\<\
Some inspiration for this implementations comes from \
Haskell\[CloseCurlyQuote]s treatment of infinite lists. See:
https://wiki.haskell.org/Why_Haskell_matters#Laziness
Hilbert\[CloseCurlyQuote]s Infinite Hotel is a helpful thought experiment for \
understanding the behaviour that infinite sets can have. See:
https://en.wikipedia.org/wiki/Hilbert%27s_paradox_of_the_Grand_Hotel\
\>", "Text",ExpressionUUID->"a18548e5-0fab-4f07-bbb0-a4bad4e70d8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Subsubsection",
 CellChangeTimes->{
  3.73618224410275*^9},ExpressionUUID->"6668b03b-4180-4966-b673-b20f85cb5927"],

Cell["Provide keywords as items", "Text",
 CellChangeTimes->{{3.70811356171093*^9, 3.7081135645971746`*^9}, {
  3.7081136127408867`*^9, 
  3.708113615106327*^9}},ExpressionUUID->"a5e5e177-980c-46c4-8f4b-\
7804400a13ff"],

Cell[CellGroupData[{

Cell["Infinite Lists", "Item",ExpressionUUID->"3cadd99b-d013-4952-a76a-417ee2cff751"],

Cell["Infinite Graphs", "Item",ExpressionUUID->"461942e2-511b-4411-b2c6-39005dfed6d7"],

Cell["Infinite Cellular Automata", "Item",ExpressionUUID->"aec132c6-935e-4ee3-b86c-813a183c20ad"],

Cell["Extensions of lists", "Item",ExpressionUUID->"afcc2fe8-1089-4344-a472-0475d03105ae"],

Cell["Infinite Arguments", "Item",ExpressionUUID->"3a70d079-d63f-4b02-add3-95f4c697d3ef"]
}, Open  ]]
}, Open  ]],

Cell["Other information", "Subsubsection",
 CellChangeTimes->{{3.7361822750600033`*^9, 
  3.7361822822022877`*^9}},ExpressionUUID->"5f589531-3a9b-47cd-a487-\
fcf2f80aa83f"]
}, Open  ]]
},
NotebookEventActions:>{
 "WindowClose" :> 
  Module[{$CellContext`dy, $CellContext`hr, $CellContext`mn}, \
{$CellContext`dy, $CellContext`hr, $CellContext`mn} = Map[(LinkWrite[
         First[$FrontEnd], 
         FrontEnd`Value[#]]; LinkRead[
         First[$FrontEnd]])& , {"DateLong", "Hour", "Minute"}]; 
    NotebookLocate["LastModified"]; NotebookWrite[
      InputNotebook[], 
      Cell[
       TextData[{
        "Last modified on: ", $CellContext`dy, " at ", $CellContext`hr, 
         ":", $CellContext`mn}], "TemplateInstructions", CellTags -> 
       "LastModified", Deployed -> True, Background -> 
       Lighter[Gray, 0.5]]]]},
WindowSize->{812, 661},
WindowMargins->{{Automatic, 162}, {Automatic, 0}},
WindowFrameElements->{"CloseBox"},
DockedCells->Cell[
 "Wolfram Summer School 2018", FontFamily -> "Source Sans Pro", FontSize -> 
  42, FontVariations -> {"CapsType" -> "AllCaps"}, 
  RGBColor[0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
  Background -> RGBColor[1., 0.807843137254902, 0.2549019607843137]],
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["TemplateProjectTitle", StyleDefinitions -> StyleData["Title"]],
     CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData["TemplateLabel", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontWeight -> Bold, FontColor -> 
    RGBColor[0.25098039215686274`, 0.25098039215686274`, 
      0.25098039215686274`], Background -> None], 
   Cell[
    StyleData["TemplateInstructions", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, ShowCellBracket -> False, FontSize -> 16], 
   Cell[
    StyleData["TemplateAuthorInfo", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData[
    "TemplateSectionHeaders", StyleDefinitions -> StyleData["Section"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    ShowCellBracket -> False, Deployed -> True], 
   Cell[
    StyleData[
    "TemplateSectionSubHeaders", StyleDefinitions -> StyleData["Subsection"]],
     Editable -> False, ShowCellBracket -> False], 
   Cell[
    StyleData[
    "TemplateSectionSubSubHeaders", StyleDefinitions -> 
     StyleData["Subsubsection"]], Editable -> False, ShowCellBracket -> 
    False], 
   Cell[
    StyleData[
    "TemplateEditableHeader", StyleDefinitions -> StyleData["Subsubsection"]],
     FontColor -> RGBColor[1., 0.5058823529411764, 0.]], 
   Cell[
    StyleData[
    "TemplateEditableContent", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> True, ShowCellBracket -> False, 
    CellMargins -> {{25, 20}, {5, 5}}, Evaluatable -> False, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData[
    "TemplateEditableInput", StyleDefinitions -> StyleData["Input"]], 
    Editable -> True, CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, 
    Evaluatable -> True, ShowCellLabel -> True, CellFrameColor -> 
    GrayLevel[0.85]], 
   Cell[
    StyleData["TemplateDivider", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, PageWidth -> 
    WindowWidth, CellFrame -> {{False, False}, {8, False}}, ShowCellBracket -> 
    False, CellMargins -> {{0, -10}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, Deployed -> True, 
    CellFrameMargins -> {{10, 10}, {1, 1}}, CellFrameColor -> 
    RGBColor[1, 0.5, 0], Background -> 
    RGBColor[1., 0.807843137254902, 0.2549019607843137]]}, Visible -> False, 
  FrontEndVersion -> "11.3 for Microsoft Windows (64-bit) (March 6, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "LastModified"->{
  Cell[400, 13, 226, 5, 51, "TemplateInstructions",ExpressionUUID->"ad986c1c-4081-4977-b127-43247f52a7f1",
   CellTags->"LastModified"]},
 "AuthorInfo"->{
  Cell[651, 22, 218, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6",
   CellTags->"AuthorInfo"]},
 "PosterContent"->{
  Cell[1916, 59, 234, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637",
   CellTags->"PosterContent"]},
 "PresentationContent"->{
  Cell[81817, 1430, 252, 6, 67, "TemplateSectionHeaders",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-57044e03e425",
   CellTags->"PresentationContent"]},
 "ProjectNotes"->{
  Cell[115171, 2280, 231, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e",
   CellTags->"ProjectNotes"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"LastModified", 224400, 5333},
 {"AuthorInfo", 224555, 5336},
 {"PosterContent", 224713, 5339},
 {"PresentationContent", 224881, 5342},
 {"ProjectNotes", 225051, 5345}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 226, 5, 51, "TemplateInstructions",ExpressionUUID->"ad986c1c-4081-4977-b127-43247f52a7f1",
 CellTags->"LastModified"],
Cell[CellGroupData[{
Cell[651, 22, 218, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6",
 CellTags->"AuthorInfo"],
Cell[872, 29, 329, 7, 47, "TemplateAuthorInfo",ExpressionUUID->"2214bf82-cb91-41b2-a79f-ecd872282532"],
Cell[1204, 38, 319, 7, 47, "TemplateAuthorInfo",ExpressionUUID->"1d803eb4-64f6-4601-a1a0-49b5afc9692c"],
Cell[1526, 47, 353, 7, 47, "TemplateAuthorInfo",ExpressionUUID->"f3f2c56d-6554-49c0-a8f0-7c8d2bae5215"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1916, 59, 234, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637",
 CellTags->"PosterContent"],
Cell[2153, 66, 413, 8, 49, "TemplateEditableContent",ExpressionUUID->"16215b85-c481-4f11-8175-b0652d7bbfad"],
Cell[2569, 76, 1035, 18, 179, "TemplateEditableContent",ExpressionUUID->"c662dd0a-9849-40e8-bc89-a9f688107475"],
Cell[3607, 96, 331, 8, 58, "TemplateInstructions",ExpressionUUID->"ec924e65-f9fc-4678-8fe3-95cd292f053c"],
Cell[3941, 106, 74328, 1230, 265, "TemplateEditableContent",ExpressionUUID->"32f16ef4-646e-45ed-a15a-a912cfc9ecd6"],
Cell[78272, 1338, 650, 13, 113, "TemplateEditableContent",ExpressionUUID->"ba2205bf-d701-4ef5-aa12-c7a7f1002441"],
Cell[78925, 1353, 681, 13, 91, "TemplateEditableContent",ExpressionUUID->"e44105f6-e95a-4d28-9e4d-8a40b3d4e596"],
Cell[79609, 1368, 99, 1, 19, "Input",ExpressionUUID->"4a721f19-623c-47ad-bb58-c6de867557f0",
 CellOpen->False],
Cell[79711, 1371, 2069, 54, 37, "TemplateDivider",ExpressionUUID->"3dd6c29c-0c7c-4de9-8e57-c12593f67d71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81817, 1430, 252, 6, 67, "TemplateSectionHeaders",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-57044e03e425",
 CellTags->"PresentationContent"],
Cell[82072, 1438, 1395, 29, 86, "TemplateInstructions",ExpressionUUID->"a415c0fc-f692-474a-a3a1-95fb4df9ef20"],
Cell[CellGroupData[{
Cell[83492, 1471, 215, 4, 44, "TemplateEditableHeader",ExpressionUUID->"a82eb68b-c55f-495d-ac5a-d97167784e73"],
Cell[83710, 1477, 283, 7, 57, "TemplateEditableContent",ExpressionUUID->"c93624b0-8e9f-452c-9c74-674d9e990fed"],
Cell[83996, 1486, 313, 7, 57, "TemplateEditableContent",ExpressionUUID->"0873015d-c800-452b-9f9c-6cf07209b9ab"],
Cell[84312, 1495, 737, 17, 92, "TemplateEditableInput",ExpressionUUID->"168282be-eb8e-4cf5-9e98-fe245b8338a1"],
Cell[85052, 1514, 718, 17, 53, "TemplateEditableInput",ExpressionUUID->"10563911-b174-41fe-bd01-4afdf1d8d713"],
Cell[85773, 1533, 213, 4, 57, "TemplateEditableContent",ExpressionUUID->"77113ce2-61a2-4a2a-80d4-255780d6b178"],
Cell[85989, 1539, 568, 15, 73, "TemplateEditableInput",ExpressionUUID->"65c93228-96bd-4cee-bb89-90350180a825"],
Cell[86560, 1556, 778, 22, 73, "TemplateEditableInput",ExpressionUUID->"322919dc-8e37-41ba-a71c-7d29f2f43250"],
Cell[87341, 1580, 300, 7, 57, "TemplateEditableContent",ExpressionUUID->"810da60d-638d-4129-996c-be981ac3fe28"],
Cell[87644, 1589, 442, 10, 53, "TemplateEditableInput",ExpressionUUID->"38551ab4-7ace-4b2f-a9a9-a07f658b0c0c"],
Cell[88089, 1601, 407, 10, 53, "TemplateEditableInput",ExpressionUUID->"8c1e3270-3c04-47c5-b7a8-0cad730c19fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88533, 1616, 196, 4, 44, "TemplateEditableHeader",ExpressionUUID->"d81a2f92-5f84-4614-aee9-dcb6b7eeac79"],
Cell[88732, 1622, 266, 6, 57, "TemplateEditableContent",ExpressionUUID->"9d8b740a-384d-45c7-a651-60fa5fc4eeed"],
Cell[89001, 1630, 1034, 26, 130, "TemplateEditableInput",ExpressionUUID->"61001d85-00cf-4dfd-817c-055db2dc7652"],
Cell[90038, 1658, 2125, 52, 183, "TemplateEditableInput",ExpressionUUID->"9541e6c4-1d69-4df6-8b3b-e8c2276b7c20"],
Cell[92166, 1712, 329, 7, 101, "TemplateEditableContent",ExpressionUUID->"ae89b08c-08e5-429a-9666-be9672c6d839"],
Cell[92498, 1721, 1030, 28, 130, "TemplateEditableInput",ExpressionUUID->"1ee13e03-5bf6-4655-a299-ab974070e0ba"],
Cell[93531, 1751, 12927, 286, 448, "TemplateEditableInput",ExpressionUUID->"20197eb1-0a2c-4e3a-a068-01939f0a01f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106495, 2042, 212, 4, 44, "TemplateEditableHeader",ExpressionUUID->"37dac56d-c7b7-42f4-a213-8f585c953197"],
Cell[106710, 2048, 357, 9, 79, "TemplateEditableContent",ExpressionUUID->"c104e2eb-d293-4a31-baa8-d271773768ac"],
Cell[107070, 2059, 1207, 31, 111, "TemplateEditableInput",ExpressionUUID->"0c0448dd-fd6c-44e7-9540-b45524662c69"],
Cell[108280, 2092, 677, 18, 142, "TemplateEditableInput",ExpressionUUID->"4243a26b-c3c1-40a4-b481-6c97bbdbdd11"],
Cell[108960, 2112, 309, 7, 57, "TemplateEditableContent",ExpressionUUID->"0a0b2f20-0156-43fa-bd76-894e17e6e46f"],
Cell[109272, 2121, 776, 20, 143, "TemplateEditableInput",ExpressionUUID->"76a3f304-398e-4a06-88b5-fef154f07a00"],
Cell[110051, 2143, 373, 9, 79, "TemplateEditableContent",ExpressionUUID->"010f1506-2d28-4486-aab9-f8276f2dfe7b"],
Cell[110427, 2154, 1471, 39, 316, "TemplateEditableInput",ExpressionUUID->"53b094b3-2c04-4e65-9d4e-c2a5c9fe9b2b"],
Cell[111901, 2195, 99, 1, 19, "Input",ExpressionUUID->"5ddaca3b-16c4-4ddd-a510-a603177f7695",
 CellOpen->False],
Cell[112003, 2198, 3119, 76, 37, "TemplateDivider",ExpressionUUID->"01c4256e-42d0-42b4-b6a6-4fa4583bf2f0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[115171, 2280, 231, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e",
 CellTags->"ProjectNotes"],
Cell[CellGroupData[{
Cell[115427, 2289, 151, 3, 44, "Subsubsection",ExpressionUUID->"c1b785be-a60a-40fe-b1f1-2d83590b38cd"],
Cell[115581, 2294, 286, 6, 56, "Text",ExpressionUUID->"3093e2ee-02d3-470d-9e20-6503447fe167"],
Cell[115870, 2302, 292, 7, 28, "Input",ExpressionUUID->"405db9f0-667a-42e9-8a33-2f40e37286b4"],
Cell[116165, 2311, 132, 1, 34, "Text",ExpressionUUID->"f1ad00bc-7977-48fd-a88e-704a2e5ad3fb"],
Cell[116300, 2314, 1593, 26, 342, "Text",ExpressionUUID->"46578b5f-5761-4cdf-b70d-d913449f1276"],
Cell[117896, 2342, 134, 1, 34, "Text",ExpressionUUID->"409068f9-11a9-4cd5-8969-6b162c1e8d94"],
Cell[118033, 2345, 2186, 33, 1288, "Text",ExpressionUUID->"4a6e6a58-f0bb-4818-856e-74ee29558aa2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120256, 2383, 131, 3, 44, "Subsubsection",ExpressionUUID->"6ebeefbd-4857-42fb-a308-27aaa279c47f"],
Cell[120390, 2388, 158, 3, 34, "Text",ExpressionUUID->"14e3781a-a52e-4548-bf74-c0aba980dad1"],
Cell[CellGroupData[{
Cell[120573, 2395, 149, 2, 31, "Item",ExpressionUUID->"c5e47558-ad77-48ef-a210-57e48083e7f1"],
Cell[120725, 2399, 414, 9, 51, "Item",ExpressionUUID->"15f4edd9-d972-487b-ae6a-12c1af5581f1"],
Cell[121142, 2410, 222, 3, 31, "Item",ExpressionUUID->"269d52b9-4776-4bd0-b4ec-0a80e467f6ef"]
}, Open  ]],
Cell[121379, 2416, 314, 7, 56, "Text",ExpressionUUID->"eeb61d1a-6281-4c96-8f4d-1327383ea618"],
Cell[121696, 2425, 2910, 81, 195, "Code",ExpressionUUID->"5f37793d-f00d-4888-bcea-395bc9d1256b"],
Cell[124609, 2508, 2149, 59, 231, "Code",ExpressionUUID->"caf5c791-b3f5-4045-9609-7527154f6f6e"],
Cell[126761, 2569, 1756, 52, 177, "Code",ExpressionUUID->"7986f34b-aba0-417e-843e-f34a097f2b74"],
Cell[128520, 2623, 1274, 41, 123, "Code",ExpressionUUID->"f776c7bf-8243-4e84-9e28-e20432402803"],
Cell[129797, 2666, 1312, 38, 141, "Code",ExpressionUUID->"d1e51ae0-b3be-4077-96ba-f68db592a6eb"],
Cell[131112, 2706, 13041, 380, 663, "Code",ExpressionUUID->"59a2a3a3-9634-40bb-be49-e3122be7c779"],
Cell[144156, 3088, 352, 9, 69, "Code",ExpressionUUID->"e9d1463f-0a9f-45f1-a0c2-bb40a088b8d3"],
Cell[144511, 3099, 2574, 70, 195, "Code",ExpressionUUID->"687685fd-abb0-46c5-8d68-111f7f86544a"],
Cell[147088, 3171, 15114, 436, 933, "Code",ExpressionUUID->"7c67000d-9dd3-4a5d-adc5-54bd80235180"],
Cell[162205, 3609, 3412, 98, 339, "Code",ExpressionUUID->"931418bf-13dd-43de-bb27-ee7a1a2ae588"],
Cell[165620, 3709, 5223, 149, 339, "Code",ExpressionUUID->"8de54154-bd8d-42dd-9652-be46f547333d"],
Cell[170846, 3860, 3018, 84, 267, "Code",ExpressionUUID->"a7ab768a-6520-4821-97a4-5eeaebae4f7e"],
Cell[173867, 3946, 2228, 63, 177, "Code",ExpressionUUID->"bc47540b-36e0-4a1c-9fe6-193ea0e545f0"],
Cell[176098, 4011, 2528, 72, 213, "Code",ExpressionUUID->"ad420a45-f850-44bb-a9e6-8f6583008c35"],
Cell[178629, 4085, 5436, 152, 411, "Code",ExpressionUUID->"fd76d6dc-53f5-48c0-9bf9-ce566c7dd528"],
Cell[184068, 4239, 708, 19, 87, "Code",ExpressionUUID->"4f7e0668-f9aa-41d0-bca4-ec2e0c711f22"],
Cell[184779, 4260, 383, 10, 69, "Code",ExpressionUUID->"44b60bcf-019d-4ce9-b22c-58eb7f74f56d"],
Cell[185165, 4272, 3475, 98, 357, "Code",ExpressionUUID->"1d4af85b-3163-47c3-ae91-1399fd00b32d"],
Cell[188643, 4372, 3049, 84, 303, "Code",ExpressionUUID->"114d6f7d-6b0d-422e-bdfa-01a1a05efb45"],
Cell[191695, 4458, 5097, 142, 375, "Code",ExpressionUUID->"59a6c99c-2cbf-4639-b216-47ba5c78cc7d"],
Cell[196795, 4602, 2519, 63, 357, "Code",ExpressionUUID->"0c1133d3-d43e-4286-85da-7f54e223891e"],
Cell[199317, 4667, 737, 19, 87, "Code",ExpressionUUID->"725fb24b-a768-416f-af2b-c1d0eab6a7f8"],
Cell[200057, 4688, 1562, 47, 159, "Code",ExpressionUUID->"7325c305-97ee-4b46-866f-fe176bda1efc"],
Cell[201622, 4737, 2460, 68, 213, "Code",ExpressionUUID->"852d3fa7-192b-4801-a11b-6def670a7f0a"],
Cell[204085, 4807, 2591, 69, 231, "Code",ExpressionUUID->"087b6b8d-f93d-4045-8cc8-6685f531af38"],
Cell[206679, 4878, 1518, 39, 195, "Code",ExpressionUUID->"268a7195-3d17-4084-a068-ab1750d6d8cc"],
Cell[208200, 4919, 7510, 192, 807, "Code",ExpressionUUID->"4437e564-2c12-4798-84bb-9fa10e70c327"],
Cell[215713, 5113, 112, 1, 50, "Code",ExpressionUUID->"31f6ec73-c776-4353-aa06-e1f9b68002ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215862, 5119, 157, 3, 44, "Subsubsection",ExpressionUUID->"ba68b18e-0118-4694-9cc8-e616df451654"],
Cell[216022, 5124, 86, 0, 34, "Text",ExpressionUUID->"c569ff5e-302a-42ad-a60e-bd8204ee2c1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216145, 5129, 148, 3, 44, "Subsubsection",ExpressionUUID->"405e0fe7-2022-4d50-b275-5f85c6659f37"],
Cell[216296, 5134, 1143, 20, 232, "Text",ExpressionUUID->"f3e2b6ab-35e6-46ab-be5a-cf1ec0c28105"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217476, 5159, 169, 3, 44, "Subsubsection",ExpressionUUID->"aa59b7ca-7848-48f1-96cf-6286c1fabb09"],
Cell[217648, 5164, 144, 2, 34, "Text",ExpressionUUID->"6f5c3c8b-3721-4a6d-b68e-e9a2a0181d62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217829, 5171, 156, 3, 44, "Subsubsection",ExpressionUUID->"8d03133e-d036-4673-985c-415dd5ec88bb"],
Cell[217988, 5176, 86, 0, 34, "Text",ExpressionUUID->"d3c43c50-54d3-4a4e-9e61-da22cf00b0d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218111, 5181, 168, 3, 44, "Subsubsection",ExpressionUUID->"9afe7952-52cb-49e5-812a-edf95df8c363"],
Cell[218282, 5186, 315, 5, 78, "Text",ExpressionUUID->"8bfa6a3b-1c12-4faf-b2c9-0a2a866fef97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218634, 5196, 159, 3, 44, "Subsubsection",ExpressionUUID->"19b709dc-5a9b-4a0e-8d93-1058844be4dd"],
Cell[218796, 5201, 459, 7, 122, "Text",ExpressionUUID->"a18548e5-0fab-4f07-bbb0-a4bad4e70d8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219292, 5213, 132, 2, 44, "Subsubsection",ExpressionUUID->"6668b03b-4180-4966-b673-b20f85cb5927"],
Cell[219427, 5217, 219, 4, 34, "Text",ExpressionUUID->"a5e5e177-980c-46c4-8f4b-7804400a13ff"],
Cell[CellGroupData[{
Cell[219671, 5225, 85, 0, 31, "Item",ExpressionUUID->"3cadd99b-d013-4952-a76a-417ee2cff751"],
Cell[219759, 5227, 86, 0, 31, "Item",ExpressionUUID->"461942e2-511b-4411-b2c6-39005dfed6d7"],
Cell[219848, 5229, 97, 0, 31, "Item",ExpressionUUID->"aec132c6-935e-4ee3-b86c-813a183c20ad"],
Cell[219948, 5231, 90, 0, 31, "Item",ExpressionUUID->"afcc2fe8-1089-4344-a472-0475d03105ae"],
Cell[220041, 5233, 89, 0, 31, "Item",ExpressionUUID->"3a70d079-d63f-4b02-add3-95f4c697d3ef"]
}, Open  ]]
}, Open  ]],
Cell[220157, 5237, 172, 3, 44, "Subsubsection",ExpressionUUID->"5f589531-3a9b-47cd-a487-fcf2f80aa83f"]
}, Open  ]]
}
]
*)

